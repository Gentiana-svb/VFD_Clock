

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Apr 22 22:40:38 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F27Q10
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    40                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    41                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    42                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    43                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    44  0000                     
    45                           ; Version 2.30
    46                           ; Generated 20/08/2020 GMT
    47                           ; 
    48                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    49                           ; All rights reserved.
    50                           ; 
    51                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    52                           ; 
    53                           ; Redistribution and use in source and binary forms, with or without modification, are
    54                           ; permitted provided that the following conditions are met:
    55                           ; 
    56                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    57                           ;        conditions and the following disclaimer.
    58                           ; 
    59                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    60                           ;        of conditions and the following disclaimer in the documentation and/or other
    61                           ;        materials provided with the distribution. Publication is not required when
    62                           ;        this file is used in an embedded application.
    63                           ; 
    64                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    65                           ;        software without specific prior written permission.
    66                           ; 
    67                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    68                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    69                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    70                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    71                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    72                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    73                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    74                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    75                           ; 
    76                           ; 
    77                           ; Code-generator required, PIC18F27Q10 Definitions
    78                           ; 
    79                           ; SFR Addresses
    80  0000                     
    81                           	psect	smallconst
    82  000F00                     __psmallconst:
    83                           	callstack 0
    84  000F00  00                 	db	0
    85  000F01                     Check_Seg@data:
    86                           	callstack 0
    87  000F01  01                 	db	1
    88  000F02  01                 	db	1
    89  000F03  01                 	db	1
    90  000F04  01                 	db	1
    91  000F05  01                 	db	1
    92  000F06  01                 	db	1
    93  000F07  00                 	db	0
    94  000F08  00                 	db	0
    95  000F09  00                 	db	0
    96  000F0A  01                 	db	1
    97  000F0B  01                 	db	1
    98  000F0C  00                 	db	0
    99  000F0D  00                 	db	0
   100  000F0E  00                 	db	0
   101  000F0F  00                 	db	0
   102  000F10  00                 	db	0
   103  000F11  01                 	db	1
   104  000F12  01                 	db	1
   105  000F13  00                 	db	0
   106  000F14  01                 	db	1
   107  000F15  01                 	db	1
   108  000F16  00                 	db	0
   109  000F17  01                 	db	1
   110  000F18  00                 	db	0
   111  000F19  01                 	db	1
   112  000F1A  01                 	db	1
   113  000F1B  01                 	db	1
   114  000F1C  01                 	db	1
   115  000F1D  00                 	db	0
   116  000F1E  00                 	db	0
   117  000F1F  01                 	db	1
   118  000F20  00                 	db	0
   119  000F21  00                 	db	0
   120  000F22  01                 	db	1
   121  000F23  01                 	db	1
   122  000F24  00                 	db	0
   123  000F25  00                 	db	0
   124  000F26  01                 	db	1
   125  000F27  01                 	db	1
   126  000F28  00                 	db	0
   127  000F29  01                 	db	1
   128  000F2A  00                 	db	0
   129  000F2B  01                 	db	1
   130  000F2C  01                 	db	1
   131  000F2D  00                 	db	0
   132  000F2E  01                 	db	1
   133  000F2F  01                 	db	1
   134  000F30  00                 	db	0
   135  000F31  01                 	db	1
   136  000F32  00                 	db	0
   137  000F33  01                 	db	1
   138  000F34  01                 	db	1
   139  000F35  01                 	db	1
   140  000F36  01                 	db	1
   141  000F37  01                 	db	1
   142  000F38  00                 	db	0
   143  000F39  01                 	db	1
   144  000F3A  01                 	db	1
   145  000F3B  01                 	db	1
   146  000F3C  00                 	db	0
   147  000F3D  00                 	db	0
   148  000F3E  00                 	db	0
   149  000F3F  00                 	db	0
   150  000F40  00                 	db	0
   151  000F41  01                 	db	1
   152  000F42  01                 	db	1
   153  000F43  01                 	db	1
   154  000F44  01                 	db	1
   155  000F45  01                 	db	1
   156  000F46  01                 	db	1
   157  000F47  01                 	db	1
   158  000F48  00                 	db	0
   159  000F49  01                 	db	1
   160  000F4A  01                 	db	1
   161  000F4B  01                 	db	1
   162  000F4C  01                 	db	1
   163  000F4D  00                 	db	0
   164  000F4E  01                 	db	1
   165  000F4F  01                 	db	1
   166  000F50  00                 	db	0
   167  000F51                     __end_ofCheck_Seg@data:
   168                           	callstack 0
   169  000F51  0100               	dw	256
   170  000F53                     __end_ofDuty_Controll@cnt_limit:
   171                           	callstack 0
   172  0000                     _RC3PPS	set	3829
   173  0000                     _RX1PPS	set	3760
   174  0000                     _PPSLOCK	set	3739
   175  0000                     _OSCFRQ	set	3801
   176  0000                     _OSCCON1	set	3795
   177  0000                     _RCIE	set	30213
   178  0000                     _RCIF	set	30277
   179  0000                     _TMR0IF	set	30253
   180  0000                     _TMR0IE	set	30189
   181  0000                     _ANSELC	set	3868
   182  0000                     _ANSELB	set	3860
   183  0000                     _ANSELA	set	3852
   184  0000                     _RCREG	set	3992
   185  0000                     _RC1STAbits	set	3996
   186  0000                     _TXREG	set	3993
   187  0000                     _TX1STAbits	set	3997
   188  0000                     _SPBRG	set	3994
   189  0000                     _RCSTA	set	3996
   190  0000                     _TXSTA	set	3997
   191  0000                     _PWM4DCL	set	3999
   192  0000                     _PWM4DCH	set	4000
   193  0000                     _PWM3DCL	set	4002
   194  0000                     _PWM3DCH	set	4003
   195  0000                     _TMR0L	set	4050
   196  0000                     _TMR0H	set	4051
   197  0000                     _INTCONbits	set	4082
   198  0000                     _CCPTMRSbits	set	4013
   199  0000                     _PWM3CON	set	4004
   200  0000                     _T2CON	set	4028
   201  0000                     _T2PR	set	4027
   202  0000                     _T2CLKCON	set	4030
   203  0000                     _T0CON1	set	4053
   204  0000                     _T0CON0	set	4052
   205  0000                     _TRISC	set	3977
   206  0000                     _TRISB	set	3976
   207  0000                     _TRISA	set	3975
   208  0000                     _LATC6	set	31782
   209  0000                     _LATC7	set	31783
   210  0000                     _LATC5	set	31781
   211  0000                     _RB3	set	31851
   212  0000                     _PEIE	set	32662
   213  000F53  00                 	db	0	; dummy byte at the end
   214  0000                     
   215                           ; #config settings
   216                           
   217                           	psect	cinit
   218  0034B0                     __pcinit:
   219                           	callstack 0
   220  0034B0                     start_initialization:
   221                           	callstack 0
   222  0034B0                     __initialization:
   223                           	callstack 0
   224                           
   225                           ; Clear objects allocated to BANK0 (9 bytes)
   226  0034B0  EE00  F0BC         	lfsr	0,__pbssBANK0
   227  0034B4  0E09               	movlw	9
   228  0034B6                     clear_0:
   229  0034B6  6AEE               	clrf	postinc0,c
   230  0034B8  06E8               	decf	wreg,f,c
   231  0034BA  E1FD               	bnz	clear_0
   232                           
   233                           ; Clear objects allocated to COMRAM (16 bytes)
   234  0034BC  EE00  F03E         	lfsr	0,__pbssCOMRAM
   235  0034C0  0E10               	movlw	16
   236  0034C2                     clear_1:
   237  0034C2  6AEE               	clrf	postinc0,c
   238  0034C4  06E8               	decf	wreg,f,c
   239  0034C6  E1FD               	bnz	clear_1
   240  0034C8                     end_of_initialization:
   241                           	callstack 0
   242  0034C8                     __end_of__initialization:
   243                           	callstack 0
   244  0034C8  904E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   245  0034CA  924E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   246  0034CC  0100               	movlb	0
   247  0034CE  EFB3  F019         	goto	_main	;jump to C main() function
   248                           
   249                           	psect	bssCOMRAM
   250  00003E                     __pbssCOMRAM:
   251                           	callstack 0
   252  00003E                     T0_int2@cnt:
   253                           	callstack 0
   254  00003E                     	ds	2
   255  000040                     RTC_Read@cnt:
   256                           	callstack 0
   257  000040                     	ds	2
   258  000042                     T0_int2@flag:
   259                           	callstack 0
   260  000042                     	ds	1
   261  000043                     _g_t0_f:
   262                           	callstack 0
   263  000043                     	ds	1
   264  000044                     RTC_Read@str:
   265                           	callstack 0
   266  000044                     	ds	10
   267                           
   268                           	psect	bssBANK0
   269  0000BC                     __pbssBANK0:
   270                           	callstack 0
   271  0000BC                     _g_time:
   272                           	callstack 0
   273  0000BC                     	ds	4
   274  0000C0                     T0_int@cnt:
   275                           	callstack 0
   276  0000C0                     	ds	2
   277  0000C2                     Duty_Controll@cnt:
   278                           	callstack 0
   279  0000C2                     	ds	2
   280  0000C4                     T0_int@flag:
   281                           	callstack 0
   282  0000C4                     	ds	1
   283                           
   284                           	psect	cstackBANK0
   285  000060                     __pcstackBANK0:
   286                           	callstack 0
   287  000060                     ?___lldiv:
   288                           	callstack 0
   289  000060                     ?___xxtofl:
   290                           	callstack 0
   291  000060                     Check_Seg@pos:
   292                           	callstack 0
   293  000060                     Set_PWM_Duty@duty:
   294                           	callstack 0
   295  000060                     T0_int@val:
   296                           	callstack 0
   297  000060                     ___lldiv@dividend:
   298                           	callstack 0
   299  000060                     ___xxtofl@val:
   300                           	callstack 0
   301  000060                     MAX6922_Write@data:
   302                           	callstack 0
   303                           
   304                           ; 8 bytes @ 0x0
   305  000060                     	ds	1
   306  000061                     ??_Check_Seg:
   307                           
   308                           ; 1 bytes @ 0x1
   309  000061                     	ds	1
   310  000062                     ??_Set_PWM_Duty:
   311  000062                     ??_T0_int:
   312                           
   313                           ; 1 bytes @ 0x2
   314  000062                     	ds	1
   315  000063                     Check_Seg@num:
   316                           	callstack 0
   317                           
   318                           ; 1 bytes @ 0x3
   319  000063                     	ds	1
   320  000064                     ??___xxtofl:
   321  000064                     Set_PWM_Duty@ch:
   322                           	callstack 0
   323  000064                     Bit_Write@ptr:
   324                           	callstack 0
   325  000064                     ___lldiv@divisor:
   326                           	callstack 0
   327                           
   328                           ; 4 bytes @ 0x4
   329  000064                     	ds	1
   330  000065                     
   331                           ; 1 bytes @ 0x5
   332  000065                     	ds	1
   333  000066                     Bit_Write@num:
   334                           	callstack 0
   335                           
   336                           ; 1 bytes @ 0x6
   337  000066                     	ds	1
   338  000067                     Bit_Write@data:
   339                           	callstack 0
   340                           
   341                           ; 1 bytes @ 0x7
   342  000067                     	ds	1
   343  000068                     ??_Bit_Write:
   344  000068                     ??_MAX6922_Write:
   345  000068                     ___xxtofl@sign:
   346                           	callstack 0
   347  000068                     ___lldiv@quotient:
   348                           	callstack 0
   349                           
   350                           ; 4 bytes @ 0x8
   351  000068                     	ds	1
   352  000069                     ___xxtofl@exp:
   353                           	callstack 0
   354                           
   355                           ; 1 bytes @ 0x9
   356  000069                     	ds	1
   357  00006A                     ___xxtofl@arg:
   358                           	callstack 0
   359                           
   360                           ; 4 bytes @ 0xA
   361  00006A                     	ds	2
   362  00006C                     ___lldiv@counter:
   363                           	callstack 0
   364                           
   365                           ; 1 bytes @ 0xC
   366  00006C                     	ds	1
   367  00006D                     ?___llmod:
   368                           	callstack 0
   369  00006D                     ___llmod@dividend:
   370                           	callstack 0
   371                           
   372                           ; 4 bytes @ 0xD
   373  00006D                     	ds	1
   374  00006E                     ?___flmul:
   375                           	callstack 0
   376  00006E                     ___flmul@b:
   377                           	callstack 0
   378                           
   379                           ; 4 bytes @ 0xE
   380  00006E                     	ds	2
   381  000070                     MAX6922_Write@i:
   382                           	callstack 0
   383                           
   384                           ; 2 bytes @ 0x10
   385  000070                     	ds	1
   386  000071                     ___llmod@divisor:
   387                           	callstack 0
   388                           
   389                           ; 4 bytes @ 0x11
   390  000071                     	ds	1
   391  000072                     ___flmul@a:
   392                           	callstack 0
   393                           
   394                           ; 4 bytes @ 0x12
   395  000072                     	ds	3
   396  000075                     ___llmod@counter:
   397                           	callstack 0
   398                           
   399                           ; 1 bytes @ 0x15
   400  000075                     	ds	1
   401  000076                     ??___flmul:
   402                           
   403                           ; 1 bytes @ 0x16
   404  000076                     	ds	3
   405  000079                     VFD_Write@data:
   406                           	callstack 0
   407                           
   408                           ; 4 bytes @ 0x19
   409  000079                     	ds	1
   410  00007A                     ___flmul@sign:
   411                           	callstack 0
   412                           
   413                           ; 1 bytes @ 0x1A
   414  00007A                     	ds	1
   415  00007B                     ___flmul@grs:
   416                           	callstack 0
   417                           
   418                           ; 4 bytes @ 0x1B
   419  00007B                     	ds	2
   420  00007D                     VFD_Write@buff:
   421                           	callstack 0
   422                           
   423                           ; 6 bytes @ 0x1D
   424  00007D                     	ds	2
   425  00007F                     ___flmul@aexp:
   426                           	callstack 0
   427                           
   428                           ; 1 bytes @ 0x1F
   429  00007F                     	ds	1
   430  000080                     ___flmul@bexp:
   431                           	callstack 0
   432                           
   433                           ; 1 bytes @ 0x20
   434  000080                     	ds	1
   435  000081                     ___flmul@prod:
   436                           	callstack 0
   437                           
   438                           ; 4 bytes @ 0x21
   439  000081                     	ds	2
   440  000083                     VFD_Write@temp:
   441                           	callstack 0
   442                           
   443                           ; 8 bytes @ 0x23
   444  000083                     	ds	2
   445  000085                     ___flmul@temp:
   446                           	callstack 0
   447                           
   448                           ; 2 bytes @ 0x25
   449  000085                     	ds	2
   450  000087                     ?___fldiv:
   451                           	callstack 0
   452  000087                     ___fldiv@b:
   453                           	callstack 0
   454                           
   455                           ; 4 bytes @ 0x27
   456  000087                     	ds	4
   457  00008B                     ___fldiv@a:
   458                           	callstack 0
   459                           
   460                           ; 4 bytes @ 0x2B
   461  00008B                     	ds	4
   462  00008F                     ??___fldiv:
   463                           
   464                           ; 1 bytes @ 0x2F
   465  00008F                     	ds	4
   466  000093                     ___fldiv@rem:
   467                           	callstack 0
   468                           
   469                           ; 4 bytes @ 0x33
   470  000093                     	ds	4
   471  000097                     ___fldiv@sign:
   472                           	callstack 0
   473                           
   474                           ; 1 bytes @ 0x37
   475  000097                     	ds	1
   476  000098                     ___fldiv@new_exp:
   477                           	callstack 0
   478                           
   479                           ; 2 bytes @ 0x38
   480  000098                     	ds	2
   481  00009A                     ___fldiv@grs:
   482                           	callstack 0
   483                           
   484                           ; 4 bytes @ 0x3A
   485  00009A                     	ds	4
   486  00009E                     ___fldiv@bexp:
   487                           	callstack 0
   488                           
   489                           ; 1 bytes @ 0x3E
   490  00009E                     	ds	1
   491  00009F                     ___fldiv@aexp:
   492                           	callstack 0
   493                           
   494                           ; 1 bytes @ 0x3F
   495  00009F                     	ds	1
   496  0000A0                     ?___fladd:
   497                           	callstack 0
   498  0000A0                     ___fladd@b:
   499                           	callstack 0
   500                           
   501                           ; 4 bytes @ 0x40
   502  0000A0                     	ds	4
   503  0000A4                     ___fladd@a:
   504                           	callstack 0
   505                           
   506                           ; 4 bytes @ 0x44
   507  0000A4                     	ds	4
   508  0000A8                     ??___fladd:
   509                           
   510                           ; 1 bytes @ 0x48
   511  0000A8                     	ds	4
   512  0000AC                     ___fladd@signs:
   513                           	callstack 0
   514                           
   515                           ; 1 bytes @ 0x4C
   516  0000AC                     	ds	1
   517  0000AD                     ___fladd@aexp:
   518                           	callstack 0
   519                           
   520                           ; 1 bytes @ 0x4D
   521  0000AD                     	ds	1
   522  0000AE                     ___fladd@bexp:
   523                           	callstack 0
   524                           
   525                           ; 1 bytes @ 0x4E
   526  0000AE                     	ds	1
   527  0000AF                     ___fladd@grs:
   528                           	callstack 0
   529                           
   530                           ; 1 bytes @ 0x4F
   531  0000AF                     	ds	1
   532  0000B0                     ?___fltol:
   533                           	callstack 0
   534  0000B0                     ___fltol@f1:
   535                           	callstack 0
   536                           
   537                           ; 4 bytes @ 0x50
   538  0000B0                     	ds	4
   539  0000B4                     ??___fltol:
   540                           
   541                           ; 1 bytes @ 0x54
   542  0000B4                     	ds	4
   543  0000B8                     ___fltol@sign1:
   544                           	callstack 0
   545                           
   546                           ; 1 bytes @ 0x58
   547  0000B8                     	ds	1
   548  0000B9                     ___fltol@exp1:
   549                           	callstack 0
   550                           
   551                           ; 1 bytes @ 0x59
   552  0000B9                     	ds	1
   553  0000BA                     UART_Init@baud:
   554                           	callstack 0
   555                           
   556                           ; 2 bytes @ 0x5A
   557  0000BA                     	ds	2
   558  0000BC                     
   559                           ; 1 bytes @ 0x5C
   560                           
   561                           	psect	cstackCOMRAM
   562  000001                     __pcstackCOMRAM:
   563                           	callstack 0
   564  000001                     ?_isspace:
   565                           	callstack 0
   566  000001                     ?_isdigit:
   567                           	callstack 0
   568  000001                     ?___lmul:
   569                           	callstack 0
   570  000001                     ?i2___lldiv:
   571                           	callstack 0
   572  000001                     isdigit@c:
   573                           	callstack 0
   574  000001                     isspace@c:
   575                           	callstack 0
   576  000001                     memset@dest:
   577                           	callstack 0
   578  000001                     ___lmul@multiplier:
   579                           	callstack 0
   580  000001                     i2___lldiv@dividend:
   581                           	callstack 0
   582                           
   583                           ; 4 bytes @ 0x0
   584  000001                     	ds	2
   585  000003                     ??_isspace:
   586  000003                     ??_isdigit:
   587  000003                     memset@c:
   588                           	callstack 0
   589                           
   590                           ; 2 bytes @ 0x2
   591  000003                     	ds	2
   592  000005                     memset@n:
   593                           	callstack 0
   594  000005                     ___lmul@multiplicand:
   595                           	callstack 0
   596  000005                     i2___lldiv@divisor:
   597                           	callstack 0
   598                           
   599                           ; 4 bytes @ 0x4
   600  000005                     	ds	2
   601  000007                     ??_memset:
   602  000007                     _isspace$796:
   603                           	callstack 0
   604                           
   605                           ; 1 bytes @ 0x6
   606  000007                     	ds	2
   607  000009                     memset@k:
   608                           	callstack 0
   609  000009                     ___lmul@product:
   610                           	callstack 0
   611  000009                     i2___lldiv@quotient:
   612                           	callstack 0
   613                           
   614                           ; 4 bytes @ 0x8
   615  000009                     	ds	2
   616  00000B                     memset@s:
   617                           	callstack 0
   618                           
   619                           ; 2 bytes @ 0xA
   620  00000B                     	ds	2
   621  00000D                     ?_atol:
   622                           	callstack 0
   623  00000D                     i2___lldiv@counter:
   624                           	callstack 0
   625  00000D                     atol@s:
   626                           	callstack 0
   627                           
   628                           ; 2 bytes @ 0xC
   629  00000D                     	ds	1
   630  00000E                     ?i2___llmod:
   631                           	callstack 0
   632  00000E                     i2___llmod@dividend:
   633                           	callstack 0
   634                           
   635                           ; 4 bytes @ 0xD
   636  00000E                     	ds	3
   637  000011                     ??_atol:
   638                           
   639                           ; 1 bytes @ 0x10
   640  000011                     	ds	1
   641  000012                     i2___llmod@divisor:
   642                           	callstack 0
   643                           
   644                           ; 4 bytes @ 0x11
   645  000012                     	ds	4
   646  000016                     i2___llmod@counter:
   647                           	callstack 0
   648  000016                     atol@neg:
   649                           	callstack 0
   650                           
   651                           ; 2 bytes @ 0x15
   652  000016                     	ds	2
   653  000018                     _atol$778:
   654                           	callstack 0
   655                           
   656                           ; 2 bytes @ 0x17
   657  000018                     	ds	2
   658  00001A                     _atol$780:
   659                           	callstack 0
   660                           
   661                           ; 2 bytes @ 0x19
   662  00001A                     	ds	2
   663  00001C                     _atol$779:
   664                           	callstack 0
   665                           
   666                           ; 1 bytes @ 0x1B
   667  00001C                     	ds	1
   668  00001D                     atol@n:
   669                           	callstack 0
   670                           
   671                           ; 4 bytes @ 0x1C
   672  00001D                     	ds	4
   673  000021                     ?_Convert_data:
   674                           	callstack 0
   675  000021                     Convert_data@data:
   676                           	callstack 0
   677                           
   678                           ; 4 bytes @ 0x20
   679  000021                     	ds	4
   680  000025                     ??_Convert_data:
   681                           
   682                           ; 1 bytes @ 0x24
   683  000025                     	ds	8
   684  00002D                     Convert_data@min:
   685                           	callstack 0
   686                           
   687                           ; 4 bytes @ 0x2C
   688  00002D                     	ds	4
   689  000031                     Convert_data@sec:
   690                           	callstack 0
   691                           
   692                           ; 4 bytes @ 0x30
   693  000031                     	ds	4
   694  000035                     Convert_data@hour:
   695                           	callstack 0
   696                           
   697                           ; 4 bytes @ 0x34
   698  000035                     	ds	4
   699  000039                     ??_RTC_Read:
   700                           
   701                           ; 1 bytes @ 0x38
   702  000039                     	ds	2
   703  00003B                     RTC_Read@data:
   704                           	callstack 0
   705                           
   706                           ; 1 bytes @ 0x3A
   707  00003B                     	ds	1
   708  00003C                     ??_isr:
   709                           
   710                           ; 1 bytes @ 0x3B
   711  00003C                     	ds	2
   712                           
   713 ;;
   714 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   715 ;;
   716 ;; *************** function _main *****************
   717 ;; Defined at:
   718 ;;		line 107 in file "main.c"
   719 ;; Parameters:    Size  Location     Type
   720 ;;		None
   721 ;; Auto vars:     Size  Location     Type
   722 ;;		None
   723 ;; Return value:  Size  Location     Type
   724 ;;                  1    wreg      void 
   725 ;; Registers used:
   726 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   727 ;; Tracked objects:
   728 ;;		On entry : 0/0
   729 ;;		On exit  : 0/0
   730 ;;		Unchanged: 0/0
   731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   733 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   735 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   736 ;;Total ram usage:        0 bytes
   737 ;; Hardware stack levels required when called: 7
   738 ;; This function calls:
   739 ;;		_Duty_Controll
   740 ;;		_T0_int
   741 ;;		_VFD_Write
   742 ;;		_init
   743 ;; This function is called by:
   744 ;;		Startup code after reset
   745 ;; This function uses a non-reentrant model
   746 ;;
   747                           
   748                           	psect	text0
   749  003366                     __ptext0:
   750                           	callstack 0
   751  003366                     _main:
   752                           	callstack 24
   753  003366                     
   754                           ;main.c: 109:     init();
   755  003366  EC05  F018         	call	_init	;wreg free
   756  00336A                     l3066:
   757                           
   758                           ;main.c: 112:         if (T0_int(2)) {
   759  00336A  0E00               	movlw	0
   760  00336C  0100               	movlb	0	; () banked
   761  00336E  6F61               	movwf	(T0_int@val+1)& (0+255),b
   762  003370  0E02               	movlw	2
   763  003372  6F60               	movwf	T0_int@val& (0+255),b
   764  003374  ECDB  F019         	call	_T0_int	;wreg free
   765  003378  0900               	iorlw	0
   766  00337A  B4D8               	btfsc	status,2,c
   767  00337C  EFC2  F019         	goto	u3031
   768  003380  EFC4  F019         	goto	u3030
   769  003384                     u3031:
   770  003384  EFC6  F019         	goto	l3070
   771  003388                     u3030:
   772  003388                     
   773                           ;main.c: 113:             Duty_Controll();
   774  003388  EC01  F01A         	call	_Duty_Controll	;wreg free
   775  00338C                     l3070:
   776                           
   777                           ;main.c: 116:         if (RB3) {
   778  00338C  A68D               	btfss	3981,3,c	;volatile
   779  00338E  EFCB  F019         	goto	u3041
   780  003392  EFCD  F019         	goto	u3040
   781  003396                     u3041:
   782  003396  EFB5  F019         	goto	l3066
   783  00339A                     u3040:
   784  00339A                     
   785                           ;main.c: 117:             VFD_Write(g_time);
   786  00339A  C0BC  F079         	movff	_g_time,VFD_Write@data
   787  00339E  C0BD  F07A         	movff	_g_time+1,VFD_Write@data+1
   788  0033A2  C0BE  F07B         	movff	_g_time+2,VFD_Write@data+2
   789  0033A6  C0BF  F07C         	movff	_g_time+3,VFD_Write@data+3
   790  0033AA  ECAA  F007         	call	_VFD_Write	;wreg free
   791  0033AE  EFB5  F019         	goto	l3066
   792  0033B2  EF32  F000         	goto	start
   793  0033B6                     __end_of_main:
   794                           	callstack 0
   795                           
   796 ;; *************** function _init *****************
   797 ;; Defined at:
   798 ;;		line 53 in file "main.c"
   799 ;; Parameters:    Size  Location     Type
   800 ;;		None
   801 ;; Auto vars:     Size  Location     Type
   802 ;;		None
   803 ;; Return value:  Size  Location     Type
   804 ;;                  1    wreg      void 
   805 ;; Registers used:
   806 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   807 ;; Tracked objects:
   808 ;;		On entry : 0/0
   809 ;;		On exit  : 0/0
   810 ;;		Unchanged: 0/0
   811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   815 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   816 ;;Total ram usage:        0 bytes
   817 ;; Hardware stack levels used: 1
   818 ;; Hardware stack levels required when called: 6
   819 ;; This function calls:
   820 ;;		_Set_PWM_Duty
   821 ;;		_UART_Init
   822 ;; This function is called by:
   823 ;;		_main
   824 ;; This function uses a non-reentrant model
   825 ;;
   826                           
   827                           	psect	text1
   828  00300A                     __ptext1:
   829                           	callstack 0
   830  00300A                     _init:
   831                           	callstack 24
   832  00300A                     
   833                           ;main.c: 56:     OSCCON1 = 0x60;
   834  00300A  0E60               	movlw	96
   835  00300C  010E               	movlb	14	; () banked
   836  00300E  6FD3               	movwf	211,b	;volatile
   837                           
   838                           ;main.c: 57:     OSCFRQ = 0x08;
   839  003010  0E08               	movlw	8
   840  003012  6FD9               	movwf	217,b	;volatile
   841                           
   842                           ;main.c: 60:     TRISA = 0x00;
   843  003014  0E00               	movlw	0
   844  003016  6E87               	movwf	135,c	;volatile
   845                           
   846                           ;main.c: 61:     TRISB = 0x08;
   847  003018  0E08               	movlw	8
   848  00301A  6E88               	movwf	136,c	;volatile
   849                           
   850                           ;main.c: 62:     TRISC = 0x01;
   851  00301C  0E01               	movlw	1
   852  00301E  6E89               	movwf	137,c	;volatile
   853                           
   854                           ;main.c: 65:     ANSELA = 0x00;
   855  003020  0E00               	movlw	0
   856  003022  010F               	movlb	15	; () banked
   857  003024  6F0C               	movwf	12,b	;volatile
   858                           
   859                           ;main.c: 66:     ANSELB = 0x00;
   860  003026  0E00               	movlw	0
   861  003028  6F14               	movwf	20,b	;volatile
   862                           
   863                           ;main.c: 67:     ANSELC = 0x00;
   864  00302A  0E00               	movlw	0
   865  00302C  6F1C               	movwf	28,b	;volatile
   866                           
   867                           ;main.c: 70:     T0CON0 = 0x90;
   868  00302E  0E90               	movlw	144
   869  003030  6ED4               	movwf	212,c	;volatile
   870                           
   871                           ;main.c: 71:     T0CON1 = 0xd0;
   872  003032  0ED0               	movlw	208
   873  003034  6ED5               	movwf	213,c	;volatile
   874  003036                     
   875                           ; BSR set to: 15
   876                           ;main.c: 72:     TMR0IE = 1;
   877  003036  010E               	movlb	14	; () banked
   878  003038  8BBD               	bsf	189,5,b	;volatile
   879                           
   880                           ;main.c: 75:     T2CLKCON = 0x01;
   881  00303A  0E01               	movlw	1
   882  00303C  6EBE               	movwf	190,c	;volatile
   883                           
   884                           ;main.c: 76:     T2PR = 0xfe;
   885  00303E  0EFE               	movlw	254
   886  003040  6EBB               	movwf	187,c	;volatile
   887                           
   888                           ;main.c: 77:     T2CON = 0xf0;
   889  003042  0EF0               	movlw	240
   890  003044  6EBC               	movwf	188,c	;volatile
   891                           
   892                           ;main.c: 80:     PWM3CON = 0x80;
   893  003046  0E80               	movlw	128
   894  003048  6EA4               	movwf	164,c	;volatile
   895                           
   896                           ;main.c: 81:     CCPTMRSbits.P3TSEL = 0x01;
   897  00304A  50AD               	movf	173,w,c	;volatile
   898  00304C  0BCF               	andlw	-49
   899  00304E  0910               	iorlw	16
   900  003050  6EAD               	movwf	173,c	;volatile
   901  003052                     
   902                           ; BSR set to: 14
   903                           ;main.c: 82:     Set_PWM_Duty(3, 0);
   904  003052  0E00               	movlw	0
   905  003054  0100               	movlb	0	; () banked
   906  003056  6F61               	movwf	(Set_PWM_Duty@duty+1)& (0+255),b
   907  003058  0E00               	movlw	0
   908  00305A  6F60               	movwf	Set_PWM_Duty@duty& (0+255),b
   909  00305C  0E03               	movlw	3
   910  00305E  EC1A  F019         	call	_Set_PWM_Duty
   911  003062                     
   912                           ;main.c: 85:     PPSLOCK = 0x55;
   913  003062  0E55               	movlw	85
   914  003064  010E               	movlb	14	; () banked
   915  003066  6F9B               	movwf	155,b	;volsfr
   916  003068                     
   917                           ; BSR set to: 14
   918                           ;main.c: 86:     PPSLOCK = 0xAA;
   919  003068  0EAA               	movlw	170
   920  00306A  6F9B               	movwf	155,b	;volsfr
   921  00306C                     
   922                           ; BSR set to: 14
   923                           ;main.c: 87:     PPSLOCK = 0x00;
   924  00306C  0E00               	movlw	0
   925  00306E  6F9B               	movwf	155,b	;volsfr
   926  003070                     
   927                           ; BSR set to: 14
   928                           ;main.c: 90:     RX1PPS = 0x10;
   929  003070  0E10               	movlw	16
   930  003072  6FB0               	movwf	176,b	;volatile
   931  003074                     
   932                           ; BSR set to: 14
   933                           ;main.c: 91:     RC3PPS = 0x07;
   934  003074  0E07               	movlw	7
   935  003076  6FF5               	movwf	245,b	;volatile
   936  003078                     
   937                           ; BSR set to: 14
   938                           ;main.c: 94:     PPSLOCK = 0x55;
   939  003078  0E55               	movlw	85
   940  00307A  6F9B               	movwf	155,b	;volsfr
   941  00307C                     
   942                           ; BSR set to: 14
   943                           ;main.c: 95:     PPSLOCK = 0xAA;
   944  00307C  0EAA               	movlw	170
   945  00307E  6F9B               	movwf	155,b	;volsfr
   946  003080                     
   947                           ; BSR set to: 14
   948                           ;main.c: 96:     PPSLOCK = 0x00;
   949  003080  0E00               	movlw	0
   950  003082  6F9B               	movwf	155,b	;volsfr
   951  003084                     
   952                           ; BSR set to: 14
   953                           ;main.c: 99:     UART_Init(9600);
   954  003084  0E25               	movlw	37
   955  003086  0100               	movlb	0	; () banked
   956  003088  6FBB               	movwf	(UART_Init@baud+1)& (0+255),b
   957  00308A  0E80               	movlw	128
   958  00308C  6FBA               	movwf	UART_Init@baud& (0+255),b
   959  00308E  EC0B  F017         	call	_UART_Init	;wreg free
   960  003092                     
   961                           ;main.c: 102:     (INTCONbits.GIE = 1);
   962  003092  8EF2               	bsf	242,7,c	;volatile
   963  003094                     
   964                           ;main.c: 103:     PEIE = 1;
   965  003094  8CF2               	bsf	4082,6,c	;volatile
   966  003096  0012               	return		;funcret
   967  003098                     __end_of_init:
   968                           	callstack 0
   969                           
   970 ;; *************** function _UART_Init *****************
   971 ;; Defined at:
   972 ;;		line 4 in file "library/UART/UART.c"
   973 ;; Parameters:    Size  Location     Type
   974 ;;  baud            2   90[BANK0 ] unsigned short 
   975 ;; Auto vars:     Size  Location     Type
   976 ;;		None
   977 ;; Return value:  Size  Location     Type
   978 ;;                  1    wreg      void 
   979 ;; Registers used:
   980 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   981 ;; Tracked objects:
   982 ;;		On entry : 0/0
   983 ;;		On exit  : 0/0
   984 ;;		Unchanged: 0/0
   985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   986 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   989 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   990 ;;Total ram usage:        2 bytes
   991 ;; Hardware stack levels used: 1
   992 ;; Hardware stack levels required when called: 5
   993 ;; This function calls:
   994 ;;		___fladd
   995 ;;		___fldiv
   996 ;;		___flmul
   997 ;;		___fltol
   998 ;;		___xxtofl
   999 ;; This function is called by:
  1000 ;;		_init
  1001 ;; This function uses a non-reentrant model
  1002 ;;
  1003                           
  1004                           	psect	text2
  1005  002E16                     __ptext2:
  1006                           	callstack 0
  1007  002E16                     _UART_Init:
  1008                           	callstack 24
  1009  002E16                     
  1010                           ;library/UART/UART.c: 4: void UART_Init(uint16_t baud);library/UART/UART.c: 5: {;library
      +                          /UART/UART.c: 6:     TXSTA = 0x00;
  1011  002E16  0E00               	movlw	0
  1012  002E18  6E9D               	movwf	157,c	;volatile
  1013                           
  1014                           ;library/UART/UART.c: 7:     RCSTA = 0x90;
  1015  002E1A  0E90               	movlw	144
  1016  002E1C  6E9C               	movwf	156,c	;volatile
  1017  002E1E                     
  1018                           ;library/UART/UART.c: 8:     SPBRG = 64000000 / (64.0 * baud) - 1;
  1019  002E1E  0E00               	movlw	0
  1020  002E20  0100               	movlb	0	; () banked
  1021  002E22  6FA4               	movwf	___fladd@a& (0+255),b
  1022  002E24  0E00               	movlw	0
  1023  002E26  6FA5               	movwf	(___fladd@a+1)& (0+255),b
  1024  002E28  0E80               	movlw	128
  1025  002E2A  6FA6               	movwf	(___fladd@a+2)& (0+255),b
  1026  002E2C  0EBF               	movlw	191
  1027  002E2E  6FA7               	movwf	(___fladd@a+3)& (0+255),b
  1028  002E30  0E00               	movlw	0
  1029  002E32  6F72               	movwf	___flmul@a& (0+255),b
  1030  002E34  0E00               	movlw	0
  1031  002E36  6F73               	movwf	(___flmul@a+1)& (0+255),b
  1032  002E38  0E80               	movlw	128
  1033  002E3A  6F74               	movwf	(___flmul@a+2)& (0+255),b
  1034  002E3C  0E42               	movlw	66
  1035  002E3E  6F75               	movwf	(___flmul@a+3)& (0+255),b
  1036  002E40  C0BA  F060         	movff	UART_Init@baud,___xxtofl@val
  1037  002E44  C0BB  F061         	movff	UART_Init@baud+1,___xxtofl@val+1
  1038  002E48  6B62               	clrf	(___xxtofl@val+2)& (0+255),b
  1039  002E4A  6B63               	clrf	(___xxtofl@val+3)& (0+255),b
  1040  002E4C  0E00               	movlw	0
  1041  002E4E  EC06  F013         	call	___xxtofl
  1042  002E52  C060  F06E         	movff	?___xxtofl,___flmul@b
  1043  002E56  C061  F06F         	movff	?___xxtofl+1,___flmul@b+1
  1044  002E5A  C062  F070         	movff	?___xxtofl+2,___flmul@b+2
  1045  002E5E  C063  F071         	movff	?___xxtofl+3,___flmul@b+3
  1046  002E62  EC36  F00E         	call	___flmul	;wreg free
  1047  002E66  C06E  F08B         	movff	?___flmul,___fldiv@a
  1048  002E6A  C06F  F08C         	movff	?___flmul+1,___fldiv@a+1
  1049  002E6E  C070  F08D         	movff	?___flmul+2,___fldiv@a+2
  1050  002E72  C071  F08E         	movff	?___flmul+3,___fldiv@a+3
  1051  002E76  0E00               	movlw	0
  1052  002E78  0100               	movlb	0	; () banked
  1053  002E7A  6F87               	movwf	___fldiv@b& (0+255),b
  1054  002E7C  0E24               	movlw	36
  1055  002E7E  6F88               	movwf	(___fldiv@b+1)& (0+255),b
  1056  002E80  0E74               	movlw	116
  1057  002E82  6F89               	movwf	(___fldiv@b+2)& (0+255),b
  1058  002E84  0E4C               	movlw	76
  1059  002E86  6F8A               	movwf	(___fldiv@b+3)& (0+255),b
  1060  002E88  EC4C  F010         	call	___fldiv	;wreg free
  1061  002E8C  C087  F0A0         	movff	?___fldiv,___fladd@b
  1062  002E90  C088  F0A1         	movff	?___fldiv+1,___fladd@b+1
  1063  002E94  C089  F0A2         	movff	?___fldiv+2,___fladd@b+2
  1064  002E98  C08A  F0A3         	movff	?___fldiv+3,___fladd@b+3
  1065  002E9C  ECD5  F00B         	call	___fladd	;wreg free
  1066  002EA0  C0A0  F0B0         	movff	?___fladd,___fltol@f1
  1067  002EA4  C0A1  F0B1         	movff	?___fladd+1,___fltol@f1+1
  1068  002EA8  C0A2  F0B2         	movff	?___fladd+2,___fltol@f1+2
  1069  002EAC  C0A3  F0B3         	movff	?___fladd+3,___fltol@f1+3
  1070  002EB0  EC04  F016         	call	___fltol	;wreg free
  1071  002EB4  0100               	movlb	0	; () banked
  1072  002EB6  51B0               	movf	?___fltol& (0+255),w,b
  1073  002EB8  6E9A               	movwf	154,c	;volatile
  1074  002EBA                     
  1075                           ; BSR set to: 0
  1076                           ;library/UART/UART.c: 9:     RCIE = 1;
  1077  002EBA  010E               	movlb	14	; () banked
  1078  002EBC  8BC0               	bsf	192,5,b	;volatile
  1079  002EBE                     
  1080                           ; BSR set to: 14
  1081  002EBE  0012               	return		;funcret
  1082  002EC0                     __end_of_UART_Init:
  1083                           	callstack 0
  1084                           
  1085 ;; *************** function ___xxtofl *****************
  1086 ;; Defined at:
  1087 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
  1088 ;; Parameters:    Size  Location     Type
  1089 ;;  sign            1    wreg     unsigned char 
  1090 ;;  val             4    0[BANK0 ] long 
  1091 ;; Auto vars:     Size  Location     Type
  1092 ;;  sign            1    8[BANK0 ] unsigned char 
  1093 ;;  arg             4   10[BANK0 ] unsigned long 
  1094 ;;  exp             1    9[BANK0 ] unsigned char 
  1095 ;; Return value:  Size  Location     Type
  1096 ;;                  4    0[BANK0 ] unsigned char 
  1097 ;; Registers used:
  1098 ;;		wreg, status,2, status,0
  1099 ;; Tracked objects:
  1100 ;;		On entry : 0/0
  1101 ;;		On exit  : 0/0
  1102 ;;		Unchanged: 0/0
  1103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1104 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1105 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1106 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1107 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1108 ;;Total ram usage:       14 bytes
  1109 ;; Hardware stack levels used: 1
  1110 ;; Hardware stack levels required when called: 4
  1111 ;; This function calls:
  1112 ;;		Nothing
  1113 ;; This function is called by:
  1114 ;;		_UART_Init
  1115 ;; This function uses a non-reentrant model
  1116 ;;
  1117                           
  1118                           	psect	text3
  1119  00260C                     __ptext3:
  1120                           	callstack 0
  1121  00260C                     ___xxtofl:
  1122                           	callstack 24
  1123                           
  1124                           ; BSR set to: 14
  1125                           ;incstack = 0
  1126                           ;___xxtofl@sign stored from wreg
  1127  00260C  0100               	movlb	0	; () banked
  1128  00260E  6F68               	movwf	___xxtofl@sign& (0+255),b
  1129  002610  0100               	movlb	0	; () banked
  1130  002612  5168               	movf	___xxtofl@sign& (0+255),w,b
  1131  002614  B4D8               	btfsc	status,2,c
  1132  002616  EF0F  F013         	goto	u2481
  1133  00261A  EF11  F013         	goto	u2480
  1134  00261E                     u2481:
  1135  00261E  EF33  F013         	goto	l891
  1136  002622                     u2480:
  1137  002622                     
  1138                           ; BSR set to: 0
  1139  002622  BF63               	btfsc	(___xxtofl@val+3)& (0+255),7,b
  1140  002624  EF18  F013         	goto	u2490
  1141  002628  EF16  F013         	goto	u2491
  1142  00262C                     u2491:
  1143  00262C  EF33  F013         	goto	l891
  1144  002630                     u2490:
  1145  002630                     
  1146                           ; BSR set to: 0
  1147  002630  C060  F064         	movff	___xxtofl@val,??___xxtofl
  1148  002634  C061  F065         	movff	___xxtofl@val+1,??___xxtofl+1
  1149  002638  C062  F066         	movff	___xxtofl@val+2,??___xxtofl+2
  1150  00263C  C063  F067         	movff	___xxtofl@val+3,??___xxtofl+3
  1151  002640  1F64               	comf	??___xxtofl& (0+255),f,b
  1152  002642  1F65               	comf	(??___xxtofl+1)& (0+255),f,b
  1153  002644  1F66               	comf	(??___xxtofl+2)& (0+255),f,b
  1154  002646  1F67               	comf	(??___xxtofl+3)& (0+255),f,b
  1155  002648  2B64               	incf	??___xxtofl& (0+255),f,b
  1156  00264A  0E00               	movlw	0
  1157  00264C  2365               	addwfc	(??___xxtofl+1)& (0+255),f,b
  1158  00264E  2366               	addwfc	(??___xxtofl+2)& (0+255),f,b
  1159  002650  2367               	addwfc	(??___xxtofl+3)& (0+255),f,b
  1160  002652  C064  F06A         	movff	??___xxtofl,___xxtofl@arg
  1161  002656  C065  F06B         	movff	??___xxtofl+1,___xxtofl@arg+1
  1162  00265A  C066  F06C         	movff	??___xxtofl+2,___xxtofl@arg+2
  1163  00265E  C067  F06D         	movff	??___xxtofl+3,___xxtofl@arg+3
  1164  002662  EF3B  F013         	goto	l2602
  1165  002666                     l891:
  1166                           
  1167                           ; BSR set to: 0
  1168  002666  C060  F06A         	movff	___xxtofl@val,___xxtofl@arg
  1169  00266A  C061  F06B         	movff	___xxtofl@val+1,___xxtofl@arg+1
  1170  00266E  C062  F06C         	movff	___xxtofl@val+2,___xxtofl@arg+2
  1171  002672  C063  F06D         	movff	___xxtofl@val+3,___xxtofl@arg+3
  1172  002676                     l2602:
  1173                           
  1174                           ; BSR set to: 0
  1175  002676  5160               	movf	___xxtofl@val& (0+255),w,b
  1176  002678  1161               	iorwf	(___xxtofl@val+1)& (0+255),w,b
  1177  00267A  1162               	iorwf	(___xxtofl@val+2)& (0+255),w,b
  1178  00267C  1163               	iorwf	(___xxtofl@val+3)& (0+255),w,b
  1179  00267E  A4D8               	btfss	status,2,c
  1180  002680  EF44  F013         	goto	u2501
  1181  002684  EF46  F013         	goto	u2500
  1182  002688                     u2501:
  1183  002688  EF50  F013         	goto	l2608
  1184  00268C                     u2500:
  1185  00268C                     
  1186                           ; BSR set to: 0
  1187  00268C  0E00               	movlw	0
  1188  00268E  6F60               	movwf	?___xxtofl& (0+255),b
  1189  002690  0E00               	movlw	0
  1190  002692  6F61               	movwf	(?___xxtofl+1)& (0+255),b
  1191  002694  0E00               	movlw	0
  1192  002696  6F62               	movwf	(?___xxtofl+2)& (0+255),b
  1193  002698  0E00               	movlw	0
  1194  00269A  6F63               	movwf	(?___xxtofl+3)& (0+255),b
  1195  00269C  EFE1  F013         	goto	l894
  1196  0026A0                     l2608:
  1197                           
  1198                           ; BSR set to: 0
  1199  0026A0  0E96               	movlw	150
  1200  0026A2  6F69               	movwf	___xxtofl@exp& (0+255),b
  1201  0026A4  EF5A  F013         	goto	l2612
  1202  0026A8                     l2610:
  1203                           
  1204                           ; BSR set to: 0
  1205  0026A8  2B69               	incf	___xxtofl@exp& (0+255),f,b
  1206  0026AA  90D8               	bcf	status,0,c
  1207  0026AC  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  1208  0026AE  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  1209  0026B0  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  1210  0026B2  336A               	rrcf	___xxtofl@arg& (0+255),f,b
  1211  0026B4                     l2612:
  1212                           
  1213                           ; BSR set to: 0
  1214  0026B4  0E00               	movlw	0
  1215  0026B6  156A               	andwf	___xxtofl@arg& (0+255),w,b
  1216  0026B8  6F64               	movwf	??___xxtofl& (0+255),b
  1217  0026BA  0E00               	movlw	0
  1218  0026BC  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  1219  0026BE  6F65               	movwf	(??___xxtofl+1)& (0+255),b
  1220  0026C0  0E00               	movlw	0
  1221  0026C2  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  1222  0026C4  6F66               	movwf	(??___xxtofl+2)& (0+255),b
  1223  0026C6  0EFE               	movlw	254
  1224  0026C8  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  1225  0026CA  6F67               	movwf	(??___xxtofl+3)& (0+255),b
  1226  0026CC  5164               	movf	??___xxtofl& (0+255),w,b
  1227  0026CE  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
  1228  0026D0  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
  1229  0026D2  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
  1230  0026D4  A4D8               	btfss	status,2,c
  1231  0026D6  EF6F  F013         	goto	u2511
  1232  0026DA  EF71  F013         	goto	u2510
  1233  0026DE                     u2511:
  1234  0026DE  EF54  F013         	goto	l2610
  1235  0026E2                     u2510:
  1236  0026E2  EF7F  F013         	goto	l898
  1237  0026E6                     l2614:
  1238                           
  1239                           ; BSR set to: 0
  1240  0026E6  2B69               	incf	___xxtofl@exp& (0+255),f,b
  1241  0026E8                     
  1242                           ; BSR set to: 0
  1243  0026E8  0E01               	movlw	1
  1244  0026EA  276A               	addwf	___xxtofl@arg& (0+255),f,b
  1245  0026EC  0E00               	movlw	0
  1246  0026EE  236B               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
  1247  0026F0  236C               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
  1248  0026F2  236D               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
  1249  0026F4                     
  1250                           ; BSR set to: 0
  1251  0026F4  90D8               	bcf	status,0,c
  1252  0026F6  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  1253  0026F8  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  1254  0026FA  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  1255  0026FC  336A               	rrcf	___xxtofl@arg& (0+255),f,b
  1256  0026FE                     l898:
  1257                           
  1258                           ; BSR set to: 0
  1259  0026FE  0E00               	movlw	0
  1260  002700  156A               	andwf	___xxtofl@arg& (0+255),w,b
  1261  002702  6F64               	movwf	??___xxtofl& (0+255),b
  1262  002704  0E00               	movlw	0
  1263  002706  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  1264  002708  6F65               	movwf	(??___xxtofl+1)& (0+255),b
  1265  00270A  0E00               	movlw	0
  1266  00270C  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  1267  00270E  6F66               	movwf	(??___xxtofl+2)& (0+255),b
  1268  002710  0EFF               	movlw	255
  1269  002712  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  1270  002714  6F67               	movwf	(??___xxtofl+3)& (0+255),b
  1271  002716  5164               	movf	??___xxtofl& (0+255),w,b
  1272  002718  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
  1273  00271A  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
  1274  00271C  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
  1275  00271E  A4D8               	btfss	status,2,c
  1276  002720  EF94  F013         	goto	u2521
  1277  002724  EF96  F013         	goto	u2520
  1278  002728                     u2521:
  1279  002728  EF73  F013         	goto	l2614
  1280  00272C                     u2520:
  1281  00272C  EF9E  F013         	goto	l2622
  1282  002730                     l2620:
  1283                           
  1284                           ; BSR set to: 0
  1285  002730  0769               	decf	___xxtofl@exp& (0+255),f,b
  1286  002732  90D8               	bcf	status,0,c
  1287  002734  376A               	rlcf	___xxtofl@arg& (0+255),f,b
  1288  002736  376B               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
  1289  002738  376C               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
  1290  00273A  376D               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
  1291  00273C                     l2622:
  1292                           
  1293                           ; BSR set to: 0
  1294  00273C  BF6C               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
  1295  00273E  EFA3  F013         	goto	u2531
  1296  002742  EFA5  F013         	goto	u2530
  1297  002746                     u2531:
  1298  002746  EFAD  F013         	goto	l905
  1299  00274A                     u2530:
  1300  00274A                     
  1301                           ; BSR set to: 0
  1302  00274A  0E02               	movlw	2
  1303  00274C  6169               	cpfslt	___xxtofl@exp& (0+255),b
  1304  00274E  EFAB  F013         	goto	u2541
  1305  002752  EFAD  F013         	goto	u2540
  1306  002756                     u2541:
  1307  002756  EF98  F013         	goto	l2620
  1308  00275A                     u2540:
  1309  00275A                     l905:
  1310                           
  1311                           ; BSR set to: 0
  1312  00275A  B169               	btfsc	___xxtofl@exp& (0+255),0,b
  1313  00275C  EFB2  F013         	goto	u2551
  1314  002760  EFB4  F013         	goto	u2550
  1315  002764                     u2551:
  1316  002764  EFB5  F013         	goto	l2628
  1317  002768                     u2550:
  1318  002768                     
  1319                           ; BSR set to: 0
  1320  002768  9F6C               	bcf	(___xxtofl@arg+2)& (0+255),7,b
  1321  00276A                     l2628:
  1322                           
  1323                           ; BSR set to: 0
  1324  00276A  90D8               	bcf	status,0,c
  1325  00276C  3369               	rrcf	___xxtofl@exp& (0+255),f,b
  1326  00276E                     
  1327                           ; BSR set to: 0
  1328  00276E  C069  F064         	movff	___xxtofl@exp,??___xxtofl
  1329  002772  6B65               	clrf	(??___xxtofl+1)& (0+255),b
  1330  002774  6B66               	clrf	(??___xxtofl+2)& (0+255),b
  1331  002776  6B67               	clrf	(??___xxtofl+3)& (0+255),b
  1332  002778  C064  F067         	movff	??___xxtofl,??___xxtofl+3
  1333  00277C  6B66               	clrf	(??___xxtofl+2)& (0+255),b
  1334  00277E  6B65               	clrf	(??___xxtofl+1)& (0+255),b
  1335  002780  6B64               	clrf	??___xxtofl& (0+255),b
  1336  002782  5164               	movf	??___xxtofl& (0+255),w,b
  1337  002784  136A               	iorwf	___xxtofl@arg& (0+255),f,b
  1338  002786  5165               	movf	(??___xxtofl+1)& (0+255),w,b
  1339  002788  136B               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
  1340  00278A  5166               	movf	(??___xxtofl+2)& (0+255),w,b
  1341  00278C  136C               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
  1342  00278E  5167               	movf	(??___xxtofl+3)& (0+255),w,b
  1343  002790  136D               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
  1344  002792                     
  1345                           ; BSR set to: 0
  1346  002792  5168               	movf	___xxtofl@sign& (0+255),w,b
  1347  002794  B4D8               	btfsc	status,2,c
  1348  002796  EFCF  F013         	goto	u2561
  1349  00279A  EFD1  F013         	goto	u2560
  1350  00279E                     u2561:
  1351  00279E  EFD9  F013         	goto	l2638
  1352  0027A2                     u2560:
  1353  0027A2                     
  1354                           ; BSR set to: 0
  1355  0027A2  BF63               	btfsc	(___xxtofl@val+3)& (0+255),7,b
  1356  0027A4  EFD8  F013         	goto	u2570
  1357  0027A8  EFD6  F013         	goto	u2571
  1358  0027AC                     u2571:
  1359  0027AC  EFD9  F013         	goto	l2638
  1360  0027B0                     u2570:
  1361  0027B0                     
  1362                           ; BSR set to: 0
  1363  0027B0  8F6D               	bsf	(___xxtofl@arg+3)& (0+255),7,b
  1364  0027B2                     l2638:
  1365                           
  1366                           ; BSR set to: 0
  1367  0027B2  C06A  F060         	movff	___xxtofl@arg,?___xxtofl
  1368  0027B6  C06B  F061         	movff	___xxtofl@arg+1,?___xxtofl+1
  1369  0027BA  C06C  F062         	movff	___xxtofl@arg+2,?___xxtofl+2
  1370  0027BE  C06D  F063         	movff	___xxtofl@arg+3,?___xxtofl+3
  1371  0027C2                     l894:
  1372                           
  1373                           ; BSR set to: 0
  1374  0027C2  0012               	return		;funcret
  1375  0027C4                     __end_of___xxtofl:
  1376                           	callstack 0
  1377                           
  1378 ;; *************** function ___fltol *****************
  1379 ;; Defined at:
  1380 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  1381 ;; Parameters:    Size  Location     Type
  1382 ;;  f1              4   80[BANK0 ] unsigned char 
  1383 ;; Auto vars:     Size  Location     Type
  1384 ;;  exp1            1   89[BANK0 ] unsigned char 
  1385 ;;  sign1           1   88[BANK0 ] unsigned char 
  1386 ;; Return value:  Size  Location     Type
  1387 ;;                  4   80[BANK0 ] long 
  1388 ;; Registers used:
  1389 ;;		wreg, status,2, status,0
  1390 ;; Tracked objects:
  1391 ;;		On entry : 0/0
  1392 ;;		On exit  : 0/0
  1393 ;;		Unchanged: 0/0
  1394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1395 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1396 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1397 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1398 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1399 ;;Total ram usage:       10 bytes
  1400 ;; Hardware stack levels used: 1
  1401 ;; Hardware stack levels required when called: 4
  1402 ;; This function calls:
  1403 ;;		Nothing
  1404 ;; This function is called by:
  1405 ;;		_UART_Init
  1406 ;; This function uses a non-reentrant model
  1407 ;;
  1408                           
  1409                           	psect	text4
  1410  002C08                     __ptext4:
  1411                           	callstack 0
  1412  002C08                     ___fltol:
  1413                           	callstack 24
  1414  002C08  0100               	movlb	0	; () banked
  1415  002C0A  35B2               	rlcf	(___fltol@f1+2)& (0+255),w,b
  1416  002C0C  35B3               	rlcf	(___fltol@f1+3)& (0+255),w,b
  1417  002C0E  6FB9               	movwf	___fltol@exp1& (0+255),b
  1418  002C10  51B9               	movf	___fltol@exp1& (0+255),w,b
  1419  002C12  A4D8               	btfss	status,2,c
  1420  002C14  EF0E  F016         	goto	u2411
  1421  002C18  EF10  F016         	goto	u2410
  1422  002C1C                     u2411:
  1423  002C1C  EF1A  F016         	goto	l2558
  1424  002C20                     u2410:
  1425  002C20                     l2554:
  1426                           
  1427                           ; BSR set to: 0
  1428  002C20  0E00               	movlw	0
  1429  002C22  6FB0               	movwf	?___fltol& (0+255),b
  1430  002C24  0E00               	movlw	0
  1431  002C26  6FB1               	movwf	(?___fltol+1)& (0+255),b
  1432  002C28  0E00               	movlw	0
  1433  002C2A  6FB2               	movwf	(?___fltol+2)& (0+255),b
  1434  002C2C  0E00               	movlw	0
  1435  002C2E  6FB3               	movwf	(?___fltol+3)& (0+255),b
  1436  002C30  EF87  F016         	goto	l533
  1437  002C34                     l2558:
  1438                           
  1439                           ; BSR set to: 0
  1440  002C34  C0B0  F0B4         	movff	___fltol@f1,??___fltol
  1441  002C38  C0B1  F0B5         	movff	___fltol@f1+1,??___fltol+1
  1442  002C3C  C0B2  F0B6         	movff	___fltol@f1+2,??___fltol+2
  1443  002C40  C0B3  F0B7         	movff	___fltol@f1+3,??___fltol+3
  1444  002C44  0E20               	movlw	32
  1445  002C46  EF2A  F016         	goto	u2420
  1446  002C4A                     u2425:
  1447  002C4A  90D8               	bcf	status,0,c
  1448  002C4C  33B7               	rrcf	(??___fltol+3)& (0+255),f,b
  1449  002C4E  33B6               	rrcf	(??___fltol+2)& (0+255),f,b
  1450  002C50  33B5               	rrcf	(??___fltol+1)& (0+255),f,b
  1451  002C52  33B4               	rrcf	??___fltol& (0+255),f,b
  1452  002C54                     u2420:
  1453  002C54  2EE8               	decfsz	wreg,f,c
  1454  002C56  EF25  F016         	goto	u2425
  1455  002C5A  51B4               	movf	??___fltol& (0+255),w,b
  1456  002C5C  6FB8               	movwf	___fltol@sign1& (0+255),b
  1457  002C5E                     
  1458                           ; BSR set to: 0
  1459  002C5E  8FB2               	bsf	(___fltol@f1+2)& (0+255),7,b
  1460  002C60                     
  1461                           ; BSR set to: 0
  1462  002C60  0EFF               	movlw	255
  1463  002C62  17B0               	andwf	___fltol@f1& (0+255),f,b
  1464  002C64  0EFF               	movlw	255
  1465  002C66  17B1               	andwf	(___fltol@f1+1)& (0+255),f,b
  1466  002C68  0EFF               	movlw	255
  1467  002C6A  17B2               	andwf	(___fltol@f1+2)& (0+255),f,b
  1468  002C6C  0E00               	movlw	0
  1469  002C6E  17B3               	andwf	(___fltol@f1+3)& (0+255),f,b
  1470  002C70                     
  1471                           ; BSR set to: 0
  1472  002C70  0E96               	movlw	150
  1473  002C72  5FB9               	subwf	___fltol@exp1& (0+255),f,b
  1474  002C74                     
  1475                           ; BSR set to: 0
  1476  002C74  BFB9               	btfsc	___fltol@exp1& (0+255),7,b
  1477  002C76  EF41  F016         	goto	u2430
  1478  002C7A  EF3F  F016         	goto	u2431
  1479  002C7E                     u2431:
  1480  002C7E  EF57  F016         	goto	l2578
  1481  002C82                     u2430:
  1482  002C82                     
  1483                           ; BSR set to: 0
  1484  002C82  51B9               	movf	___fltol@exp1& (0+255),w,b
  1485  002C84  0A80               	xorlw	128
  1486  002C86  0F97               	addlw	151
  1487  002C88  B0D8               	btfsc	status,0,c
  1488  002C8A  EF49  F016         	goto	u2441
  1489  002C8E  EF4B  F016         	goto	u2440
  1490  002C92                     u2441:
  1491  002C92  EF4D  F016         	goto	l2574
  1492  002C96                     u2440:
  1493  002C96  EF10  F016         	goto	l2554
  1494  002C9A                     l2574:
  1495                           
  1496                           ; BSR set to: 0
  1497  002C9A  90D8               	bcf	status,0,c
  1498  002C9C  33B3               	rrcf	(___fltol@f1+3)& (0+255),f,b
  1499  002C9E  33B2               	rrcf	(___fltol@f1+2)& (0+255),f,b
  1500  002CA0  33B1               	rrcf	(___fltol@f1+1)& (0+255),f,b
  1501  002CA2  33B0               	rrcf	___fltol@f1& (0+255),f,b
  1502  002CA4                     
  1503                           ; BSR set to: 0
  1504  002CA4  3FB9               	incfsz	___fltol@exp1& (0+255),f,b
  1505  002CA6  EF4D  F016         	goto	l2574
  1506  002CAA  EF6F  F016         	goto	l2588
  1507  002CAE                     l2578:
  1508                           
  1509                           ; BSR set to: 0
  1510  002CAE  0E1F               	movlw	31
  1511  002CB0  65B9               	cpfsgt	___fltol@exp1& (0+255),b
  1512  002CB2  EF5D  F016         	goto	u2451
  1513  002CB6  EF5F  F016         	goto	u2450
  1514  002CBA                     u2451:
  1515  002CBA  EF67  F016         	goto	l2586
  1516  002CBE                     u2450:
  1517  002CBE  EF10  F016         	goto	l2554
  1518  002CC2                     l2584:
  1519                           
  1520                           ; BSR set to: 0
  1521  002CC2  90D8               	bcf	status,0,c
  1522  002CC4  37B0               	rlcf	___fltol@f1& (0+255),f,b
  1523  002CC6  37B1               	rlcf	(___fltol@f1+1)& (0+255),f,b
  1524  002CC8  37B2               	rlcf	(___fltol@f1+2)& (0+255),f,b
  1525  002CCA  37B3               	rlcf	(___fltol@f1+3)& (0+255),f,b
  1526  002CCC  07B9               	decf	___fltol@exp1& (0+255),f,b
  1527  002CCE                     l2586:
  1528                           
  1529                           ; BSR set to: 0
  1530  002CCE  51B9               	movf	___fltol@exp1& (0+255),w,b
  1531  002CD0  A4D8               	btfss	status,2,c
  1532  002CD2  EF6D  F016         	goto	u2461
  1533  002CD6  EF6F  F016         	goto	u2460
  1534  002CDA                     u2461:
  1535  002CDA  EF61  F016         	goto	l2584
  1536  002CDE                     u2460:
  1537  002CDE                     l2588:
  1538                           
  1539                           ; BSR set to: 0
  1540  002CDE  51B8               	movf	___fltol@sign1& (0+255),w,b
  1541  002CE0  B4D8               	btfsc	status,2,c
  1542  002CE2  EF75  F016         	goto	u2471
  1543  002CE6  EF77  F016         	goto	u2470
  1544  002CEA                     u2471:
  1545  002CEA  EF7F  F016         	goto	l2592
  1546  002CEE                     u2470:
  1547  002CEE                     
  1548                           ; BSR set to: 0
  1549  002CEE  1FB3               	comf	(___fltol@f1+3)& (0+255),f,b
  1550  002CF0  1FB2               	comf	(___fltol@f1+2)& (0+255),f,b
  1551  002CF2  1FB1               	comf	(___fltol@f1+1)& (0+255),f,b
  1552  002CF4  6DB0               	negf	___fltol@f1& (0+255),b
  1553  002CF6  0E00               	movlw	0
  1554  002CF8  23B1               	addwfc	(___fltol@f1+1)& (0+255),f,b
  1555  002CFA  23B2               	addwfc	(___fltol@f1+2)& (0+255),f,b
  1556  002CFC  23B3               	addwfc	(___fltol@f1+3)& (0+255),f,b
  1557  002CFE                     l2592:
  1558                           
  1559                           ; BSR set to: 0
  1560  002CFE  C0B0  F0B0         	movff	___fltol@f1,?___fltol
  1561  002D02  C0B1  F0B1         	movff	___fltol@f1+1,?___fltol+1
  1562  002D06  C0B2  F0B2         	movff	___fltol@f1+2,?___fltol+2
  1563  002D0A  C0B3  F0B3         	movff	___fltol@f1+3,?___fltol+3
  1564  002D0E                     l533:
  1565                           
  1566                           ; BSR set to: 0
  1567  002D0E  0012               	return		;funcret
  1568  002D10                     __end_of___fltol:
  1569                           	callstack 0
  1570                           
  1571 ;; *************** function ___flmul *****************
  1572 ;; Defined at:
  1573 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
  1574 ;; Parameters:    Size  Location     Type
  1575 ;;  b               4   14[BANK0 ] long 
  1576 ;;  a               4   18[BANK0 ] long 
  1577 ;; Auto vars:     Size  Location     Type
  1578 ;;  prod            4   33[BANK0 ] struct .
  1579 ;;  grs             4   27[BANK0 ] unsigned long 
  1580 ;;  temp            2   37[BANK0 ] struct .
  1581 ;;  bexp            1   32[BANK0 ] unsigned char 
  1582 ;;  aexp            1   31[BANK0 ] unsigned char 
  1583 ;;  sign            1   26[BANK0 ] unsigned char 
  1584 ;; Return value:  Size  Location     Type
  1585 ;;                  4   14[BANK0 ] unsigned char 
  1586 ;; Registers used:
  1587 ;;		wreg, status,2, status,0, prodl, prodh
  1588 ;; Tracked objects:
  1589 ;;		On entry : 0/0
  1590 ;;		On exit  : 0/0
  1591 ;;		Unchanged: 0/0
  1592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1593 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1594 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1595 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1596 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1597 ;;Total ram usage:       25 bytes
  1598 ;; Hardware stack levels used: 1
  1599 ;; Hardware stack levels required when called: 4
  1600 ;; This function calls:
  1601 ;;		Nothing
  1602 ;; This function is called by:
  1603 ;;		_UART_Init
  1604 ;; This function uses a non-reentrant model
  1605 ;;
  1606                           
  1607                           	psect	text5
  1608  001C6C                     __ptext5:
  1609                           	callstack 0
  1610  001C6C                     ___flmul:
  1611                           	callstack 24
  1612  001C6C  0100               	movlb	0	; () banked
  1613  001C6E  5171               	movf	(___flmul@b+3)& (0+255),w,b
  1614  001C70  0B80               	andlw	128
  1615  001C72  6F7A               	movwf	___flmul@sign& (0+255),b
  1616  001C74  5171               	movf	(___flmul@b+3)& (0+255),w,b
  1617  001C76  2571               	addwf	(___flmul@b+3)& (0+255),w,b
  1618  001C78  6F80               	movwf	___flmul@bexp& (0+255),b
  1619  001C7A                     
  1620                           ; BSR set to: 0
  1621  001C7A  AF70               	btfss	(___flmul@b+2)& (0+255),7,b
  1622  001C7C  EF42  F00E         	goto	u2221
  1623  001C80  EF44  F00E         	goto	u2220
  1624  001C84                     u2221:
  1625  001C84  EF45  F00E         	goto	l2428
  1626  001C88                     u2220:
  1627  001C88                     
  1628                           ; BSR set to: 0
  1629  001C88  8180               	bsf	___flmul@bexp& (0+255),0,b
  1630  001C8A                     l2428:
  1631                           
  1632                           ; BSR set to: 0
  1633  001C8A  5180               	movf	___flmul@bexp& (0+255),w,b
  1634  001C8C  B4D8               	btfsc	status,2,c
  1635  001C8E  EF4B  F00E         	goto	u2231
  1636  001C92  EF4D  F00E         	goto	u2230
  1637  001C96                     u2231:
  1638  001C96  EF60  F00E         	goto	l2436
  1639  001C9A                     u2230:
  1640  001C9A                     
  1641                           ; BSR set to: 0
  1642  001C9A  2980               	incf	___flmul@bexp& (0+255),w,b
  1643  001C9C  A4D8               	btfss	status,2,c
  1644  001C9E  EF53  F00E         	goto	u2241
  1645  001CA2  EF55  F00E         	goto	u2240
  1646  001CA6                     u2241:
  1647  001CA6  EF5D  F00E         	goto	l2434
  1648  001CAA                     u2240:
  1649  001CAA                     
  1650                           ; BSR set to: 0
  1651  001CAA  0E00               	movlw	0
  1652  001CAC  6F6E               	movwf	___flmul@b& (0+255),b
  1653  001CAE  0E00               	movlw	0
  1654  001CB0  6F6F               	movwf	(___flmul@b+1)& (0+255),b
  1655  001CB2  0E00               	movlw	0
  1656  001CB4  6F70               	movwf	(___flmul@b+2)& (0+255),b
  1657  001CB6  0E00               	movlw	0
  1658  001CB8  6F71               	movwf	(___flmul@b+3)& (0+255),b
  1659  001CBA                     l2434:
  1660                           
  1661                           ; BSR set to: 0
  1662  001CBA  8F70               	bsf	(___flmul@b+2)& (0+255),7,b
  1663  001CBC  EF68  F00E         	goto	l2438
  1664  001CC0                     l2436:
  1665                           
  1666                           ; BSR set to: 0
  1667  001CC0  0E00               	movlw	0
  1668  001CC2  6F6E               	movwf	___flmul@b& (0+255),b
  1669  001CC4  0E00               	movlw	0
  1670  001CC6  6F6F               	movwf	(___flmul@b+1)& (0+255),b
  1671  001CC8  0E00               	movlw	0
  1672  001CCA  6F70               	movwf	(___flmul@b+2)& (0+255),b
  1673  001CCC  0E00               	movlw	0
  1674  001CCE  6F71               	movwf	(___flmul@b+3)& (0+255),b
  1675  001CD0                     l2438:
  1676                           
  1677                           ; BSR set to: 0
  1678  001CD0  5175               	movf	(___flmul@a+3)& (0+255),w,b
  1679  001CD2  0B80               	andlw	128
  1680  001CD4  1B7A               	xorwf	___flmul@sign& (0+255),f,b
  1681  001CD6                     
  1682                           ; BSR set to: 0
  1683  001CD6  5175               	movf	(___flmul@a+3)& (0+255),w,b
  1684  001CD8  2575               	addwf	(___flmul@a+3)& (0+255),w,b
  1685  001CDA  6F7F               	movwf	___flmul@aexp& (0+255),b
  1686  001CDC                     
  1687                           ; BSR set to: 0
  1688  001CDC  AF74               	btfss	(___flmul@a+2)& (0+255),7,b
  1689  001CDE  EF73  F00E         	goto	u2251
  1690  001CE2  EF75  F00E         	goto	u2250
  1691  001CE6                     u2251:
  1692  001CE6  EF76  F00E         	goto	l2446
  1693  001CEA                     u2250:
  1694  001CEA                     
  1695                           ; BSR set to: 0
  1696  001CEA  817F               	bsf	___flmul@aexp& (0+255),0,b
  1697  001CEC                     l2446:
  1698                           
  1699                           ; BSR set to: 0
  1700  001CEC  517F               	movf	___flmul@aexp& (0+255),w,b
  1701  001CEE  B4D8               	btfsc	status,2,c
  1702  001CF0  EF7C  F00E         	goto	u2261
  1703  001CF4  EF7E  F00E         	goto	u2260
  1704  001CF8                     u2261:
  1705  001CF8  EF91  F00E         	goto	l2454
  1706  001CFC                     u2260:
  1707  001CFC                     
  1708                           ; BSR set to: 0
  1709  001CFC  297F               	incf	___flmul@aexp& (0+255),w,b
  1710  001CFE  A4D8               	btfss	status,2,c
  1711  001D00  EF84  F00E         	goto	u2271
  1712  001D04  EF86  F00E         	goto	u2270
  1713  001D08                     u2271:
  1714  001D08  EF8E  F00E         	goto	l2452
  1715  001D0C                     u2270:
  1716  001D0C                     
  1717                           ; BSR set to: 0
  1718  001D0C  0E00               	movlw	0
  1719  001D0E  6F72               	movwf	___flmul@a& (0+255),b
  1720  001D10  0E00               	movlw	0
  1721  001D12  6F73               	movwf	(___flmul@a+1)& (0+255),b
  1722  001D14  0E00               	movlw	0
  1723  001D16  6F74               	movwf	(___flmul@a+2)& (0+255),b
  1724  001D18  0E00               	movlw	0
  1725  001D1A  6F75               	movwf	(___flmul@a+3)& (0+255),b
  1726  001D1C                     l2452:
  1727                           
  1728                           ; BSR set to: 0
  1729  001D1C  8F74               	bsf	(___flmul@a+2)& (0+255),7,b
  1730  001D1E  EF99  F00E         	goto	l850
  1731  001D22                     l2454:
  1732                           
  1733                           ; BSR set to: 0
  1734  001D22  0E00               	movlw	0
  1735  001D24  6F72               	movwf	___flmul@a& (0+255),b
  1736  001D26  0E00               	movlw	0
  1737  001D28  6F73               	movwf	(___flmul@a+1)& (0+255),b
  1738  001D2A  0E00               	movlw	0
  1739  001D2C  6F74               	movwf	(___flmul@a+2)& (0+255),b
  1740  001D2E  0E00               	movlw	0
  1741  001D30  6F75               	movwf	(___flmul@a+3)& (0+255),b
  1742  001D32                     l850:
  1743                           
  1744                           ; BSR set to: 0
  1745  001D32  517F               	movf	___flmul@aexp& (0+255),w,b
  1746  001D34  B4D8               	btfsc	status,2,c
  1747  001D36  EF9F  F00E         	goto	u2281
  1748  001D3A  EFA1  F00E         	goto	u2280
  1749  001D3E                     u2281:
  1750  001D3E  EFA9  F00E         	goto	l2458
  1751  001D42                     u2280:
  1752  001D42                     
  1753                           ; BSR set to: 0
  1754  001D42  5180               	movf	___flmul@bexp& (0+255),w,b
  1755  001D44  A4D8               	btfss	status,2,c
  1756  001D46  EFA7  F00E         	goto	u2291
  1757  001D4A  EFA9  F00E         	goto	u2290
  1758  001D4E                     u2291:
  1759  001D4E  EFB3  F00E         	goto	l2462
  1760  001D52                     u2290:
  1761  001D52                     l2458:
  1762                           
  1763                           ; BSR set to: 0
  1764  001D52  0E00               	movlw	0
  1765  001D54  6F6E               	movwf	?___flmul& (0+255),b
  1766  001D56  0E00               	movlw	0
  1767  001D58  6F6F               	movwf	(?___flmul+1)& (0+255),b
  1768  001D5A  0E00               	movlw	0
  1769  001D5C  6F70               	movwf	(?___flmul+2)& (0+255),b
  1770  001D5E  0E00               	movlw	0
  1771  001D60  6F71               	movwf	(?___flmul+3)& (0+255),b
  1772  001D62  EF4B  F010         	goto	l854
  1773  001D66                     l2462:
  1774                           
  1775                           ; BSR set to: 0
  1776  001D66  5174               	movf	(___flmul@a+2)& (0+255),w,b
  1777  001D68  036E               	mulwf	___flmul@b& (0+255),b
  1778  001D6A  CFF3 F085          	movff	prodl,___flmul@temp
  1779  001D6E  CFF4 F086          	movff	prodh,___flmul@temp+1
  1780  001D72                     
  1781                           ; BSR set to: 0
  1782  001D72  5185               	movf	___flmul@temp& (0+255),w,b
  1783  001D74  6F7B               	movwf	___flmul@grs& (0+255),b
  1784  001D76  6B7C               	clrf	(___flmul@grs+1)& (0+255),b
  1785  001D78  6B7D               	clrf	(___flmul@grs+2)& (0+255),b
  1786  001D7A  6B7E               	clrf	(___flmul@grs+3)& (0+255),b
  1787  001D7C                     
  1788                           ; BSR set to: 0
  1789  001D7C  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  1790  001D7E  6F81               	movwf	___flmul@prod& (0+255),b
  1791  001D80  6B82               	clrf	(___flmul@prod+1)& (0+255),b
  1792  001D82  6B83               	clrf	(___flmul@prod+2)& (0+255),b
  1793  001D84  6B84               	clrf	(___flmul@prod+3)& (0+255),b
  1794  001D86  5173               	movf	(___flmul@a+1)& (0+255),w,b
  1795  001D88  036F               	mulwf	(___flmul@b+1)& (0+255),b
  1796  001D8A  CFF3 F085          	movff	prodl,___flmul@temp
  1797  001D8E  CFF4 F086          	movff	prodh,___flmul@temp+1
  1798  001D92                     
  1799                           ; BSR set to: 0
  1800  001D92  5185               	movf	___flmul@temp& (0+255),w,b
  1801  001D94  277B               	addwf	___flmul@grs& (0+255),f,b
  1802  001D96  0E00               	movlw	0
  1803  001D98  237C               	addwfc	(___flmul@grs+1)& (0+255),f,b
  1804  001D9A  237D               	addwfc	(___flmul@grs+2)& (0+255),f,b
  1805  001D9C  237E               	addwfc	(___flmul@grs+3)& (0+255),f,b
  1806  001D9E                     
  1807                           ; BSR set to: 0
  1808  001D9E  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  1809  001DA0  2781               	addwf	___flmul@prod& (0+255),f,b
  1810  001DA2  0E00               	movlw	0
  1811  001DA4  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  1812  001DA6  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  1813  001DA8  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  1814  001DAA  5172               	movf	___flmul@a& (0+255),w,b
  1815  001DAC  0370               	mulwf	(___flmul@b+2)& (0+255),b
  1816  001DAE  CFF3 F085          	movff	prodl,___flmul@temp
  1817  001DB2  CFF4 F086          	movff	prodh,___flmul@temp+1
  1818  001DB6                     
  1819                           ; BSR set to: 0
  1820  001DB6  5185               	movf	___flmul@temp& (0+255),w,b
  1821  001DB8  277B               	addwf	___flmul@grs& (0+255),f,b
  1822  001DBA  0E00               	movlw	0
  1823  001DBC  237C               	addwfc	(___flmul@grs+1)& (0+255),f,b
  1824  001DBE  237D               	addwfc	(___flmul@grs+2)& (0+255),f,b
  1825  001DC0  237E               	addwfc	(___flmul@grs+3)& (0+255),f,b
  1826  001DC2                     
  1827                           ; BSR set to: 0
  1828  001DC2  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  1829  001DC4  2781               	addwf	___flmul@prod& (0+255),f,b
  1830  001DC6  0E00               	movlw	0
  1831  001DC8  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  1832  001DCA  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  1833  001DCC  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  1834  001DCE                     
  1835                           ; BSR set to: 0
  1836  001DCE  C07D  F07E         	movff	___flmul@grs+2,___flmul@grs+3
  1837  001DD2  C07C  F07D         	movff	___flmul@grs+1,___flmul@grs+2
  1838  001DD6  C07B  F07C         	movff	___flmul@grs,___flmul@grs+1
  1839  001DDA  6B7B               	clrf	___flmul@grs& (0+255),b
  1840  001DDC                     
  1841                           ; BSR set to: 0
  1842  001DDC  5172               	movf	___flmul@a& (0+255),w,b
  1843  001DDE  036F               	mulwf	(___flmul@b+1)& (0+255),b
  1844  001DE0  CFF3 F085          	movff	prodl,___flmul@temp
  1845  001DE4  CFF4 F086          	movff	prodh,___flmul@temp+1
  1846  001DE8                     
  1847                           ; BSR set to: 0
  1848  001DE8  5185               	movf	___flmul@temp& (0+255),w,b
  1849  001DEA  277B               	addwf	___flmul@grs& (0+255),f,b
  1850  001DEC  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  1851  001DEE  237C               	addwfc	(___flmul@grs+1)& (0+255),f,b
  1852  001DF0  0E00               	movlw	0
  1853  001DF2  237D               	addwfc	(___flmul@grs+2)& (0+255),f,b
  1854  001DF4  0E00               	movlw	0
  1855  001DF6  237E               	addwfc	(___flmul@grs+3)& (0+255),f,b
  1856  001DF8                     
  1857                           ; BSR set to: 0
  1858  001DF8  5173               	movf	(___flmul@a+1)& (0+255),w,b
  1859  001DFA  036E               	mulwf	___flmul@b& (0+255),b
  1860  001DFC  CFF3 F085          	movff	prodl,___flmul@temp
  1861  001E00  CFF4 F086          	movff	prodh,___flmul@temp+1
  1862  001E04                     
  1863                           ; BSR set to: 0
  1864  001E04  5185               	movf	___flmul@temp& (0+255),w,b
  1865  001E06  277B               	addwf	___flmul@grs& (0+255),f,b
  1866  001E08  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  1867  001E0A  237C               	addwfc	(___flmul@grs+1)& (0+255),f,b
  1868  001E0C  0E00               	movlw	0
  1869  001E0E  237D               	addwfc	(___flmul@grs+2)& (0+255),f,b
  1870  001E10  0E00               	movlw	0
  1871  001E12  237E               	addwfc	(___flmul@grs+3)& (0+255),f,b
  1872  001E14                     
  1873                           ; BSR set to: 0
  1874  001E14  C07D  F07E         	movff	___flmul@grs+2,___flmul@grs+3
  1875  001E18  C07C  F07D         	movff	___flmul@grs+1,___flmul@grs+2
  1876  001E1C  C07B  F07C         	movff	___flmul@grs,___flmul@grs+1
  1877  001E20  6B7B               	clrf	___flmul@grs& (0+255),b
  1878  001E22  5172               	movf	___flmul@a& (0+255),w,b
  1879  001E24  036E               	mulwf	___flmul@b& (0+255),b
  1880  001E26  CFF3 F085          	movff	prodl,___flmul@temp
  1881  001E2A  CFF4 F086          	movff	prodh,___flmul@temp+1
  1882  001E2E                     
  1883                           ; BSR set to: 0
  1884  001E2E  5185               	movf	___flmul@temp& (0+255),w,b
  1885  001E30  277B               	addwf	___flmul@grs& (0+255),f,b
  1886  001E32  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  1887  001E34  237C               	addwfc	(___flmul@grs+1)& (0+255),f,b
  1888  001E36  0E00               	movlw	0
  1889  001E38  237D               	addwfc	(___flmul@grs+2)& (0+255),f,b
  1890  001E3A  0E00               	movlw	0
  1891  001E3C  237E               	addwfc	(___flmul@grs+3)& (0+255),f,b
  1892  001E3E                     
  1893                           ; BSR set to: 0
  1894  001E3E  5174               	movf	(___flmul@a+2)& (0+255),w,b
  1895  001E40  036F               	mulwf	(___flmul@b+1)& (0+255),b
  1896  001E42  CFF3 F085          	movff	prodl,___flmul@temp
  1897  001E46  CFF4 F086          	movff	prodh,___flmul@temp+1
  1898  001E4A  5185               	movf	___flmul@temp& (0+255),w,b
  1899  001E4C  2781               	addwf	___flmul@prod& (0+255),f,b
  1900  001E4E  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  1901  001E50  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  1902  001E52  0E00               	movlw	0
  1903  001E54  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  1904  001E56  0E00               	movlw	0
  1905  001E58  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  1906  001E5A                     
  1907                           ; BSR set to: 0
  1908  001E5A  5173               	movf	(___flmul@a+1)& (0+255),w,b
  1909  001E5C  0370               	mulwf	(___flmul@b+2)& (0+255),b
  1910  001E5E  CFF3 F085          	movff	prodl,___flmul@temp
  1911  001E62  CFF4 F086          	movff	prodh,___flmul@temp+1
  1912  001E66                     
  1913                           ; BSR set to: 0
  1914  001E66  5185               	movf	___flmul@temp& (0+255),w,b
  1915  001E68  2781               	addwf	___flmul@prod& (0+255),f,b
  1916  001E6A  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  1917  001E6C  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  1918  001E6E  0E00               	movlw	0
  1919  001E70  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  1920  001E72  0E00               	movlw	0
  1921  001E74  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  1922  001E76  5174               	movf	(___flmul@a+2)& (0+255),w,b
  1923  001E78  0370               	mulwf	(___flmul@b+2)& (0+255),b
  1924  001E7A  CFF3 F085          	movff	prodl,___flmul@temp
  1925  001E7E  CFF4 F086          	movff	prodh,___flmul@temp+1
  1926  001E82                     
  1927                           ; BSR set to: 0
  1928  001E82  5185               	movf	___flmul@temp& (0+255),w,b
  1929  001E84  6F76               	movwf	??___flmul& (0+255),b
  1930  001E86  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  1931  001E88  6F77               	movwf	(??___flmul+1)& (0+255),b
  1932  001E8A  6B78               	clrf	(??___flmul+2)& (0+255),b
  1933  001E8C  6B79               	clrf	(??___flmul+3)& (0+255),b
  1934  001E8E  C078  F079         	movff	??___flmul+2,??___flmul+3
  1935  001E92  C077  F078         	movff	??___flmul+1,??___flmul+2
  1936  001E96  C076  F077         	movff	??___flmul,??___flmul+1
  1937  001E9A  6B76               	clrf	??___flmul& (0+255),b
  1938  001E9C  5176               	movf	??___flmul& (0+255),w,b
  1939  001E9E  2781               	addwf	___flmul@prod& (0+255),f,b
  1940  001EA0  5177               	movf	(??___flmul+1)& (0+255),w,b
  1941  001EA2  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  1942  001EA4  5178               	movf	(??___flmul+2)& (0+255),w,b
  1943  001EA6  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  1944  001EA8  5179               	movf	(??___flmul+3)& (0+255),w,b
  1945  001EAA  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  1946  001EAC                     
  1947                           ; BSR set to: 0
  1948  001EAC  C07B  F076         	movff	___flmul@grs,??___flmul
  1949  001EB0  C07C  F077         	movff	___flmul@grs+1,??___flmul+1
  1950  001EB4  C07D  F078         	movff	___flmul@grs+2,??___flmul+2
  1951  001EB8  C07E  F079         	movff	___flmul@grs+3,??___flmul+3
  1952  001EBC  0E19               	movlw	25
  1953  001EBE  EF66  F00F         	goto	u2300
  1954  001EC2                     u2305:
  1955  001EC2  90D8               	bcf	status,0,c
  1956  001EC4  3379               	rrcf	(??___flmul+3)& (0+255),f,b
  1957  001EC6  3378               	rrcf	(??___flmul+2)& (0+255),f,b
  1958  001EC8  3377               	rrcf	(??___flmul+1)& (0+255),f,b
  1959  001ECA  3376               	rrcf	??___flmul& (0+255),f,b
  1960  001ECC                     u2300:
  1961  001ECC  2EE8               	decfsz	wreg,f,c
  1962  001ECE  EF61  F00F         	goto	u2305
  1963  001ED2  5176               	movf	??___flmul& (0+255),w,b
  1964  001ED4  2781               	addwf	___flmul@prod& (0+255),f,b
  1965  001ED6  5177               	movf	(??___flmul+1)& (0+255),w,b
  1966  001ED8  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  1967  001EDA  5178               	movf	(??___flmul+2)& (0+255),w,b
  1968  001EDC  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  1969  001EDE  5179               	movf	(??___flmul+3)& (0+255),w,b
  1970  001EE0  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  1971  001EE2                     
  1972                           ; BSR set to: 0
  1973  001EE2  C07D  F07E         	movff	___flmul@grs+2,___flmul@grs+3
  1974  001EE6  C07C  F07D         	movff	___flmul@grs+1,___flmul@grs+2
  1975  001EEA  C07B  F07C         	movff	___flmul@grs,___flmul@grs+1
  1976  001EEE  6B7B               	clrf	___flmul@grs& (0+255),b
  1977  001EF0                     
  1978                           ; BSR set to: 0
  1979  001EF0  517F               	movf	___flmul@aexp& (0+255),w,b
  1980  001EF2  C080  F076         	movff	___flmul@bexp,??___flmul
  1981  001EF6  6B77               	clrf	(??___flmul+1)& (0+255),b
  1982  001EF8  2776               	addwf	??___flmul& (0+255),f,b
  1983  001EFA  0E00               	movlw	0
  1984  001EFC  2377               	addwfc	(??___flmul+1)& (0+255),f,b
  1985  001EFE  0E82               	movlw	130
  1986  001F00  2576               	addwf	??___flmul& (0+255),w,b
  1987  001F02  6F85               	movwf	___flmul@temp& (0+255),b
  1988  001F04  0EFF               	movlw	255
  1989  001F06  2177               	addwfc	(??___flmul+1)& (0+255),w,b
  1990  001F08  6F86               	movwf	(___flmul@temp+1)& (0+255),b
  1991  001F0A  EF9C  F00F         	goto	l2510
  1992  001F0E                     l2504:
  1993                           
  1994                           ; BSR set to: 0
  1995  001F0E  90D8               	bcf	status,0,c
  1996  001F10  3781               	rlcf	___flmul@prod& (0+255),f,b
  1997  001F12  3782               	rlcf	(___flmul@prod+1)& (0+255),f,b
  1998  001F14  3783               	rlcf	(___flmul@prod+2)& (0+255),f,b
  1999  001F16  3784               	rlcf	(___flmul@prod+3)& (0+255),f,b
  2000  001F18                     
  2001                           ; BSR set to: 0
  2002  001F18  AF7E               	btfss	(___flmul@grs+3)& (0+255),7,b
  2003  001F1A  EF91  F00F         	goto	u2311
  2004  001F1E  EF93  F00F         	goto	u2310
  2005  001F22                     u2311:
  2006  001F22  EF94  F00F         	goto	l857
  2007  001F26                     u2310:
  2008  001F26                     
  2009                           ; BSR set to: 0
  2010  001F26  8181               	bsf	___flmul@prod& (0+255),0,b
  2011  001F28                     l857:
  2012                           
  2013                           ; BSR set to: 0
  2014  001F28  90D8               	bcf	status,0,c
  2015  001F2A  377B               	rlcf	___flmul@grs& (0+255),f,b
  2016  001F2C  377C               	rlcf	(___flmul@grs+1)& (0+255),f,b
  2017  001F2E  377D               	rlcf	(___flmul@grs+2)& (0+255),f,b
  2018  001F30  377E               	rlcf	(___flmul@grs+3)& (0+255),f,b
  2019  001F32  0785               	decf	___flmul@temp& (0+255),f,b
  2020  001F34  A0D8               	btfss	status,0,c
  2021  001F36  0786               	decf	(___flmul@temp+1)& (0+255),f,b
  2022  001F38                     l2510:
  2023                           
  2024                           ; BSR set to: 0
  2025  001F38  AF83               	btfss	(___flmul@prod+2)& (0+255),7,b
  2026  001F3A  EFA1  F00F         	goto	u2321
  2027  001F3E  EFA3  F00F         	goto	u2320
  2028  001F42                     u2321:
  2029  001F42  EF87  F00F         	goto	l2504
  2030  001F46                     u2320:
  2031  001F46                     
  2032                           ; BSR set to: 0
  2033  001F46  0E00               	movlw	0
  2034  001F48  6F7F               	movwf	___flmul@aexp& (0+255),b
  2035  001F4A                     
  2036                           ; BSR set to: 0
  2037  001F4A  AF7E               	btfss	(___flmul@grs+3)& (0+255),7,b
  2038  001F4C  EFAA  F00F         	goto	u2331
  2039  001F50  EFAC  F00F         	goto	u2330
  2040  001F54                     u2331:
  2041  001F54  EFD0  F00F         	goto	l859
  2042  001F58                     u2330:
  2043  001F58                     
  2044                           ; BSR set to: 0
  2045  001F58  0EFF               	movlw	255
  2046  001F5A  157B               	andwf	___flmul@grs& (0+255),w,b
  2047  001F5C  6F76               	movwf	??___flmul& (0+255),b
  2048  001F5E  0EFF               	movlw	255
  2049  001F60  157C               	andwf	(___flmul@grs+1)& (0+255),w,b
  2050  001F62  6F77               	movwf	(??___flmul+1)& (0+255),b
  2051  001F64  0EFF               	movlw	255
  2052  001F66  157D               	andwf	(___flmul@grs+2)& (0+255),w,b
  2053  001F68  6F78               	movwf	(??___flmul+2)& (0+255),b
  2054  001F6A  0E7F               	movlw	127
  2055  001F6C  157E               	andwf	(___flmul@grs+3)& (0+255),w,b
  2056  001F6E  6F79               	movwf	(??___flmul+3)& (0+255),b
  2057  001F70  5176               	movf	??___flmul& (0+255),w,b
  2058  001F72  1177               	iorwf	(??___flmul+1)& (0+255),w,b
  2059  001F74  1178               	iorwf	(??___flmul+2)& (0+255),w,b
  2060  001F76  1179               	iorwf	(??___flmul+3)& (0+255),w,b
  2061  001F78  B4D8               	btfsc	status,2,c
  2062  001F7A  EFC1  F00F         	goto	u2341
  2063  001F7E  EFC3  F00F         	goto	u2340
  2064  001F82                     u2341:
  2065  001F82  EFC7  F00F         	goto	l860
  2066  001F86                     u2340:
  2067  001F86                     l2518:
  2068                           
  2069                           ; BSR set to: 0
  2070  001F86  0E01               	movlw	1
  2071  001F88  6F7F               	movwf	___flmul@aexp& (0+255),b
  2072  001F8A  EFD0  F00F         	goto	l859
  2073  001F8E                     l860:
  2074                           
  2075                           ; BSR set to: 0
  2076  001F8E  A181               	btfss	___flmul@prod& (0+255),0,b
  2077  001F90  EFCC  F00F         	goto	u2351
  2078  001F94  EFCE  F00F         	goto	u2350
  2079  001F98                     u2351:
  2080  001F98  EFD0  F00F         	goto	l859
  2081  001F9C                     u2350:
  2082  001F9C  EFC3  F00F         	goto	l2518
  2083  001FA0                     l859:
  2084                           
  2085                           ; BSR set to: 0
  2086  001FA0  517F               	movf	___flmul@aexp& (0+255),w,b
  2087  001FA2  B4D8               	btfsc	status,2,c
  2088  001FA4  EFD6  F00F         	goto	u2361
  2089  001FA8  EFD8  F00F         	goto	u2360
  2090  001FAC                     u2361:
  2091  001FAC  EFFC  F00F         	goto	l2530
  2092  001FB0                     u2360:
  2093  001FB0                     
  2094                           ; BSR set to: 0
  2095  001FB0  0E01               	movlw	1
  2096  001FB2  2781               	addwf	___flmul@prod& (0+255),f,b
  2097  001FB4  0E00               	movlw	0
  2098  001FB6  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  2099  001FB8  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  2100  001FBA  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  2101  001FBC                     
  2102                           ; BSR set to: 0
  2103  001FBC  A184               	btfss	(___flmul@prod+3)& (0+255),0,b
  2104  001FBE  EFE3  F00F         	goto	u2371
  2105  001FC2  EFE5  F00F         	goto	u2370
  2106  001FC6                     u2371:
  2107  001FC6  EFFC  F00F         	goto	l2530
  2108  001FCA                     u2370:
  2109  001FCA                     
  2110                           ; BSR set to: 0
  2111  001FCA  C081  F076         	movff	___flmul@prod,??___flmul
  2112  001FCE  C082  F077         	movff	___flmul@prod+1,??___flmul+1
  2113  001FD2  C083  F078         	movff	___flmul@prod+2,??___flmul+2
  2114  001FD6  C084  F079         	movff	___flmul@prod+3,??___flmul+3
  2115  001FDA  3579               	rlcf	(??___flmul+3)& (0+255),w,b
  2116  001FDC  3379               	rrcf	(??___flmul+3)& (0+255),f,b
  2117  001FDE  3378               	rrcf	(??___flmul+2)& (0+255),f,b
  2118  001FE0  3377               	rrcf	(??___flmul+1)& (0+255),f,b
  2119  001FE2  3376               	rrcf	??___flmul& (0+255),f,b
  2120  001FE4  C076  F081         	movff	??___flmul,___flmul@prod
  2121  001FE8  C077  F082         	movff	??___flmul+1,___flmul@prod+1
  2122  001FEC  C078  F083         	movff	??___flmul+2,___flmul@prod+2
  2123  001FF0  C079  F084         	movff	??___flmul+3,___flmul@prod+3
  2124  001FF4                     
  2125                           ; BSR set to: 0
  2126  001FF4  4B85               	infsnz	___flmul@temp& (0+255),f,b
  2127  001FF6  2B86               	incf	(___flmul@temp+1)& (0+255),f,b
  2128  001FF8                     l2530:
  2129                           
  2130                           ; BSR set to: 0
  2131  001FF8  BF86               	btfsc	(___flmul@temp+1)& (0+255),7,b
  2132  001FFA  EF07  F010         	goto	u2381
  2133  001FFE  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  2134  002000  E108               	bnz	u2380
  2135  002002  2985               	incf	___flmul@temp& (0+255),w,b
  2136  002004  A0D8               	btfss	status,0,c
  2137  002006  EF07  F010         	goto	u2381
  2138  00200A  EF09  F010         	goto	u2380
  2139  00200E                     u2381:
  2140  00200E  EF13  F010         	goto	l2534
  2141  002012                     u2380:
  2142  002012                     
  2143                           ; BSR set to: 0
  2144  002012  0E00               	movlw	0
  2145  002014  6F81               	movwf	___flmul@prod& (0+255),b
  2146  002016  0E00               	movlw	0
  2147  002018  6F82               	movwf	(___flmul@prod+1)& (0+255),b
  2148  00201A  0E80               	movlw	128
  2149  00201C  6F83               	movwf	(___flmul@prod+2)& (0+255),b
  2150  00201E  0E7F               	movlw	127
  2151  002020  6F84               	movwf	(___flmul@prod+3)& (0+255),b
  2152  002022  EF41  F010         	goto	l2546
  2153  002026                     l2534:
  2154                           
  2155                           ; BSR set to: 0
  2156  002026  BF86               	btfsc	(___flmul@temp+1)& (0+255),7,b
  2157  002028  EF20  F010         	goto	u2390
  2158  00202C  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  2159  00202E  E106               	bnz	u2391
  2160  002030  0585               	decf	___flmul@temp& (0+255),w,b
  2161  002032  B0D8               	btfsc	status,0,c
  2162  002034  EF1E  F010         	goto	u2391
  2163  002038  EF20  F010         	goto	u2390
  2164  00203C                     u2391:
  2165  00203C  EF2C  F010         	goto	l867
  2166  002040                     u2390:
  2167  002040                     
  2168                           ; BSR set to: 0
  2169  002040  0E00               	movlw	0
  2170  002042  6F81               	movwf	___flmul@prod& (0+255),b
  2171  002044  0E00               	movlw	0
  2172  002046  6F82               	movwf	(___flmul@prod+1)& (0+255),b
  2173  002048  0E00               	movlw	0
  2174  00204A  6F83               	movwf	(___flmul@prod+2)& (0+255),b
  2175  00204C  0E00               	movlw	0
  2176  00204E  6F84               	movwf	(___flmul@prod+3)& (0+255),b
  2177  002050  0E00               	movlw	0
  2178  002052  6F7A               	movwf	___flmul@sign& (0+255),b
  2179  002054  EF41  F010         	goto	l2546
  2180  002058                     l867:
  2181                           
  2182                           ; BSR set to: 0
  2183  002058  C085  F080         	movff	___flmul@temp,___flmul@bexp
  2184  00205C                     
  2185                           ; BSR set to: 0
  2186  00205C  0EFF               	movlw	255
  2187  00205E  1781               	andwf	___flmul@prod& (0+255),f,b
  2188  002060  0EFF               	movlw	255
  2189  002062  1782               	andwf	(___flmul@prod+1)& (0+255),f,b
  2190  002064  0E7F               	movlw	127
  2191  002066  1783               	andwf	(___flmul@prod+2)& (0+255),f,b
  2192  002068  0E00               	movlw	0
  2193  00206A  1784               	andwf	(___flmul@prod+3)& (0+255),f,b
  2194  00206C                     
  2195                           ; BSR set to: 0
  2196  00206C  A180               	btfss	___flmul@bexp& (0+255),0,b
  2197  00206E  EF3B  F010         	goto	u2401
  2198  002072  EF3D  F010         	goto	u2400
  2199  002076                     u2401:
  2200  002076  EF3E  F010         	goto	l2544
  2201  00207A                     u2400:
  2202  00207A                     
  2203                           ; BSR set to: 0
  2204  00207A  8F83               	bsf	(___flmul@prod+2)& (0+255),7,b
  2205  00207C                     l2544:
  2206                           
  2207                           ; BSR set to: 0
  2208  00207C  90D8               	bcf	status,0,c
  2209  00207E  3180               	rrcf	___flmul@bexp& (0+255),w,b
  2210  002080  6F84               	movwf	(___flmul@prod+3)& (0+255),b
  2211  002082                     l2546:
  2212                           
  2213                           ; BSR set to: 0
  2214  002082  517A               	movf	___flmul@sign& (0+255),w,b
  2215  002084  1384               	iorwf	(___flmul@prod+3)& (0+255),f,b
  2216  002086                     
  2217                           ; BSR set to: 0
  2218  002086  C081  F06E         	movff	___flmul@prod,?___flmul
  2219  00208A  C082  F06F         	movff	___flmul@prod+1,?___flmul+1
  2220  00208E  C083  F070         	movff	___flmul@prod+2,?___flmul+2
  2221  002092  C084  F071         	movff	___flmul@prod+3,?___flmul+3
  2222  002096                     l854:
  2223                           
  2224                           ; BSR set to: 0
  2225  002096  0012               	return		;funcret
  2226  002098                     __end_of___flmul:
  2227                           	callstack 0
  2228                           
  2229 ;; *************** function ___fldiv *****************
  2230 ;; Defined at:
  2231 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
  2232 ;; Parameters:    Size  Location     Type
  2233 ;;  b               4   39[BANK0 ] unsigned char 
  2234 ;;  a               4   43[BANK0 ] unsigned char 
  2235 ;; Auto vars:     Size  Location     Type
  2236 ;;  grs             4   58[BANK0 ] unsigned long 
  2237 ;;  rem             4   51[BANK0 ] unsigned long 
  2238 ;;  new_exp         2   56[BANK0 ] short 
  2239 ;;  aexp            1   63[BANK0 ] unsigned char 
  2240 ;;  bexp            1   62[BANK0 ] unsigned char 
  2241 ;;  sign            1   55[BANK0 ] unsigned char 
  2242 ;; Return value:  Size  Location     Type
  2243 ;;                  4   39[BANK0 ] unsigned char 
  2244 ;; Registers used:
  2245 ;;		wreg, status,2, status,0
  2246 ;; Tracked objects:
  2247 ;;		On entry : 0/0
  2248 ;;		On exit  : 0/0
  2249 ;;		Unchanged: 0/0
  2250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2251 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2252 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2253 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2254 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2255 ;;Total ram usage:       25 bytes
  2256 ;; Hardware stack levels used: 1
  2257 ;; Hardware stack levels required when called: 4
  2258 ;; This function calls:
  2259 ;;		Nothing
  2260 ;; This function is called by:
  2261 ;;		_UART_Init
  2262 ;; This function uses a non-reentrant model
  2263 ;;
  2264                           
  2265                           	psect	text6
  2266  002098                     __ptext6:
  2267                           	callstack 0
  2268  002098                     ___fldiv:
  2269                           	callstack 24
  2270  002098  0100               	movlb	0	; () banked
  2271  00209A  518A               	movf	(___fldiv@b+3)& (0+255),w,b
  2272  00209C  0B80               	andlw	128
  2273  00209E  6F97               	movwf	___fldiv@sign& (0+255),b
  2274  0020A0  518A               	movf	(___fldiv@b+3)& (0+255),w,b
  2275  0020A2  258A               	addwf	(___fldiv@b+3)& (0+255),w,b
  2276  0020A4  6F9E               	movwf	___fldiv@bexp& (0+255),b
  2277  0020A6                     
  2278                           ; BSR set to: 0
  2279  0020A6  AF89               	btfss	(___fldiv@b+2)& (0+255),7,b
  2280  0020A8  EF58  F010         	goto	u1991
  2281  0020AC  EF5A  F010         	goto	u1990
  2282  0020B0                     u1991:
  2283  0020B0  EF5B  F010         	goto	l2290
  2284  0020B4                     u1990:
  2285  0020B4                     
  2286                           ; BSR set to: 0
  2287  0020B4  819E               	bsf	___fldiv@bexp& (0+255),0,b
  2288  0020B6                     l2290:
  2289                           
  2290                           ; BSR set to: 0
  2291  0020B6  519E               	movf	___fldiv@bexp& (0+255),w,b
  2292  0020B8  B4D8               	btfsc	status,2,c
  2293  0020BA  EF61  F010         	goto	u2001
  2294  0020BE  EF63  F010         	goto	u2000
  2295  0020C2                     u2001:
  2296  0020C2  EF78  F010         	goto	l2300
  2297  0020C6                     u2000:
  2298  0020C6                     
  2299                           ; BSR set to: 0
  2300  0020C6  299E               	incf	___fldiv@bexp& (0+255),w,b
  2301  0020C8  A4D8               	btfss	status,2,c
  2302  0020CA  EF69  F010         	goto	u2011
  2303  0020CE  EF6B  F010         	goto	u2010
  2304  0020D2                     u2011:
  2305  0020D2  EF73  F010         	goto	l2296
  2306  0020D6                     u2010:
  2307  0020D6                     
  2308                           ; BSR set to: 0
  2309  0020D6  0E00               	movlw	0
  2310  0020D8  6F87               	movwf	___fldiv@b& (0+255),b
  2311  0020DA  0E00               	movlw	0
  2312  0020DC  6F88               	movwf	(___fldiv@b+1)& (0+255),b
  2313  0020DE  0E00               	movlw	0
  2314  0020E0  6F89               	movwf	(___fldiv@b+2)& (0+255),b
  2315  0020E2  0E00               	movlw	0
  2316  0020E4  6F8A               	movwf	(___fldiv@b+3)& (0+255),b
  2317  0020E6                     l2296:
  2318                           
  2319                           ; BSR set to: 0
  2320  0020E6  8F89               	bsf	(___fldiv@b+2)& (0+255),7,b
  2321  0020E8                     
  2322                           ; BSR set to: 0
  2323  0020E8  0E00               	movlw	0
  2324  0020EA  6F8A               	movwf	(___fldiv@b+3)& (0+255),b
  2325  0020EC  EF80  F010         	goto	l2302
  2326  0020F0                     l2300:
  2327                           
  2328                           ; BSR set to: 0
  2329  0020F0  0E00               	movlw	0
  2330  0020F2  6F87               	movwf	___fldiv@b& (0+255),b
  2331  0020F4  0E00               	movlw	0
  2332  0020F6  6F88               	movwf	(___fldiv@b+1)& (0+255),b
  2333  0020F8  0E00               	movlw	0
  2334  0020FA  6F89               	movwf	(___fldiv@b+2)& (0+255),b
  2335  0020FC  0E00               	movlw	0
  2336  0020FE  6F8A               	movwf	(___fldiv@b+3)& (0+255),b
  2337  002100                     l2302:
  2338                           
  2339                           ; BSR set to: 0
  2340  002100  518E               	movf	(___fldiv@a+3)& (0+255),w,b
  2341  002102  0B80               	andlw	128
  2342  002104  1B97               	xorwf	___fldiv@sign& (0+255),f,b
  2343  002106                     
  2344                           ; BSR set to: 0
  2345  002106  518E               	movf	(___fldiv@a+3)& (0+255),w,b
  2346  002108  258E               	addwf	(___fldiv@a+3)& (0+255),w,b
  2347  00210A  6F9F               	movwf	___fldiv@aexp& (0+255),b
  2348  00210C                     
  2349                           ; BSR set to: 0
  2350  00210C  AF8D               	btfss	(___fldiv@a+2)& (0+255),7,b
  2351  00210E  EF8B  F010         	goto	u2021
  2352  002112  EF8D  F010         	goto	u2020
  2353  002116                     u2021:
  2354  002116  EF8E  F010         	goto	l2310
  2355  00211A                     u2020:
  2356  00211A                     
  2357                           ; BSR set to: 0
  2358  00211A  819F               	bsf	___fldiv@aexp& (0+255),0,b
  2359  00211C                     l2310:
  2360                           
  2361                           ; BSR set to: 0
  2362  00211C  519F               	movf	___fldiv@aexp& (0+255),w,b
  2363  00211E  B4D8               	btfsc	status,2,c
  2364  002120  EF94  F010         	goto	u2031
  2365  002124  EF96  F010         	goto	u2030
  2366  002128                     u2031:
  2367  002128  EFAB  F010         	goto	l2320
  2368  00212C                     u2030:
  2369  00212C                     
  2370                           ; BSR set to: 0
  2371  00212C  299F               	incf	___fldiv@aexp& (0+255),w,b
  2372  00212E  A4D8               	btfss	status,2,c
  2373  002130  EF9C  F010         	goto	u2041
  2374  002134  EF9E  F010         	goto	u2040
  2375  002138                     u2041:
  2376  002138  EFA6  F010         	goto	l2316
  2377  00213C                     u2040:
  2378  00213C                     
  2379                           ; BSR set to: 0
  2380  00213C  0E00               	movlw	0
  2381  00213E  6F8B               	movwf	___fldiv@a& (0+255),b
  2382  002140  0E00               	movlw	0
  2383  002142  6F8C               	movwf	(___fldiv@a+1)& (0+255),b
  2384  002144  0E00               	movlw	0
  2385  002146  6F8D               	movwf	(___fldiv@a+2)& (0+255),b
  2386  002148  0E00               	movlw	0
  2387  00214A  6F8E               	movwf	(___fldiv@a+3)& (0+255),b
  2388  00214C                     l2316:
  2389                           
  2390                           ; BSR set to: 0
  2391  00214C  8F8D               	bsf	(___fldiv@a+2)& (0+255),7,b
  2392  00214E                     
  2393                           ; BSR set to: 0
  2394  00214E  0E00               	movlw	0
  2395  002150  6F8E               	movwf	(___fldiv@a+3)& (0+255),b
  2396  002152  EFB3  F010         	goto	l2322
  2397  002156                     l2320:
  2398                           
  2399                           ; BSR set to: 0
  2400  002156  0E00               	movlw	0
  2401  002158  6F8B               	movwf	___fldiv@a& (0+255),b
  2402  00215A  0E00               	movlw	0
  2403  00215C  6F8C               	movwf	(___fldiv@a+1)& (0+255),b
  2404  00215E  0E00               	movlw	0
  2405  002160  6F8D               	movwf	(___fldiv@a+2)& (0+255),b
  2406  002162  0E00               	movlw	0
  2407  002164  6F8E               	movwf	(___fldiv@a+3)& (0+255),b
  2408  002166                     l2322:
  2409                           
  2410                           ; BSR set to: 0
  2411  002166  518B               	movf	___fldiv@a& (0+255),w,b
  2412  002168  118C               	iorwf	(___fldiv@a+1)& (0+255),w,b
  2413  00216A  118D               	iorwf	(___fldiv@a+2)& (0+255),w,b
  2414  00216C  118E               	iorwf	(___fldiv@a+3)& (0+255),w,b
  2415  00216E  A4D8               	btfss	status,2,c
  2416  002170  EFBC  F010         	goto	u2051
  2417  002174  EFBE  F010         	goto	u2050
  2418  002178                     u2051:
  2419  002178  EFD6  F010         	goto	l2334
  2420  00217C                     u2050:
  2421  00217C                     
  2422                           ; BSR set to: 0
  2423  00217C  0E00               	movlw	0
  2424  00217E  6F87               	movwf	___fldiv@b& (0+255),b
  2425  002180  0E00               	movlw	0
  2426  002182  6F88               	movwf	(___fldiv@b+1)& (0+255),b
  2427  002184  0E00               	movlw	0
  2428  002186  6F89               	movwf	(___fldiv@b+2)& (0+255),b
  2429  002188  0E00               	movlw	0
  2430  00218A  6F8A               	movwf	(___fldiv@b+3)& (0+255),b
  2431  00218C                     
  2432                           ; BSR set to: 0
  2433  00218C  0E80               	movlw	128
  2434  00218E  1389               	iorwf	(___fldiv@b+2)& (0+255),f,b
  2435  002190  0E7F               	movlw	127
  2436  002192  138A               	iorwf	(___fldiv@b+3)& (0+255),f,b
  2437  002194                     l2328:
  2438                           
  2439                           ; BSR set to: 0
  2440  002194  5197               	movf	___fldiv@sign& (0+255),w,b
  2441  002196  138A               	iorwf	(___fldiv@b+3)& (0+255),f,b
  2442  002198                     
  2443                           ; BSR set to: 0
  2444  002198  C087  F087         	movff	___fldiv@b,?___fldiv
  2445  00219C  C088  F088         	movff	___fldiv@b+1,?___fldiv+1
  2446  0021A0  C089  F089         	movff	___fldiv@b+2,?___fldiv+2
  2447  0021A4  C08A  F08A         	movff	___fldiv@b+3,?___fldiv+3
  2448  0021A8  EF19  F012         	goto	l818
  2449  0021AC                     l2334:
  2450                           
  2451                           ; BSR set to: 0
  2452  0021AC  519E               	movf	___fldiv@bexp& (0+255),w,b
  2453  0021AE  A4D8               	btfss	status,2,c
  2454  0021B0  EFDC  F010         	goto	u2061
  2455  0021B4  EFDE  F010         	goto	u2060
  2456  0021B8                     u2061:
  2457  0021B8  EFE8  F010         	goto	l2342
  2458  0021BC                     u2060:
  2459  0021BC                     
  2460                           ; BSR set to: 0
  2461  0021BC  0E00               	movlw	0
  2462  0021BE  6F87               	movwf	?___fldiv& (0+255),b
  2463  0021C0  0E00               	movlw	0
  2464  0021C2  6F88               	movwf	(?___fldiv+1)& (0+255),b
  2465  0021C4  0E00               	movlw	0
  2466  0021C6  6F89               	movwf	(?___fldiv+2)& (0+255),b
  2467  0021C8  0E00               	movlw	0
  2468  0021CA  6F8A               	movwf	(?___fldiv+3)& (0+255),b
  2469  0021CC  EF19  F012         	goto	l818
  2470  0021D0                     l2342:
  2471                           
  2472                           ; BSR set to: 0
  2473  0021D0  519F               	movf	___fldiv@aexp& (0+255),w,b
  2474  0021D2  C09E  F08F         	movff	___fldiv@bexp,??___fldiv
  2475  0021D6  6B90               	clrf	(??___fldiv+1)& (0+255),b
  2476  0021D8  5F8F               	subwf	??___fldiv& (0+255),f,b
  2477  0021DA  0E00               	movlw	0
  2478  0021DC  5B90               	subwfb	(??___fldiv+1)& (0+255),f,b
  2479  0021DE  0E7F               	movlw	127
  2480  0021E0  258F               	addwf	??___fldiv& (0+255),w,b
  2481  0021E2  6F98               	movwf	___fldiv@new_exp& (0+255),b
  2482  0021E4  0E00               	movlw	0
  2483  0021E6  2190               	addwfc	(??___fldiv+1)& (0+255),w,b
  2484  0021E8  6F99               	movwf	(___fldiv@new_exp+1)& (0+255),b
  2485  0021EA                     
  2486                           ; BSR set to: 0
  2487  0021EA  C087  F093         	movff	___fldiv@b,___fldiv@rem
  2488  0021EE  C088  F094         	movff	___fldiv@b+1,___fldiv@rem+1
  2489  0021F2  C089  F095         	movff	___fldiv@b+2,___fldiv@rem+2
  2490  0021F6  C08A  F096         	movff	___fldiv@b+3,___fldiv@rem+3
  2491  0021FA                     
  2492                           ; BSR set to: 0
  2493  0021FA  0E00               	movlw	0
  2494  0021FC  6F87               	movwf	___fldiv@b& (0+255),b
  2495  0021FE  0E00               	movlw	0
  2496  002200  6F88               	movwf	(___fldiv@b+1)& (0+255),b
  2497  002202  0E00               	movlw	0
  2498  002204  6F89               	movwf	(___fldiv@b+2)& (0+255),b
  2499  002206  0E00               	movlw	0
  2500  002208  6F8A               	movwf	(___fldiv@b+3)& (0+255),b
  2501  00220A                     
  2502                           ; BSR set to: 0
  2503  00220A  0E00               	movlw	0
  2504  00220C  6F9A               	movwf	___fldiv@grs& (0+255),b
  2505  00220E  0E00               	movlw	0
  2506  002210  6F9B               	movwf	(___fldiv@grs+1)& (0+255),b
  2507  002212  0E00               	movlw	0
  2508  002214  6F9C               	movwf	(___fldiv@grs+2)& (0+255),b
  2509  002216  0E00               	movlw	0
  2510  002218  6F9D               	movwf	(___fldiv@grs+3)& (0+255),b
  2511  00221A                     
  2512                           ; BSR set to: 0
  2513  00221A  0E00               	movlw	0
  2514  00221C  6F9F               	movwf	___fldiv@aexp& (0+255),b
  2515  00221E  EF49  F011         	goto	l820
  2516  002222                     l2352:
  2517                           
  2518                           ; BSR set to: 0
  2519  002222  519F               	movf	___fldiv@aexp& (0+255),w,b
  2520  002224  B4D8               	btfsc	status,2,c
  2521  002226  EF17  F011         	goto	u2071
  2522  00222A  EF19  F011         	goto	u2070
  2523  00222E                     u2071:
  2524  00222E  EF30  F011         	goto	l2360
  2525  002232                     u2070:
  2526  002232                     
  2527                           ; BSR set to: 0
  2528  002232  90D8               	bcf	status,0,c
  2529  002234  3793               	rlcf	___fldiv@rem& (0+255),f,b
  2530  002236  3794               	rlcf	(___fldiv@rem+1)& (0+255),f,b
  2531  002238  3795               	rlcf	(___fldiv@rem+2)& (0+255),f,b
  2532  00223A  3796               	rlcf	(___fldiv@rem+3)& (0+255),f,b
  2533  00223C  90D8               	bcf	status,0,c
  2534  00223E  3787               	rlcf	___fldiv@b& (0+255),f,b
  2535  002240  3788               	rlcf	(___fldiv@b+1)& (0+255),f,b
  2536  002242  3789               	rlcf	(___fldiv@b+2)& (0+255),f,b
  2537  002244  378A               	rlcf	(___fldiv@b+3)& (0+255),f,b
  2538  002246                     
  2539                           ; BSR set to: 0
  2540  002246  AF9D               	btfss	(___fldiv@grs+3)& (0+255),7,b
  2541  002248  EF28  F011         	goto	u2081
  2542  00224C  EF2A  F011         	goto	u2080
  2543  002250                     u2081:
  2544  002250  EF2B  F011         	goto	l823
  2545  002254                     u2080:
  2546  002254                     
  2547                           ; BSR set to: 0
  2548  002254  8187               	bsf	___fldiv@b& (0+255),0,b
  2549  002256                     l823:
  2550                           
  2551                           ; BSR set to: 0
  2552  002256  90D8               	bcf	status,0,c
  2553  002258  379A               	rlcf	___fldiv@grs& (0+255),f,b
  2554  00225A  379B               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  2555  00225C  379C               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  2556  00225E  379D               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  2557  002260                     l2360:
  2558                           
  2559                           ; BSR set to: 0
  2560  002260  518B               	movf	___fldiv@a& (0+255),w,b
  2561  002262  5D93               	subwf	___fldiv@rem& (0+255),w,b
  2562  002264  518C               	movf	(___fldiv@a+1)& (0+255),w,b
  2563  002266  5994               	subwfb	(___fldiv@rem+1)& (0+255),w,b
  2564  002268  518D               	movf	(___fldiv@a+2)& (0+255),w,b
  2565  00226A  5995               	subwfb	(___fldiv@rem+2)& (0+255),w,b
  2566  00226C  518E               	movf	(___fldiv@a+3)& (0+255),w,b
  2567  00226E  5996               	subwfb	(___fldiv@rem+3)& (0+255),w,b
  2568  002270  A0D8               	btfss	status,0,c
  2569  002272  EF3D  F011         	goto	u2091
  2570  002276  EF3F  F011         	goto	u2090
  2571  00227A                     u2091:
  2572  00227A  EF48  F011         	goto	l2366
  2573  00227E                     u2090:
  2574  00227E                     
  2575                           ; BSR set to: 0
  2576  00227E  8D9D               	bsf	(___fldiv@grs+3)& (0+255),6,b
  2577  002280                     
  2578                           ; BSR set to: 0
  2579  002280  518B               	movf	___fldiv@a& (0+255),w,b
  2580  002282  5F93               	subwf	___fldiv@rem& (0+255),f,b
  2581  002284  518C               	movf	(___fldiv@a+1)& (0+255),w,b
  2582  002286  5B94               	subwfb	(___fldiv@rem+1)& (0+255),f,b
  2583  002288  518D               	movf	(___fldiv@a+2)& (0+255),w,b
  2584  00228A  5B95               	subwfb	(___fldiv@rem+2)& (0+255),f,b
  2585  00228C  518E               	movf	(___fldiv@a+3)& (0+255),w,b
  2586  00228E  5B96               	subwfb	(___fldiv@rem+3)& (0+255),f,b
  2587  002290                     l2366:
  2588                           
  2589                           ; BSR set to: 0
  2590  002290  2B9F               	incf	___fldiv@aexp& (0+255),f,b
  2591  002292                     l820:
  2592                           
  2593                           ; BSR set to: 0
  2594  002292  0E19               	movlw	25
  2595  002294  659F               	cpfsgt	___fldiv@aexp& (0+255),b
  2596  002296  EF4F  F011         	goto	u2101
  2597  00229A  EF51  F011         	goto	u2100
  2598  00229E                     u2101:
  2599  00229E  EF11  F011         	goto	l2352
  2600  0022A2                     u2100:
  2601  0022A2                     
  2602                           ; BSR set to: 0
  2603  0022A2  5193               	movf	___fldiv@rem& (0+255),w,b
  2604  0022A4  1194               	iorwf	(___fldiv@rem+1)& (0+255),w,b
  2605  0022A6  1195               	iorwf	(___fldiv@rem+2)& (0+255),w,b
  2606  0022A8  1196               	iorwf	(___fldiv@rem+3)& (0+255),w,b
  2607  0022AA  B4D8               	btfsc	status,2,c
  2608  0022AC  EF5A  F011         	goto	u2111
  2609  0022B0  EF5C  F011         	goto	u2110
  2610  0022B4                     u2111:
  2611  0022B4  EF74  F011         	goto	l2378
  2612  0022B8                     u2110:
  2613  0022B8                     
  2614                           ; BSR set to: 0
  2615  0022B8  819A               	bsf	___fldiv@grs& (0+255),0,b
  2616  0022BA  EF74  F011         	goto	l2378
  2617  0022BE                     l2372:
  2618                           
  2619                           ; BSR set to: 0
  2620  0022BE  90D8               	bcf	status,0,c
  2621  0022C0  3787               	rlcf	___fldiv@b& (0+255),f,b
  2622  0022C2  3788               	rlcf	(___fldiv@b+1)& (0+255),f,b
  2623  0022C4  3789               	rlcf	(___fldiv@b+2)& (0+255),f,b
  2624  0022C6  378A               	rlcf	(___fldiv@b+3)& (0+255),f,b
  2625  0022C8                     
  2626                           ; BSR set to: 0
  2627  0022C8  AF9D               	btfss	(___fldiv@grs+3)& (0+255),7,b
  2628  0022CA  EF69  F011         	goto	u2121
  2629  0022CE  EF6B  F011         	goto	u2120
  2630  0022D2                     u2121:
  2631  0022D2  EF6C  F011         	goto	l829
  2632  0022D6                     u2120:
  2633  0022D6                     
  2634                           ; BSR set to: 0
  2635  0022D6  8187               	bsf	___fldiv@b& (0+255),0,b
  2636  0022D8                     l829:
  2637                           
  2638                           ; BSR set to: 0
  2639  0022D8  90D8               	bcf	status,0,c
  2640  0022DA  379A               	rlcf	___fldiv@grs& (0+255),f,b
  2641  0022DC  379B               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  2642  0022DE  379C               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  2643  0022E0  379D               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  2644  0022E2  0798               	decf	___fldiv@new_exp& (0+255),f,b
  2645  0022E4  A0D8               	btfss	status,0,c
  2646  0022E6  0799               	decf	(___fldiv@new_exp+1)& (0+255),f,b
  2647  0022E8                     l2378:
  2648                           
  2649                           ; BSR set to: 0
  2650  0022E8  AF89               	btfss	(___fldiv@b+2)& (0+255),7,b
  2651  0022EA  EF79  F011         	goto	u2131
  2652  0022EE  EF7B  F011         	goto	u2130
  2653  0022F2                     u2131:
  2654  0022F2  EF5F  F011         	goto	l2372
  2655  0022F6                     u2130:
  2656  0022F6                     
  2657                           ; BSR set to: 0
  2658  0022F6  0E00               	movlw	0
  2659  0022F8  6F9F               	movwf	___fldiv@aexp& (0+255),b
  2660  0022FA                     
  2661                           ; BSR set to: 0
  2662  0022FA  AF9D               	btfss	(___fldiv@grs+3)& (0+255),7,b
  2663  0022FC  EF82  F011         	goto	u2141
  2664  002300  EF84  F011         	goto	u2140
  2665  002304                     u2141:
  2666  002304  EFA8  F011         	goto	l831
  2667  002308                     u2140:
  2668  002308                     
  2669                           ; BSR set to: 0
  2670  002308  0EFF               	movlw	255
  2671  00230A  159A               	andwf	___fldiv@grs& (0+255),w,b
  2672  00230C  6F8F               	movwf	??___fldiv& (0+255),b
  2673  00230E  0EFF               	movlw	255
  2674  002310  159B               	andwf	(___fldiv@grs+1)& (0+255),w,b
  2675  002312  6F90               	movwf	(??___fldiv+1)& (0+255),b
  2676  002314  0EFF               	movlw	255
  2677  002316  159C               	andwf	(___fldiv@grs+2)& (0+255),w,b
  2678  002318  6F91               	movwf	(??___fldiv+2)& (0+255),b
  2679  00231A  0E7F               	movlw	127
  2680  00231C  159D               	andwf	(___fldiv@grs+3)& (0+255),w,b
  2681  00231E  6F92               	movwf	(??___fldiv+3)& (0+255),b
  2682  002320  518F               	movf	??___fldiv& (0+255),w,b
  2683  002322  1190               	iorwf	(??___fldiv+1)& (0+255),w,b
  2684  002324  1191               	iorwf	(??___fldiv+2)& (0+255),w,b
  2685  002326  1192               	iorwf	(??___fldiv+3)& (0+255),w,b
  2686  002328  B4D8               	btfsc	status,2,c
  2687  00232A  EF99  F011         	goto	u2151
  2688  00232E  EF9B  F011         	goto	u2150
  2689  002332                     u2151:
  2690  002332  EF9F  F011         	goto	l832
  2691  002336                     u2150:
  2692  002336                     l2386:
  2693                           
  2694                           ; BSR set to: 0
  2695  002336  0E01               	movlw	1
  2696  002338  6F9F               	movwf	___fldiv@aexp& (0+255),b
  2697  00233A  EFA8  F011         	goto	l831
  2698  00233E                     l832:
  2699                           
  2700                           ; BSR set to: 0
  2701  00233E  A187               	btfss	___fldiv@b& (0+255),0,b
  2702  002340  EFA4  F011         	goto	u2161
  2703  002344  EFA6  F011         	goto	u2160
  2704  002348                     u2161:
  2705  002348  EFA8  F011         	goto	l831
  2706  00234C                     u2160:
  2707  00234C  EF9B  F011         	goto	l2386
  2708  002350                     l831:
  2709                           
  2710                           ; BSR set to: 0
  2711  002350  519F               	movf	___fldiv@aexp& (0+255),w,b
  2712  002352  B4D8               	btfsc	status,2,c
  2713  002354  EFAE  F011         	goto	u2171
  2714  002358  EFB0  F011         	goto	u2170
  2715  00235C                     u2171:
  2716  00235C  EFD4  F011         	goto	l2398
  2717  002360                     u2170:
  2718  002360                     
  2719                           ; BSR set to: 0
  2720  002360  0E01               	movlw	1
  2721  002362  2787               	addwf	___fldiv@b& (0+255),f,b
  2722  002364  0E00               	movlw	0
  2723  002366  2388               	addwfc	(___fldiv@b+1)& (0+255),f,b
  2724  002368  2389               	addwfc	(___fldiv@b+2)& (0+255),f,b
  2725  00236A  238A               	addwfc	(___fldiv@b+3)& (0+255),f,b
  2726  00236C                     
  2727                           ; BSR set to: 0
  2728  00236C  A18A               	btfss	(___fldiv@b+3)& (0+255),0,b
  2729  00236E  EFBB  F011         	goto	u2181
  2730  002372  EFBD  F011         	goto	u2180
  2731  002376                     u2181:
  2732  002376  EFD4  F011         	goto	l2398
  2733  00237A                     u2180:
  2734  00237A                     
  2735                           ; BSR set to: 0
  2736  00237A  C087  F08F         	movff	___fldiv@b,??___fldiv
  2737  00237E  C088  F090         	movff	___fldiv@b+1,??___fldiv+1
  2738  002382  C089  F091         	movff	___fldiv@b+2,??___fldiv+2
  2739  002386  C08A  F092         	movff	___fldiv@b+3,??___fldiv+3
  2740  00238A  3592               	rlcf	(??___fldiv+3)& (0+255),w,b
  2741  00238C  3392               	rrcf	(??___fldiv+3)& (0+255),f,b
  2742  00238E  3391               	rrcf	(??___fldiv+2)& (0+255),f,b
  2743  002390  3390               	rrcf	(??___fldiv+1)& (0+255),f,b
  2744  002392  338F               	rrcf	??___fldiv& (0+255),f,b
  2745  002394  C08F  F087         	movff	??___fldiv,___fldiv@b
  2746  002398  C090  F088         	movff	??___fldiv+1,___fldiv@b+1
  2747  00239C  C091  F089         	movff	??___fldiv+2,___fldiv@b+2
  2748  0023A0  C092  F08A         	movff	??___fldiv+3,___fldiv@b+3
  2749  0023A4                     
  2750                           ; BSR set to: 0
  2751  0023A4  4B98               	infsnz	___fldiv@new_exp& (0+255),f,b
  2752  0023A6  2B99               	incf	(___fldiv@new_exp+1)& (0+255),f,b
  2753  0023A8                     l2398:
  2754                           
  2755                           ; BSR set to: 0
  2756  0023A8  BF99               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  2757  0023AA  EFDF  F011         	goto	u2191
  2758  0023AE  5199               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  2759  0023B0  E108               	bnz	u2190
  2760  0023B2  2998               	incf	___fldiv@new_exp& (0+255),w,b
  2761  0023B4  A0D8               	btfss	status,0,c
  2762  0023B6  EFDF  F011         	goto	u2191
  2763  0023BA  EFE1  F011         	goto	u2190
  2764  0023BE                     u2191:
  2765  0023BE  EFEC  F011         	goto	l2402
  2766  0023C2                     u2190:
  2767  0023C2                     
  2768                           ; BSR set to: 0
  2769  0023C2  0E00               	movlw	0
  2770  0023C4  6F99               	movwf	(___fldiv@new_exp+1)& (0+255),b
  2771  0023C6  6998               	setf	___fldiv@new_exp& (0+255),b
  2772  0023C8  0E00               	movlw	0
  2773  0023CA  6F87               	movwf	___fldiv@b& (0+255),b
  2774  0023CC  0E00               	movlw	0
  2775  0023CE  6F88               	movwf	(___fldiv@b+1)& (0+255),b
  2776  0023D0  0E00               	movlw	0
  2777  0023D2  6F89               	movwf	(___fldiv@b+2)& (0+255),b
  2778  0023D4  0E00               	movlw	0
  2779  0023D6  6F8A               	movwf	(___fldiv@b+3)& (0+255),b
  2780  0023D8                     l2402:
  2781                           
  2782                           ; BSR set to: 0
  2783  0023D8  BF99               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  2784  0023DA  EFF9  F011         	goto	u2200
  2785  0023DE  5199               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  2786  0023E0  E106               	bnz	u2201
  2787  0023E2  0598               	decf	___fldiv@new_exp& (0+255),w,b
  2788  0023E4  B0D8               	btfsc	status,0,c
  2789  0023E6  EFF7  F011         	goto	u2201
  2790  0023EA  EFF9  F011         	goto	u2200
  2791  0023EE                     u2201:
  2792  0023EE  EF07  F012         	goto	l2406
  2793  0023F2                     u2200:
  2794  0023F2                     
  2795                           ; BSR set to: 0
  2796  0023F2  0E00               	movlw	0
  2797  0023F4  6F99               	movwf	(___fldiv@new_exp+1)& (0+255),b
  2798  0023F6  0E00               	movlw	0
  2799  0023F8  6F98               	movwf	___fldiv@new_exp& (0+255),b
  2800  0023FA  0E00               	movlw	0
  2801  0023FC  6F87               	movwf	___fldiv@b& (0+255),b
  2802  0023FE  0E00               	movlw	0
  2803  002400  6F88               	movwf	(___fldiv@b+1)& (0+255),b
  2804  002402  0E00               	movlw	0
  2805  002404  6F89               	movwf	(___fldiv@b+2)& (0+255),b
  2806  002406  0E00               	movlw	0
  2807  002408  6F8A               	movwf	(___fldiv@b+3)& (0+255),b
  2808  00240A  0E00               	movlw	0
  2809  00240C  6F97               	movwf	___fldiv@sign& (0+255),b
  2810  00240E                     l2406:
  2811                           
  2812                           ; BSR set to: 0
  2813  00240E  C098  F09E         	movff	___fldiv@new_exp,___fldiv@bexp
  2814  002412                     
  2815                           ; BSR set to: 0
  2816  002412  A19E               	btfss	___fldiv@bexp& (0+255),0,b
  2817  002414  EF0E  F012         	goto	u2211
  2818  002418  EF10  F012         	goto	u2210
  2819  00241C                     u2211:
  2820  00241C  EF13  F012         	goto	l2412
  2821  002420                     u2210:
  2822  002420                     
  2823                           ; BSR set to: 0
  2824  002420  8F89               	bsf	(___fldiv@b+2)& (0+255),7,b
  2825  002422  EF14  F012         	goto	l2414
  2826  002426                     l2412:
  2827                           
  2828                           ; BSR set to: 0
  2829  002426  9F89               	bcf	(___fldiv@b+2)& (0+255),7,b
  2830  002428                     l2414:
  2831                           
  2832                           ; BSR set to: 0
  2833  002428  90D8               	bcf	status,0,c
  2834  00242A  319E               	rrcf	___fldiv@bexp& (0+255),w,b
  2835  00242C  6F8A               	movwf	(___fldiv@b+3)& (0+255),b
  2836  00242E  EFCA  F010         	goto	l2328
  2837  002432                     l818:
  2838                           
  2839                           ; BSR set to: 0
  2840  002432  0012               	return		;funcret
  2841  002434                     __end_of___fldiv:
  2842                           	callstack 0
  2843                           
  2844 ;; *************** function ___fladd *****************
  2845 ;; Defined at:
  2846 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  2847 ;; Parameters:    Size  Location     Type
  2848 ;;  b               4   64[BANK0 ] unsigned char 
  2849 ;;  a               4   68[BANK0 ] unsigned char 
  2850 ;; Auto vars:     Size  Location     Type
  2851 ;;  grs             1   79[BANK0 ] unsigned char 
  2852 ;;  bexp            1   78[BANK0 ] unsigned char 
  2853 ;;  aexp            1   77[BANK0 ] unsigned char 
  2854 ;;  signs           1   76[BANK0 ] unsigned char 
  2855 ;; Return value:  Size  Location     Type
  2856 ;;                  4   64[BANK0 ] unsigned char 
  2857 ;; Registers used:
  2858 ;;		wreg, status,2, status,0
  2859 ;; Tracked objects:
  2860 ;;		On entry : 0/0
  2861 ;;		On exit  : 0/0
  2862 ;;		Unchanged: 0/0
  2863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2864 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2865 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2866 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2867 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2868 ;;Total ram usage:       16 bytes
  2869 ;; Hardware stack levels used: 1
  2870 ;; Hardware stack levels required when called: 4
  2871 ;; This function calls:
  2872 ;;		Nothing
  2873 ;; This function is called by:
  2874 ;;		_UART_Init
  2875 ;; This function uses a non-reentrant model
  2876 ;;
  2877                           
  2878                           	psect	text7
  2879  0017AA                     __ptext7:
  2880                           	callstack 0
  2881  0017AA                     ___fladd:
  2882                           	callstack 24
  2883  0017AA  0100               	movlb	0	; () banked
  2884  0017AC  51A3               	movf	(___fladd@b+3)& (0+255),w,b
  2885  0017AE  0B80               	andlw	128
  2886  0017B0  6FAC               	movwf	___fladd@signs& (0+255),b
  2887  0017B2  51A3               	movf	(___fladd@b+3)& (0+255),w,b
  2888  0017B4  25A3               	addwf	(___fladd@b+3)& (0+255),w,b
  2889  0017B6  6FAE               	movwf	___fladd@bexp& (0+255),b
  2890  0017B8                     
  2891                           ; BSR set to: 0
  2892  0017B8  AFA2               	btfss	(___fladd@b+2)& (0+255),7,b
  2893  0017BA  EFE1  F00B         	goto	u1601
  2894  0017BE  EFE3  F00B         	goto	u1600
  2895  0017C2                     u1601:
  2896  0017C2  EFE4  F00B         	goto	l2088
  2897  0017C6                     u1600:
  2898  0017C6                     
  2899                           ; BSR set to: 0
  2900  0017C6  81AE               	bsf	___fladd@bexp& (0+255),0,b
  2901  0017C8                     l2088:
  2902                           
  2903                           ; BSR set to: 0
  2904  0017C8  51AE               	movf	___fladd@bexp& (0+255),w,b
  2905  0017CA  B4D8               	btfsc	status,2,c
  2906  0017CC  EFEA  F00B         	goto	u1611
  2907  0017D0  EFEC  F00B         	goto	u1610
  2908  0017D4                     u1611:
  2909  0017D4  EF01  F00C         	goto	l2098
  2910  0017D8                     u1610:
  2911  0017D8                     
  2912                           ; BSR set to: 0
  2913  0017D8  29AE               	incf	___fladd@bexp& (0+255),w,b
  2914  0017DA  A4D8               	btfss	status,2,c
  2915  0017DC  EFF2  F00B         	goto	u1621
  2916  0017E0  EFF4  F00B         	goto	u1620
  2917  0017E4                     u1621:
  2918  0017E4  EFFC  F00B         	goto	l2094
  2919  0017E8                     u1620:
  2920  0017E8                     
  2921                           ; BSR set to: 0
  2922  0017E8  0E00               	movlw	0
  2923  0017EA  6FA0               	movwf	___fladd@b& (0+255),b
  2924  0017EC  0E00               	movlw	0
  2925  0017EE  6FA1               	movwf	(___fladd@b+1)& (0+255),b
  2926  0017F0  0E00               	movlw	0
  2927  0017F2  6FA2               	movwf	(___fladd@b+2)& (0+255),b
  2928  0017F4  0E00               	movlw	0
  2929  0017F6  6FA3               	movwf	(___fladd@b+3)& (0+255),b
  2930  0017F8                     l2094:
  2931                           
  2932                           ; BSR set to: 0
  2933  0017F8  8FA2               	bsf	(___fladd@b+2)& (0+255),7,b
  2934  0017FA                     
  2935                           ; BSR set to: 0
  2936  0017FA  0E00               	movlw	0
  2937  0017FC  6FA3               	movwf	(___fladd@b+3)& (0+255),b
  2938  0017FE  EF09  F00C         	goto	l2100
  2939  001802                     l2098:
  2940                           
  2941                           ; BSR set to: 0
  2942  001802  0E00               	movlw	0
  2943  001804  6FA0               	movwf	___fladd@b& (0+255),b
  2944  001806  0E00               	movlw	0
  2945  001808  6FA1               	movwf	(___fladd@b+1)& (0+255),b
  2946  00180A  0E00               	movlw	0
  2947  00180C  6FA2               	movwf	(___fladd@b+2)& (0+255),b
  2948  00180E  0E00               	movlw	0
  2949  001810  6FA3               	movwf	(___fladd@b+3)& (0+255),b
  2950  001812                     l2100:
  2951                           
  2952                           ; BSR set to: 0
  2953  001812  51A7               	movf	(___fladd@a+3)& (0+255),w,b
  2954  001814  0B80               	andlw	128
  2955  001816  6FAD               	movwf	___fladd@aexp& (0+255),b
  2956  001818                     
  2957                           ; BSR set to: 0
  2958  001818  51AC               	movf	___fladd@signs& (0+255),w,b
  2959  00181A  19AD               	xorwf	___fladd@aexp& (0+255),w,b
  2960  00181C  B4D8               	btfsc	status,2,c
  2961  00181E  EF13  F00C         	goto	u1631
  2962  001822  EF15  F00C         	goto	u1630
  2963  001826                     u1631:
  2964  001826  EF16  F00C         	goto	l2106
  2965  00182A                     u1630:
  2966  00182A                     
  2967                           ; BSR set to: 0
  2968  00182A  8DAC               	bsf	___fladd@signs& (0+255),6,b
  2969  00182C                     l2106:
  2970                           
  2971                           ; BSR set to: 0
  2972  00182C  51A7               	movf	(___fladd@a+3)& (0+255),w,b
  2973  00182E  25A7               	addwf	(___fladd@a+3)& (0+255),w,b
  2974  001830  6FAD               	movwf	___fladd@aexp& (0+255),b
  2975  001832                     
  2976                           ; BSR set to: 0
  2977  001832  AFA6               	btfss	(___fladd@a+2)& (0+255),7,b
  2978  001834  EF1E  F00C         	goto	u1641
  2979  001838  EF20  F00C         	goto	u1640
  2980  00183C                     u1641:
  2981  00183C  EF21  F00C         	goto	l2112
  2982  001840                     u1640:
  2983  001840                     
  2984                           ; BSR set to: 0
  2985  001840  81AD               	bsf	___fladd@aexp& (0+255),0,b
  2986  001842                     l2112:
  2987                           
  2988                           ; BSR set to: 0
  2989  001842  51AD               	movf	___fladd@aexp& (0+255),w,b
  2990  001844  B4D8               	btfsc	status,2,c
  2991  001846  EF27  F00C         	goto	u1651
  2992  00184A  EF29  F00C         	goto	u1650
  2993  00184E                     u1651:
  2994  00184E  EF3E  F00C         	goto	l2122
  2995  001852                     u1650:
  2996  001852                     
  2997                           ; BSR set to: 0
  2998  001852  29AD               	incf	___fladd@aexp& (0+255),w,b
  2999  001854  A4D8               	btfss	status,2,c
  3000  001856  EF2F  F00C         	goto	u1661
  3001  00185A  EF31  F00C         	goto	u1660
  3002  00185E                     u1661:
  3003  00185E  EF39  F00C         	goto	l2118
  3004  001862                     u1660:
  3005  001862                     
  3006                           ; BSR set to: 0
  3007  001862  0E00               	movlw	0
  3008  001864  6FA4               	movwf	___fladd@a& (0+255),b
  3009  001866  0E00               	movlw	0
  3010  001868  6FA5               	movwf	(___fladd@a+1)& (0+255),b
  3011  00186A  0E00               	movlw	0
  3012  00186C  6FA6               	movwf	(___fladd@a+2)& (0+255),b
  3013  00186E  0E00               	movlw	0
  3014  001870  6FA7               	movwf	(___fladd@a+3)& (0+255),b
  3015  001872                     l2118:
  3016                           
  3017                           ; BSR set to: 0
  3018  001872  8FA6               	bsf	(___fladd@a+2)& (0+255),7,b
  3019  001874                     
  3020                           ; BSR set to: 0
  3021  001874  0E00               	movlw	0
  3022  001876  6FA7               	movwf	(___fladd@a+3)& (0+255),b
  3023  001878  EF46  F00C         	goto	l2124
  3024  00187C                     l2122:
  3025                           
  3026                           ; BSR set to: 0
  3027  00187C  0E00               	movlw	0
  3028  00187E  6FA4               	movwf	___fladd@a& (0+255),b
  3029  001880  0E00               	movlw	0
  3030  001882  6FA5               	movwf	(___fladd@a+1)& (0+255),b
  3031  001884  0E00               	movlw	0
  3032  001886  6FA6               	movwf	(___fladd@a+2)& (0+255),b
  3033  001888  0E00               	movlw	0
  3034  00188A  6FA7               	movwf	(___fladd@a+3)& (0+255),b
  3035  00188C                     l2124:
  3036                           
  3037                           ; BSR set to: 0
  3038  00188C  51AE               	movf	___fladd@bexp& (0+255),w,b
  3039  00188E  5DAD               	subwf	___fladd@aexp& (0+255),w,b
  3040  001890  B0D8               	btfsc	status,0,c
  3041  001892  EF4D  F00C         	goto	u1671
  3042  001896  EF4F  F00C         	goto	u1670
  3043  00189A                     u1671:
  3044  00189A  EF76  F00C         	goto	l2160
  3045  00189E                     u1670:
  3046  00189E                     
  3047                           ; BSR set to: 0
  3048  00189E  ADAC               	btfss	___fladd@signs& (0+255),6,b
  3049  0018A0  EF54  F00C         	goto	u1681
  3050  0018A4  EF56  F00C         	goto	u1680
  3051  0018A8                     u1681:
  3052  0018A8  EF58  F00C         	goto	l2130
  3053  0018AC                     u1680:
  3054  0018AC                     
  3055                           ; BSR set to: 0
  3056  0018AC  0E80               	movlw	128
  3057  0018AE  1BAC               	xorwf	___fladd@signs& (0+255),f,b
  3058  0018B0                     l2130:
  3059                           
  3060                           ; BSR set to: 0
  3061  0018B0  C0AE  F0AF         	movff	___fladd@bexp,___fladd@grs
  3062  0018B4                     
  3063                           ; BSR set to: 0
  3064  0018B4  C0AD  F0AE         	movff	___fladd@aexp,___fladd@bexp
  3065  0018B8                     
  3066                           ; BSR set to: 0
  3067  0018B8  C0AF  F0AD         	movff	___fladd@grs,___fladd@aexp
  3068  0018BC                     
  3069                           ; BSR set to: 0
  3070  0018BC  C0A0  F0AF         	movff	___fladd@b,___fladd@grs
  3071  0018C0                     
  3072                           ; BSR set to: 0
  3073  0018C0  C0A4  F0A0         	movff	___fladd@a,___fladd@b
  3074  0018C4                     
  3075                           ; BSR set to: 0
  3076  0018C4  C0AF  F0A4         	movff	___fladd@grs,___fladd@a
  3077  0018C8                     
  3078                           ; BSR set to: 0
  3079  0018C8  C0A1  F0AF         	movff	___fladd@b+1,___fladd@grs
  3080  0018CC                     
  3081                           ; BSR set to: 0
  3082  0018CC  C0A5  F0A1         	movff	___fladd@a+1,___fladd@b+1
  3083  0018D0                     
  3084                           ; BSR set to: 0
  3085  0018D0  C0AF  F0A5         	movff	___fladd@grs,___fladd@a+1
  3086  0018D4                     
  3087                           ; BSR set to: 0
  3088  0018D4  C0A2  F0AF         	movff	___fladd@b+2,___fladd@grs
  3089  0018D8                     
  3090                           ; BSR set to: 0
  3091  0018D8  C0A6  F0A2         	movff	___fladd@a+2,___fladd@b+2
  3092  0018DC                     
  3093                           ; BSR set to: 0
  3094  0018DC  C0AF  F0A6         	movff	___fladd@grs,___fladd@a+2
  3095  0018E0                     
  3096                           ; BSR set to: 0
  3097  0018E0  C0A3  F0AF         	movff	___fladd@b+3,___fladd@grs
  3098  0018E4                     
  3099                           ; BSR set to: 0
  3100  0018E4  C0A7  F0A3         	movff	___fladd@a+3,___fladd@b+3
  3101  0018E8                     
  3102                           ; BSR set to: 0
  3103  0018E8  C0AF  F0A7         	movff	___fladd@grs,___fladd@a+3
  3104  0018EC                     l2160:
  3105                           
  3106                           ; BSR set to: 0
  3107  0018EC  0E00               	movlw	0
  3108  0018EE  6FAF               	movwf	___fladd@grs& (0+255),b
  3109  0018F0                     
  3110                           ; BSR set to: 0
  3111  0018F0  51AE               	movf	___fladd@bexp& (0+255),w,b
  3112  0018F2  C0AD  F0A8         	movff	___fladd@aexp,??___fladd
  3113  0018F6  6BA9               	clrf	(??___fladd+1)& (0+255),b
  3114  0018F8  5FA8               	subwf	??___fladd& (0+255),f,b
  3115  0018FA  0E00               	movlw	0
  3116  0018FC  5BA9               	subwfb	(??___fladd+1)& (0+255),f,b
  3117  0018FE  BFA9               	btfsc	(??___fladd+1)& (0+255),7,b
  3118  001900  EF8B  F00C         	goto	u1691
  3119  001904  51A9               	movf	(??___fladd+1)& (0+255),w,b
  3120  001906  E109               	bnz	u1690
  3121  001908  0E1A               	movlw	26
  3122  00190A  5DA8               	subwf	??___fladd& (0+255),w,b
  3123  00190C  A0D8               	btfss	status,0,c
  3124  00190E  EF8B  F00C         	goto	u1691
  3125  001912  EF8D  F00C         	goto	u1690
  3126  001916                     u1691:
  3127  001916  EFC4  F00C         	goto	l765
  3128  00191A                     u1690:
  3129  00191A                     
  3130                           ; BSR set to: 0
  3131  00191A  51A0               	movf	___fladd@b& (0+255),w,b
  3132  00191C  11A1               	iorwf	(___fladd@b+1)& (0+255),w,b
  3133  00191E  11A2               	iorwf	(___fladd@b+2)& (0+255),w,b
  3134  001920  11A3               	iorwf	(___fladd@b+3)& (0+255),w,b
  3135  001922  A4D8               	btfss	status,2,c
  3136  001924  EF96  F00C         	goto	u1701
  3137  001928  EF99  F00C         	goto	u1700
  3138  00192C                     u1701:
  3139  00192C  0E01               	movlw	1
  3140  00192E  EF9A  F00C         	goto	u1710
  3141  001932                     u1700:
  3142  001932  0E00               	movlw	0
  3143  001934                     u1710:
  3144  001934  6FAF               	movwf	___fladd@grs& (0+255),b
  3145  001936                     
  3146                           ; BSR set to: 0
  3147  001936  0E00               	movlw	0
  3148  001938  6FA0               	movwf	___fladd@b& (0+255),b
  3149  00193A  0E00               	movlw	0
  3150  00193C  6FA1               	movwf	(___fladd@b+1)& (0+255),b
  3151  00193E  0E00               	movlw	0
  3152  001940  6FA2               	movwf	(___fladd@b+2)& (0+255),b
  3153  001942  0E00               	movlw	0
  3154  001944  6FA3               	movwf	(___fladd@b+3)& (0+255),b
  3155  001946                     
  3156                           ; BSR set to: 0
  3157  001946  C0AD  F0AE         	movff	___fladd@aexp,___fladd@bexp
  3158  00194A  EFCD  F00C         	goto	l764
  3159  00194E                     l766:
  3160                           
  3161                           ; BSR set to: 0
  3162  00194E  A1AF               	btfss	___fladd@grs& (0+255),0,b
  3163  001950  EFAC  F00C         	goto	u1721
  3164  001954  EFAE  F00C         	goto	u1720
  3165  001958                     u1721:
  3166  001958  EFB4  F00C         	goto	l2172
  3167  00195C                     u1720:
  3168  00195C                     
  3169                           ; BSR set to: 0
  3170  00195C  90D8               	bcf	status,0,c
  3171  00195E  31AF               	rrcf	___fladd@grs& (0+255),w,b
  3172  001960  0901               	iorlw	1
  3173  001962  6FAF               	movwf	___fladd@grs& (0+255),b
  3174  001964  EFB6  F00C         	goto	l2174
  3175  001968                     l2172:
  3176                           
  3177                           ; BSR set to: 0
  3178  001968  90D8               	bcf	status,0,c
  3179  00196A  33AF               	rrcf	___fladd@grs& (0+255),f,b
  3180  00196C                     l2174:
  3181                           
  3182                           ; BSR set to: 0
  3183  00196C  A1A0               	btfss	___fladd@b& (0+255),0,b
  3184  00196E  EFBB  F00C         	goto	u1731
  3185  001972  EFBD  F00C         	goto	u1730
  3186  001976                     u1731:
  3187  001976  EFBE  F00C         	goto	l2178
  3188  00197A                     u1730:
  3189  00197A                     
  3190                           ; BSR set to: 0
  3191  00197A  8FAF               	bsf	___fladd@grs& (0+255),7,b
  3192  00197C                     l2178:
  3193                           
  3194                           ; BSR set to: 0
  3195  00197C  35A3               	rlcf	(___fladd@b+3)& (0+255),w,b
  3196  00197E  33A3               	rrcf	(___fladd@b+3)& (0+255),f,b
  3197  001980  33A2               	rrcf	(___fladd@b+2)& (0+255),f,b
  3198  001982  33A1               	rrcf	(___fladd@b+1)& (0+255),f,b
  3199  001984  33A0               	rrcf	___fladd@b& (0+255),f,b
  3200  001986                     
  3201                           ; BSR set to: 0
  3202  001986  2BAE               	incf	___fladd@bexp& (0+255),f,b
  3203  001988                     l765:
  3204                           
  3205                           ; BSR set to: 0
  3206  001988  51AD               	movf	___fladd@aexp& (0+255),w,b
  3207  00198A  5DAE               	subwf	___fladd@bexp& (0+255),w,b
  3208  00198C  A0D8               	btfss	status,0,c
  3209  00198E  EFCB  F00C         	goto	u1741
  3210  001992  EFCD  F00C         	goto	u1740
  3211  001996                     u1741:
  3212  001996  EFA7  F00C         	goto	l766
  3213  00199A                     u1740:
  3214  00199A                     l764:
  3215                           
  3216                           ; BSR set to: 0
  3217  00199A  BDAC               	btfsc	___fladd@signs& (0+255),6,b
  3218  00199C  EFD2  F00C         	goto	u1751
  3219  0019A0  EFD4  F00C         	goto	u1750
  3220  0019A4                     u1751:
  3221  0019A4  EF14  F00D         	goto	l2206
  3222  0019A8                     u1750:
  3223  0019A8                     
  3224                           ; BSR set to: 0
  3225  0019A8  51AE               	movf	___fladd@bexp& (0+255),w,b
  3226  0019AA  A4D8               	btfss	status,2,c
  3227  0019AC  EFDA  F00C         	goto	u1761
  3228  0019B0  EFDC  F00C         	goto	u1760
  3229  0019B4                     u1761:
  3230  0019B4  EFE6  F00C         	goto	l2188
  3231  0019B8                     u1760:
  3232  0019B8                     
  3233                           ; BSR set to: 0
  3234  0019B8  0E00               	movlw	0
  3235  0019BA  6FA0               	movwf	?___fladd& (0+255),b
  3236  0019BC  0E00               	movlw	0
  3237  0019BE  6FA1               	movwf	(?___fladd+1)& (0+255),b
  3238  0019C0  0E00               	movlw	0
  3239  0019C2  6FA2               	movwf	(?___fladd+2)& (0+255),b
  3240  0019C4  0E00               	movlw	0
  3241  0019C6  6FA3               	movwf	(?___fladd+3)& (0+255),b
  3242  0019C8  EF35  F00E         	goto	l773
  3243  0019CC                     l2188:
  3244                           
  3245                           ; BSR set to: 0
  3246  0019CC  51A4               	movf	___fladd@a& (0+255),w,b
  3247  0019CE  27A0               	addwf	___fladd@b& (0+255),f,b
  3248  0019D0  51A5               	movf	(___fladd@a+1)& (0+255),w,b
  3249  0019D2  23A1               	addwfc	(___fladd@b+1)& (0+255),f,b
  3250  0019D4  51A6               	movf	(___fladd@a+2)& (0+255),w,b
  3251  0019D6  23A2               	addwfc	(___fladd@b+2)& (0+255),f,b
  3252  0019D8  51A7               	movf	(___fladd@a+3)& (0+255),w,b
  3253  0019DA  23A3               	addwfc	(___fladd@b+3)& (0+255),f,b
  3254  0019DC                     
  3255                           ; BSR set to: 0
  3256  0019DC  A1A3               	btfss	(___fladd@b+3)& (0+255),0,b
  3257  0019DE  EFF3  F00C         	goto	u1771
  3258  0019E2  EFF5  F00C         	goto	u1770
  3259  0019E6                     u1771:
  3260  0019E6  EFA1  F00D         	goto	l2242
  3261  0019EA                     u1770:
  3262  0019EA                     
  3263                           ; BSR set to: 0
  3264  0019EA  A1AF               	btfss	___fladd@grs& (0+255),0,b
  3265  0019EC  EFFA  F00C         	goto	u1781
  3266  0019F0  EFFC  F00C         	goto	u1780
  3267  0019F4                     u1781:
  3268  0019F4  EF02  F00D         	goto	l2196
  3269  0019F8                     u1780:
  3270  0019F8                     
  3271                           ; BSR set to: 0
  3272  0019F8  90D8               	bcf	status,0,c
  3273  0019FA  31AF               	rrcf	___fladd@grs& (0+255),w,b
  3274  0019FC  0901               	iorlw	1
  3275  0019FE  6FAF               	movwf	___fladd@grs& (0+255),b
  3276  001A00  EF04  F00D         	goto	l2198
  3277  001A04                     l2196:
  3278                           
  3279                           ; BSR set to: 0
  3280  001A04  90D8               	bcf	status,0,c
  3281  001A06  33AF               	rrcf	___fladd@grs& (0+255),f,b
  3282  001A08                     l2198:
  3283                           
  3284                           ; BSR set to: 0
  3285  001A08  A1A0               	btfss	___fladd@b& (0+255),0,b
  3286  001A0A  EF09  F00D         	goto	u1791
  3287  001A0E  EF0B  F00D         	goto	u1790
  3288  001A12                     u1791:
  3289  001A12  EF0C  F00D         	goto	l2202
  3290  001A16                     u1790:
  3291  001A16                     
  3292                           ; BSR set to: 0
  3293  001A16  8FAF               	bsf	___fladd@grs& (0+255),7,b
  3294  001A18                     l2202:
  3295                           
  3296                           ; BSR set to: 0
  3297  001A18  35A3               	rlcf	(___fladd@b+3)& (0+255),w,b
  3298  001A1A  33A3               	rrcf	(___fladd@b+3)& (0+255),f,b
  3299  001A1C  33A2               	rrcf	(___fladd@b+2)& (0+255),f,b
  3300  001A1E  33A1               	rrcf	(___fladd@b+1)& (0+255),f,b
  3301  001A20  33A0               	rrcf	___fladd@b& (0+255),f,b
  3302  001A22                     
  3303                           ; BSR set to: 0
  3304  001A22  2BAE               	incf	___fladd@bexp& (0+255),f,b
  3305  001A24  EFA1  F00D         	goto	l2242
  3306  001A28                     l2206:
  3307                           
  3308                           ; BSR set to: 0
  3309  001A28  51A4               	movf	___fladd@a& (0+255),w,b
  3310  001A2A  5DA0               	subwf	___fladd@b& (0+255),w,b
  3311  001A2C  51A5               	movf	(___fladd@a+1)& (0+255),w,b
  3312  001A2E  59A1               	subwfb	(___fladd@b+1)& (0+255),w,b
  3313  001A30  51A6               	movf	(___fladd@a+2)& (0+255),w,b
  3314  001A32  59A2               	subwfb	(___fladd@b+2)& (0+255),w,b
  3315  001A34  51A3               	movf	(___fladd@b+3)& (0+255),w,b
  3316  001A36  0A80               	xorlw	128
  3317  001A38  6FA8               	movwf	??___fladd& (0+255),b
  3318  001A3A  51A7               	movf	(___fladd@a+3)& (0+255),w,b
  3319  001A3C  0A80               	xorlw	128
  3320  001A3E  59A8               	subwfb	??___fladd& (0+255),w,b
  3321  001A40  B0D8               	btfsc	status,0,c
  3322  001A42  EF25  F00D         	goto	u1801
  3323  001A46  EF27  F00D         	goto	u1800
  3324  001A4A                     u1801:
  3325  001A4A  EF52  F00D         	goto	l2216
  3326  001A4E                     u1800:
  3327  001A4E                     
  3328                           ; BSR set to: 0
  3329  001A4E  51A0               	movf	___fladd@b& (0+255),w,b
  3330  001A50  5DA4               	subwf	___fladd@a& (0+255),w,b
  3331  001A52  6FA8               	movwf	??___fladd& (0+255),b
  3332  001A54  51A1               	movf	(___fladd@b+1)& (0+255),w,b
  3333  001A56  59A5               	subwfb	(___fladd@a+1)& (0+255),w,b
  3334  001A58  6FA9               	movwf	(??___fladd+1)& (0+255),b
  3335  001A5A  51A2               	movf	(___fladd@b+2)& (0+255),w,b
  3336  001A5C  59A6               	subwfb	(___fladd@a+2)& (0+255),w,b
  3337  001A5E  6FAA               	movwf	(??___fladd+2)& (0+255),b
  3338  001A60  51A3               	movf	(___fladd@b+3)& (0+255),w,b
  3339  001A62  59A7               	subwfb	(___fladd@a+3)& (0+255),w,b
  3340  001A64  6FAB               	movwf	(??___fladd+3)& (0+255),b
  3341  001A66  0EFF               	movlw	255
  3342  001A68  25A8               	addwf	??___fladd& (0+255),w,b
  3343  001A6A  6FA0               	movwf	___fladd@b& (0+255),b
  3344  001A6C  0EFF               	movlw	255
  3345  001A6E  21A9               	addwfc	(??___fladd+1)& (0+255),w,b
  3346  001A70  6FA1               	movwf	(___fladd@b+1)& (0+255),b
  3347  001A72  0EFF               	movlw	255
  3348  001A74  21AA               	addwfc	(??___fladd+2)& (0+255),w,b
  3349  001A76  6FA2               	movwf	(___fladd@b+2)& (0+255),b
  3350  001A78  0EFF               	movlw	255
  3351  001A7A  21AB               	addwfc	(??___fladd+3)& (0+255),w,b
  3352  001A7C  6FA3               	movwf	(___fladd@b+3)& (0+255),b
  3353  001A7E  0E80               	movlw	128
  3354  001A80  1BAC               	xorwf	___fladd@signs& (0+255),f,b
  3355  001A82                     
  3356                           ; BSR set to: 0
  3357  001A82  6DAF               	negf	___fladd@grs& (0+255),b
  3358  001A84                     
  3359                           ; BSR set to: 0
  3360  001A84  51AF               	movf	___fladd@grs& (0+255),w,b
  3361  001A86  A4D8               	btfss	status,2,c
  3362  001A88  EF48  F00D         	goto	u1811
  3363  001A8C  EF4A  F00D         	goto	u1810
  3364  001A90                     u1811:
  3365  001A90  EF5A  F00D         	goto	l781
  3366  001A94                     u1810:
  3367  001A94                     
  3368                           ; BSR set to: 0
  3369  001A94  0E01               	movlw	1
  3370  001A96  27A0               	addwf	___fladd@b& (0+255),f,b
  3371  001A98  0E00               	movlw	0
  3372  001A9A  23A1               	addwfc	(___fladd@b+1)& (0+255),f,b
  3373  001A9C  23A2               	addwfc	(___fladd@b+2)& (0+255),f,b
  3374  001A9E  23A3               	addwfc	(___fladd@b+3)& (0+255),f,b
  3375  001AA0  EF5A  F00D         	goto	l781
  3376  001AA4                     l2216:
  3377                           
  3378                           ; BSR set to: 0
  3379  001AA4  51A4               	movf	___fladd@a& (0+255),w,b
  3380  001AA6  5FA0               	subwf	___fladd@b& (0+255),f,b
  3381  001AA8  51A5               	movf	(___fladd@a+1)& (0+255),w,b
  3382  001AAA  5BA1               	subwfb	(___fladd@b+1)& (0+255),f,b
  3383  001AAC  51A6               	movf	(___fladd@a+2)& (0+255),w,b
  3384  001AAE  5BA2               	subwfb	(___fladd@b+2)& (0+255),f,b
  3385  001AB0  51A7               	movf	(___fladd@a+3)& (0+255),w,b
  3386  001AB2  5BA3               	subwfb	(___fladd@b+3)& (0+255),f,b
  3387  001AB4                     l781:
  3388                           
  3389                           ; BSR set to: 0
  3390  001AB4  51A0               	movf	___fladd@b& (0+255),w,b
  3391  001AB6  11A1               	iorwf	(___fladd@b+1)& (0+255),w,b
  3392  001AB8  11A2               	iorwf	(___fladd@b+2)& (0+255),w,b
  3393  001ABA  11A3               	iorwf	(___fladd@b+3)& (0+255),w,b
  3394  001ABC  A4D8               	btfss	status,2,c
  3395  001ABE  EF63  F00D         	goto	u1821
  3396  001AC2  EF65  F00D         	goto	u1820
  3397  001AC6                     u1821:
  3398  001AC6  EF9A  F00D         	goto	l2240
  3399  001ACA                     u1820:
  3400  001ACA                     
  3401                           ; BSR set to: 0
  3402  001ACA  51AF               	movf	___fladd@grs& (0+255),w,b
  3403  001ACC  A4D8               	btfss	status,2,c
  3404  001ACE  EF6B  F00D         	goto	u1831
  3405  001AD2  EF6D  F00D         	goto	u1830
  3406  001AD6                     u1831:
  3407  001AD6  EF9A  F00D         	goto	l2240
  3408  001ADA                     u1830:
  3409  001ADA                     
  3410                           ; BSR set to: 0
  3411  001ADA  0E00               	movlw	0
  3412  001ADC  6FA0               	movwf	?___fladd& (0+255),b
  3413  001ADE  0E00               	movlw	0
  3414  001AE0  6FA1               	movwf	(?___fladd+1)& (0+255),b
  3415  001AE2  0E00               	movlw	0
  3416  001AE4  6FA2               	movwf	(?___fladd+2)& (0+255),b
  3417  001AE6  0E00               	movlw	0
  3418  001AE8  6FA3               	movwf	(?___fladd+3)& (0+255),b
  3419  001AEA  EF35  F00E         	goto	l773
  3420  001AEE                     l2224:
  3421                           
  3422                           ; BSR set to: 0
  3423  001AEE  90D8               	bcf	status,0,c
  3424  001AF0  37A0               	rlcf	___fladd@b& (0+255),f,b
  3425  001AF2  37A1               	rlcf	(___fladd@b+1)& (0+255),f,b
  3426  001AF4  37A2               	rlcf	(___fladd@b+2)& (0+255),f,b
  3427  001AF6  37A3               	rlcf	(___fladd@b+3)& (0+255),f,b
  3428  001AF8                     
  3429                           ; BSR set to: 0
  3430  001AF8  AFAF               	btfss	___fladd@grs& (0+255),7,b
  3431  001AFA  EF81  F00D         	goto	u1841
  3432  001AFE  EF83  F00D         	goto	u1840
  3433  001B02                     u1841:
  3434  001B02  EF84  F00D         	goto	l2230
  3435  001B06                     u1840:
  3436  001B06                     
  3437                           ; BSR set to: 0
  3438  001B06  81A0               	bsf	___fladd@b& (0+255),0,b
  3439  001B08                     l2230:
  3440                           
  3441                           ; BSR set to: 0
  3442  001B08  A1AF               	btfss	___fladd@grs& (0+255),0,b
  3443  001B0A  EF89  F00D         	goto	u1851
  3444  001B0E  EF8B  F00D         	goto	u1850
  3445  001B12                     u1851:
  3446  001B12  EF8F  F00D         	goto	l2234
  3447  001B16                     u1850:
  3448  001B16                     
  3449                           ; BSR set to: 0
  3450  001B16  80D8               	bsf	status,0,c
  3451  001B18  37AF               	rlcf	___fladd@grs& (0+255),f,b
  3452  001B1A  EF91  F00D         	goto	l2236
  3453  001B1E                     l2234:
  3454                           
  3455                           ; BSR set to: 0
  3456  001B1E  90D8               	bcf	status,0,c
  3457  001B20  37AF               	rlcf	___fladd@grs& (0+255),f,b
  3458  001B22                     l2236:
  3459                           
  3460                           ; BSR set to: 0
  3461  001B22  51AE               	movf	___fladd@bexp& (0+255),w,b
  3462  001B24  B4D8               	btfsc	status,2,c
  3463  001B26  EF97  F00D         	goto	u1861
  3464  001B2A  EF99  F00D         	goto	u1860
  3465  001B2E                     u1861:
  3466  001B2E  EF9A  F00D         	goto	l2240
  3467  001B32                     u1860:
  3468  001B32                     
  3469                           ; BSR set to: 0
  3470  001B32  07AE               	decf	___fladd@bexp& (0+255),f,b
  3471  001B34                     l2240:
  3472                           
  3473                           ; BSR set to: 0
  3474  001B34  AFA2               	btfss	(___fladd@b+2)& (0+255),7,b
  3475  001B36  EF9F  F00D         	goto	u1871
  3476  001B3A  EFA1  F00D         	goto	u1870
  3477  001B3E                     u1871:
  3478  001B3E  EF77  F00D         	goto	l2224
  3479  001B42                     u1870:
  3480  001B42                     l2242:
  3481                           
  3482                           ; BSR set to: 0
  3483  001B42  0E00               	movlw	0
  3484  001B44  6FAD               	movwf	___fladd@aexp& (0+255),b
  3485  001B46                     
  3486                           ; BSR set to: 0
  3487  001B46  AFAF               	btfss	___fladd@grs& (0+255),7,b
  3488  001B48  EFA8  F00D         	goto	u1881
  3489  001B4C  EFAA  F00D         	goto	u1880
  3490  001B50                     u1881:
  3491  001B50  EFC2  F00D         	goto	l790
  3492  001B54                     u1880:
  3493  001B54                     
  3494                           ; BSR set to: 0
  3495  001B54  C0AF  F0A8         	movff	___fladd@grs,??___fladd
  3496  001B58  0E7F               	movlw	127
  3497  001B5A  17A8               	andwf	??___fladd& (0+255),f,b
  3498  001B5C  B4D8               	btfsc	status,2,c
  3499  001B5E  EFB3  F00D         	goto	u1891
  3500  001B62  EFB5  F00D         	goto	u1890
  3501  001B66                     u1891:
  3502  001B66  EFB9  F00D         	goto	l791
  3503  001B6A                     u1890:
  3504  001B6A                     l2248:
  3505                           
  3506                           ; BSR set to: 0
  3507  001B6A  0E01               	movlw	1
  3508  001B6C  6FAD               	movwf	___fladd@aexp& (0+255),b
  3509  001B6E  EFC2  F00D         	goto	l790
  3510  001B72                     l791:
  3511                           
  3512                           ; BSR set to: 0
  3513  001B72  A1A0               	btfss	___fladd@b& (0+255),0,b
  3514  001B74  EFBE  F00D         	goto	u1901
  3515  001B78  EFC0  F00D         	goto	u1900
  3516  001B7C                     u1901:
  3517  001B7C  EFC2  F00D         	goto	l790
  3518  001B80                     u1900:
  3519  001B80  EFB5  F00D         	goto	l2248
  3520  001B84                     l790:
  3521                           
  3522                           ; BSR set to: 0
  3523  001B84  51AD               	movf	___fladd@aexp& (0+255),w,b
  3524  001B86  B4D8               	btfsc	status,2,c
  3525  001B88  EFC8  F00D         	goto	u1911
  3526  001B8C  EFCA  F00D         	goto	u1910
  3527  001B90                     u1911:
  3528  001B90  EFF5  F00D         	goto	l2260
  3529  001B94                     u1910:
  3530  001B94                     
  3531                           ; BSR set to: 0
  3532  001B94  0E01               	movlw	1
  3533  001B96  27A0               	addwf	___fladd@b& (0+255),f,b
  3534  001B98  0E00               	movlw	0
  3535  001B9A  23A1               	addwfc	(___fladd@b+1)& (0+255),f,b
  3536  001B9C  23A2               	addwfc	(___fladd@b+2)& (0+255),f,b
  3537  001B9E  23A3               	addwfc	(___fladd@b+3)& (0+255),f,b
  3538  001BA0                     
  3539                           ; BSR set to: 0
  3540  001BA0  A1A3               	btfss	(___fladd@b+3)& (0+255),0,b
  3541  001BA2  EFD5  F00D         	goto	u1921
  3542  001BA6  EFD7  F00D         	goto	u1920
  3543  001BAA                     u1921:
  3544  001BAA  EFF5  F00D         	goto	l2260
  3545  001BAE                     u1920:
  3546  001BAE                     
  3547                           ; BSR set to: 0
  3548  001BAE  C0A0  F0A8         	movff	___fladd@b,??___fladd
  3549  001BB2  C0A1  F0A9         	movff	___fladd@b+1,??___fladd+1
  3550  001BB6  C0A2  F0AA         	movff	___fladd@b+2,??___fladd+2
  3551  001BBA  C0A3  F0AB         	movff	___fladd@b+3,??___fladd+3
  3552  001BBE  35AB               	rlcf	(??___fladd+3)& (0+255),w,b
  3553  001BC0  33AB               	rrcf	(??___fladd+3)& (0+255),f,b
  3554  001BC2  33AA               	rrcf	(??___fladd+2)& (0+255),f,b
  3555  001BC4  33A9               	rrcf	(??___fladd+1)& (0+255),f,b
  3556  001BC6  33A8               	rrcf	??___fladd& (0+255),f,b
  3557  001BC8  C0A8  F0A0         	movff	??___fladd,___fladd@b
  3558  001BCC  C0A9  F0A1         	movff	??___fladd+1,___fladd@b+1
  3559  001BD0  C0AA  F0A2         	movff	??___fladd+2,___fladd@b+2
  3560  001BD4  C0AB  F0A3         	movff	??___fladd+3,___fladd@b+3
  3561  001BD8  29AE               	incf	___fladd@bexp& (0+255),w,b
  3562  001BDA  B4D8               	btfsc	status,2,c
  3563  001BDC  EFF2  F00D         	goto	u1931
  3564  001BE0  EFF4  F00D         	goto	u1930
  3565  001BE4                     u1931:
  3566  001BE4  EFF5  F00D         	goto	l2260
  3567  001BE8                     u1930:
  3568  001BE8                     
  3569                           ; BSR set to: 0
  3570  001BE8  2BAE               	incf	___fladd@bexp& (0+255),f,b
  3571  001BEA                     l2260:
  3572                           
  3573                           ; BSR set to: 0
  3574  001BEA  29AE               	incf	___fladd@bexp& (0+255),w,b
  3575  001BEC  B4D8               	btfsc	status,2,c
  3576  001BEE  EFFB  F00D         	goto	u1941
  3577  001BF2  EFFD  F00D         	goto	u1940
  3578  001BF6                     u1941:
  3579  001BF6  EF05  F00E         	goto	l2264
  3580  001BFA                     u1940:
  3581  001BFA                     
  3582                           ; BSR set to: 0
  3583  001BFA  51AE               	movf	___fladd@bexp& (0+255),w,b
  3584  001BFC  A4D8               	btfss	status,2,c
  3585  001BFE  EF03  F00E         	goto	u1951
  3586  001C02  EF05  F00E         	goto	u1950
  3587  001C06                     u1951:
  3588  001C06  EF17  F00E         	goto	l2268
  3589  001C0A                     u1950:
  3590  001C0A                     l2264:
  3591                           
  3592                           ; BSR set to: 0
  3593  001C0A  0E00               	movlw	0
  3594  001C0C  6FA0               	movwf	___fladd@b& (0+255),b
  3595  001C0E  0E00               	movlw	0
  3596  001C10  6FA1               	movwf	(___fladd@b+1)& (0+255),b
  3597  001C12  0E00               	movlw	0
  3598  001C14  6FA2               	movwf	(___fladd@b+2)& (0+255),b
  3599  001C16  0E00               	movlw	0
  3600  001C18  6FA3               	movwf	(___fladd@b+3)& (0+255),b
  3601  001C1A  51AE               	movf	___fladd@bexp& (0+255),w,b
  3602  001C1C  A4D8               	btfss	status,2,c
  3603  001C1E  EF13  F00E         	goto	u1961
  3604  001C22  EF15  F00E         	goto	u1960
  3605  001C26                     u1961:
  3606  001C26  EF17  F00E         	goto	l2268
  3607  001C2A                     u1960:
  3608  001C2A                     
  3609                           ; BSR set to: 0
  3610  001C2A  0E00               	movlw	0
  3611  001C2C  6FAC               	movwf	___fladd@signs& (0+255),b
  3612  001C2E                     l2268:
  3613                           
  3614                           ; BSR set to: 0
  3615  001C2E  A1AE               	btfss	___fladd@bexp& (0+255),0,b
  3616  001C30  EF1C  F00E         	goto	u1971
  3617  001C34  EF1E  F00E         	goto	u1970
  3618  001C38                     u1971:
  3619  001C38  EF21  F00E         	goto	l2272
  3620  001C3C                     u1970:
  3621  001C3C                     
  3622                           ; BSR set to: 0
  3623  001C3C  8FA2               	bsf	(___fladd@b+2)& (0+255),7,b
  3624  001C3E  EF22  F00E         	goto	l2274
  3625  001C42                     l2272:
  3626                           
  3627                           ; BSR set to: 0
  3628  001C42  9FA2               	bcf	(___fladd@b+2)& (0+255),7,b
  3629  001C44                     l2274:
  3630                           
  3631                           ; BSR set to: 0
  3632  001C44  90D8               	bcf	status,0,c
  3633  001C46  31AE               	rrcf	___fladd@bexp& (0+255),w,b
  3634  001C48  6FA3               	movwf	(___fladd@b+3)& (0+255),b
  3635  001C4A                     
  3636                           ; BSR set to: 0
  3637  001C4A  AFAC               	btfss	___fladd@signs& (0+255),7,b
  3638  001C4C  EF2A  F00E         	goto	u1981
  3639  001C50  EF2C  F00E         	goto	u1980
  3640  001C54                     u1981:
  3641  001C54  EF2D  F00E         	goto	l2280
  3642  001C58                     u1980:
  3643  001C58                     
  3644                           ; BSR set to: 0
  3645  001C58  8FA3               	bsf	(___fladd@b+3)& (0+255),7,b
  3646  001C5A                     l2280:
  3647                           
  3648                           ; BSR set to: 0
  3649  001C5A  C0A0  F0A0         	movff	___fladd@b,?___fladd
  3650  001C5E  C0A1  F0A1         	movff	___fladd@b+1,?___fladd+1
  3651  001C62  C0A2  F0A2         	movff	___fladd@b+2,?___fladd+2
  3652  001C66  C0A3  F0A3         	movff	___fladd@b+3,?___fladd+3
  3653  001C6A                     l773:
  3654                           
  3655                           ; BSR set to: 0
  3656  001C6A  0012               	return		;funcret
  3657  001C6C                     __end_of___fladd:
  3658                           	callstack 0
  3659                           
  3660 ;; *************** function _VFD_Write *****************
  3661 ;; Defined at:
  3662 ;;		line 138 in file "main.c"
  3663 ;; Parameters:    Size  Location     Type
  3664 ;;  data            4   25[BANK0 ] unsigned long 
  3665 ;; Auto vars:     Size  Location     Type
  3666 ;;  temp            8   35[BANK0 ] unsigned long long 
  3667 ;;  buff            6   29[BANK0 ] unsigned char [6]
  3668 ;;  Heater_Contr    1    0        unsigned char 
  3669 ;; Return value:  Size  Location     Type
  3670 ;;                  1    wreg      void 
  3671 ;; Registers used:
  3672 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3673 ;; Tracked objects:
  3674 ;;		On entry : 0/0
  3675 ;;		On exit  : 0/0
  3676 ;;		Unchanged: 0/0
  3677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3678 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3679 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3681 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3682 ;;Total ram usage:       18 bytes
  3683 ;; Hardware stack levels used: 1
  3684 ;; Hardware stack levels required when called: 5
  3685 ;; This function calls:
  3686 ;;		_Bit_Write
  3687 ;;		_Check_Seg
  3688 ;;		_MAX6922_Write
  3689 ;;		___lldiv
  3690 ;;		___llmod
  3691 ;; This function is called by:
  3692 ;;		_main
  3693 ;; This function uses a non-reentrant model
  3694 ;;
  3695                           
  3696                           	psect	text8
  3697  000F54                     __ptext8:
  3698                           	callstack 0
  3699  000F54                     _VFD_Write:
  3700                           	callstack 25
  3701  000F54                     
  3702                           ;main.c: 138: void VFD_Write(uint32_t data);main.c: 139: {;main.c: 140:     uint8_t buff
      +                          [6];;main.c: 141:     uint64_t temp = 0;
  3703  000F54  EE20  F083         	lfsr	2,VFD_Write@temp
  3704  000F58  0E07               	movlw	7
  3705  000F5A                     u2981:
  3706  000F5A  6ADE               	clrf	postinc2,c
  3707  000F5C  06E8               	decf	wreg,f,c
  3708  000F5E  E2FD               	bc	u2981
  3709  000F60                     
  3710                           ;main.c: 144:     if (data > 999999) {
  3711  000F60  0100               	movlb	0	; () banked
  3712  000F62  517C               	movf	(VFD_Write@data+3)& (0+255),w,b
  3713  000F64  E10D               	bnz	u2990
  3714  000F66  0E40               	movlw	64
  3715  000F68  5D79               	subwf	VFD_Write@data& (0+255),w,b
  3716  000F6A  0E42               	movlw	66
  3717  000F6C  597A               	subwfb	(VFD_Write@data+1)& (0+255),w,b
  3718  000F6E  0E0F               	movlw	15
  3719  000F70  597B               	subwfb	(VFD_Write@data+2)& (0+255),w,b
  3720  000F72  A0D8               	btfss	status,0,c
  3721  000F74  EFBE  F007         	goto	u2991
  3722  000F78  EFC0  F007         	goto	u2990
  3723  000F7C                     u2991:
  3724  000F7C  EFDA  F007         	goto	l119
  3725  000F80                     u2990:
  3726  000F80                     
  3727                           ; BSR set to: 0
  3728                           ;main.c: 145:         data %= 1000000;
  3729  000F80  C079  F06D         	movff	VFD_Write@data,___llmod@dividend
  3730  000F84  C07A  F06E         	movff	VFD_Write@data+1,___llmod@dividend+1
  3731  000F88  C07B  F06F         	movff	VFD_Write@data+2,___llmod@dividend+2
  3732  000F8C  C07C  F070         	movff	VFD_Write@data+3,___llmod@dividend+3
  3733  000F90  0E40               	movlw	64
  3734  000F92  6F71               	movwf	___llmod@divisor& (0+255),b
  3735  000F94  0E42               	movlw	66
  3736  000F96  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
  3737  000F98  0E0F               	movlw	15
  3738  000F9A  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
  3739  000F9C  0E00               	movlw	0
  3740  000F9E  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
  3741  000FA0  EC4C  F018         	call	___llmod	;wreg free
  3742  000FA4  C06D  F079         	movff	?___llmod,VFD_Write@data
  3743  000FA8  C06E  F07A         	movff	?___llmod+1,VFD_Write@data+1
  3744  000FAC  C06F  F07B         	movff	?___llmod+2,VFD_Write@data+2
  3745  000FB0  C070  F07C         	movff	?___llmod+3,VFD_Write@data+3
  3746  000FB4                     l119:
  3747                           
  3748                           ;main.c: 148:     buff[0] = (data / 1) % 10;
  3749  000FB4  C079  F06D         	movff	VFD_Write@data,___llmod@dividend
  3750  000FB8  C07A  F06E         	movff	VFD_Write@data+1,___llmod@dividend+1
  3751  000FBC  C07B  F06F         	movff	VFD_Write@data+2,___llmod@dividend+2
  3752  000FC0  C07C  F070         	movff	VFD_Write@data+3,___llmod@dividend+3
  3753  000FC4  0E0A               	movlw	10
  3754  000FC6  0100               	movlb	0	; () banked
  3755  000FC8  6F71               	movwf	___llmod@divisor& (0+255),b
  3756  000FCA  0E00               	movlw	0
  3757  000FCC  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
  3758  000FCE  0E00               	movlw	0
  3759  000FD0  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
  3760  000FD2  0E00               	movlw	0
  3761  000FD4  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
  3762  000FD6  EC4C  F018         	call	___llmod	;wreg free
  3763  000FDA  0100               	movlb	0	; () banked
  3764  000FDC  516D               	movf	?___llmod& (0+255),w,b
  3765  000FDE  6F7D               	movwf	VFD_Write@buff& (0+255),b
  3766                           
  3767                           ;main.c: 149:     buff[1] = (data / 10) % 10;
  3768  000FE0  0E0A               	movlw	10
  3769  000FE2  6F64               	movwf	___lldiv@divisor& (0+255),b
  3770  000FE4  0E00               	movlw	0
  3771  000FE6  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
  3772  000FE8  0E00               	movlw	0
  3773  000FEA  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
  3774  000FEC  0E00               	movlw	0
  3775  000FEE  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
  3776  000FF0  C079  F060         	movff	VFD_Write@data,___lldiv@dividend
  3777  000FF4  C07A  F061         	movff	VFD_Write@data+1,___lldiv@dividend+1
  3778  000FF8  C07B  F062         	movff	VFD_Write@data+2,___lldiv@dividend+2
  3779  000FFC  C07C  F063         	movff	VFD_Write@data+3,___lldiv@dividend+3
  3780  001000  EC60  F017         	call	___lldiv	;wreg free
  3781  001004  C060  F06D         	movff	?___lldiv,___llmod@dividend
  3782  001008  C061  F06E         	movff	?___lldiv+1,___llmod@dividend+1
  3783  00100C  C062  F06F         	movff	?___lldiv+2,___llmod@dividend+2
  3784  001010  C063  F070         	movff	?___lldiv+3,___llmod@dividend+3
  3785  001014  0E0A               	movlw	10
  3786  001016  0100               	movlb	0	; () banked
  3787  001018  6F71               	movwf	___llmod@divisor& (0+255),b
  3788  00101A  0E00               	movlw	0
  3789  00101C  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
  3790  00101E  0E00               	movlw	0
  3791  001020  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
  3792  001022  0E00               	movlw	0
  3793  001024  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
  3794  001026  EC4C  F018         	call	___llmod	;wreg free
  3795  00102A  0100               	movlb	0	; () banked
  3796  00102C  516D               	movf	?___llmod& (0+255),w,b
  3797  00102E  6F7E               	movwf	(VFD_Write@buff+1)& (0+255),b
  3798                           
  3799                           ;main.c: 150:     buff[2] = (data / 100) % 10;
  3800  001030  0E64               	movlw	100
  3801  001032  6F64               	movwf	___lldiv@divisor& (0+255),b
  3802  001034  0E00               	movlw	0
  3803  001036  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
  3804  001038  0E00               	movlw	0
  3805  00103A  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
  3806  00103C  0E00               	movlw	0
  3807  00103E  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
  3808  001040  C079  F060         	movff	VFD_Write@data,___lldiv@dividend
  3809  001044  C07A  F061         	movff	VFD_Write@data+1,___lldiv@dividend+1
  3810  001048  C07B  F062         	movff	VFD_Write@data+2,___lldiv@dividend+2
  3811  00104C  C07C  F063         	movff	VFD_Write@data+3,___lldiv@dividend+3
  3812  001050  EC60  F017         	call	___lldiv	;wreg free
  3813  001054  C060  F06D         	movff	?___lldiv,___llmod@dividend
  3814  001058  C061  F06E         	movff	?___lldiv+1,___llmod@dividend+1
  3815  00105C  C062  F06F         	movff	?___lldiv+2,___llmod@dividend+2
  3816  001060  C063  F070         	movff	?___lldiv+3,___llmod@dividend+3
  3817  001064  0E0A               	movlw	10
  3818  001066  0100               	movlb	0	; () banked
  3819  001068  6F71               	movwf	___llmod@divisor& (0+255),b
  3820  00106A  0E00               	movlw	0
  3821  00106C  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
  3822  00106E  0E00               	movlw	0
  3823  001070  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
  3824  001072  0E00               	movlw	0
  3825  001074  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
  3826  001076  EC4C  F018         	call	___llmod	;wreg free
  3827  00107A  0100               	movlb	0	; () banked
  3828  00107C  516D               	movf	?___llmod& (0+255),w,b
  3829  00107E  6F7F               	movwf	(VFD_Write@buff+2)& (0+255),b
  3830                           
  3831                           ;main.c: 151:     buff[3] = (data / 1000) % 10;
  3832  001080  0EE8               	movlw	232
  3833  001082  6F64               	movwf	___lldiv@divisor& (0+255),b
  3834  001084  0E03               	movlw	3
  3835  001086  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
  3836  001088  0E00               	movlw	0
  3837  00108A  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
  3838  00108C  0E00               	movlw	0
  3839  00108E  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
  3840  001090  C079  F060         	movff	VFD_Write@data,___lldiv@dividend
  3841  001094  C07A  F061         	movff	VFD_Write@data+1,___lldiv@dividend+1
  3842  001098  C07B  F062         	movff	VFD_Write@data+2,___lldiv@dividend+2
  3843  00109C  C07C  F063         	movff	VFD_Write@data+3,___lldiv@dividend+3
  3844  0010A0  EC60  F017         	call	___lldiv	;wreg free
  3845  0010A4  C060  F06D         	movff	?___lldiv,___llmod@dividend
  3846  0010A8  C061  F06E         	movff	?___lldiv+1,___llmod@dividend+1
  3847  0010AC  C062  F06F         	movff	?___lldiv+2,___llmod@dividend+2
  3848  0010B0  C063  F070         	movff	?___lldiv+3,___llmod@dividend+3
  3849  0010B4  0E0A               	movlw	10
  3850  0010B6  0100               	movlb	0	; () banked
  3851  0010B8  6F71               	movwf	___llmod@divisor& (0+255),b
  3852  0010BA  0E00               	movlw	0
  3853  0010BC  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
  3854  0010BE  0E00               	movlw	0
  3855  0010C0  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
  3856  0010C2  0E00               	movlw	0
  3857  0010C4  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
  3858  0010C6  EC4C  F018         	call	___llmod	;wreg free
  3859  0010CA  0100               	movlb	0	; () banked
  3860  0010CC  516D               	movf	?___llmod& (0+255),w,b
  3861  0010CE  6F80               	movwf	(VFD_Write@buff+3)& (0+255),b
  3862                           
  3863                           ;main.c: 152:     buff[4] = (data / 10000) % 10;
  3864  0010D0  0E10               	movlw	16
  3865  0010D2  6F64               	movwf	___lldiv@divisor& (0+255),b
  3866  0010D4  0E27               	movlw	39
  3867  0010D6  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
  3868  0010D8  0E00               	movlw	0
  3869  0010DA  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
  3870  0010DC  0E00               	movlw	0
  3871  0010DE  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
  3872  0010E0  C079  F060         	movff	VFD_Write@data,___lldiv@dividend
  3873  0010E4  C07A  F061         	movff	VFD_Write@data+1,___lldiv@dividend+1
  3874  0010E8  C07B  F062         	movff	VFD_Write@data+2,___lldiv@dividend+2
  3875  0010EC  C07C  F063         	movff	VFD_Write@data+3,___lldiv@dividend+3
  3876  0010F0  EC60  F017         	call	___lldiv	;wreg free
  3877  0010F4  C060  F06D         	movff	?___lldiv,___llmod@dividend
  3878  0010F8  C061  F06E         	movff	?___lldiv+1,___llmod@dividend+1
  3879  0010FC  C062  F06F         	movff	?___lldiv+2,___llmod@dividend+2
  3880  001100  C063  F070         	movff	?___lldiv+3,___llmod@dividend+3
  3881  001104  0E0A               	movlw	10
  3882  001106  0100               	movlb	0	; () banked
  3883  001108  6F71               	movwf	___llmod@divisor& (0+255),b
  3884  00110A  0E00               	movlw	0
  3885  00110C  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
  3886  00110E  0E00               	movlw	0
  3887  001110  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
  3888  001112  0E00               	movlw	0
  3889  001114  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
  3890  001116  EC4C  F018         	call	___llmod	;wreg free
  3891  00111A  0100               	movlb	0	; () banked
  3892  00111C  516D               	movf	?___llmod& (0+255),w,b
  3893  00111E  6F81               	movwf	(VFD_Write@buff+4)& (0+255),b
  3894                           
  3895                           ;main.c: 153:     buff[5] = (data / 100000) % 10;
  3896  001120  0EA0               	movlw	160
  3897  001122  6F64               	movwf	___lldiv@divisor& (0+255),b
  3898  001124  0E86               	movlw	134
  3899  001126  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
  3900  001128  0E01               	movlw	1
  3901  00112A  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
  3902  00112C  0E00               	movlw	0
  3903  00112E  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
  3904  001130  C079  F060         	movff	VFD_Write@data,___lldiv@dividend
  3905  001134  C07A  F061         	movff	VFD_Write@data+1,___lldiv@dividend+1
  3906  001138  C07B  F062         	movff	VFD_Write@data+2,___lldiv@dividend+2
  3907  00113C  C07C  F063         	movff	VFD_Write@data+3,___lldiv@dividend+3
  3908  001140  EC60  F017         	call	___lldiv	;wreg free
  3909  001144  C060  F06D         	movff	?___lldiv,___llmod@dividend
  3910  001148  C061  F06E         	movff	?___lldiv+1,___llmod@dividend+1
  3911  00114C  C062  F06F         	movff	?___lldiv+2,___llmod@dividend+2
  3912  001150  C063  F070         	movff	?___lldiv+3,___llmod@dividend+3
  3913  001154  0E0A               	movlw	10
  3914  001156  0100               	movlb	0	; () banked
  3915  001158  6F71               	movwf	___llmod@divisor& (0+255),b
  3916  00115A  0E00               	movlw	0
  3917  00115C  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
  3918  00115E  0E00               	movlw	0
  3919  001160  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
  3920  001162  0E00               	movlw	0
  3921  001164  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
  3922  001166  EC4C  F018         	call	___llmod	;wreg free
  3923  00116A  0100               	movlb	0	; () banked
  3924  00116C  516D               	movf	?___llmod& (0+255),w,b
  3925  00116E  6F82               	movwf	(VFD_Write@buff+5)& (0+255),b
  3926  001170                     
  3927                           ; BSR set to: 0
  3928                           ;main.c: 155:     Bit_Write(&temp, 0, Check_Seg(buff[2], 1));
  3929  001170  0E83               	movlw	low VFD_Write@temp
  3930  001172  6F64               	movwf	Bit_Write@ptr& (0+255),b
  3931  001174  0E00               	movlw	high VFD_Write@temp
  3932  001176  6F65               	movwf	(Bit_Write@ptr+1)& (0+255),b
  3933  001178  0E00               	movlw	0
  3934  00117A  6F66               	movwf	Bit_Write@num& (0+255),b
  3935  00117C  0E01               	movlw	1
  3936  00117E  6F60               	movwf	Check_Seg@pos& (0+255),b
  3937  001180  517F               	movf	(VFD_Write@buff+2)& (0+255),w,b
  3938  001182  EC3E  F01A         	call	_Check_Seg
  3939  001186  0100               	movlb	0	; () banked
  3940  001188  6F67               	movwf	Bit_Write@data& (0+255),b
  3941  00118A  EC88  F016         	call	_Bit_Write	;wreg free
  3942  00118E                     
  3943                           ;main.c: 156:     Bit_Write(&temp, 1, Check_Seg(buff[2], 7));
  3944  00118E  0E83               	movlw	low VFD_Write@temp
  3945  001190  0100               	movlb	0	; () banked
  3946  001192  6F64               	movwf	Bit_Write@ptr& (0+255),b
  3947  001194  0E00               	movlw	high VFD_Write@temp
  3948  001196  6F65               	movwf	(Bit_Write@ptr+1)& (0+255),b
  3949  001198  0E01               	movlw	1
  3950  00119A  6F66               	movwf	Bit_Write@num& (0+255),b
  3951  00119C  0E07               	movlw	7
  3952  00119E  6F60               	movwf	Check_Seg@pos& (0+255),b
  3953  0011A0  517F               	movf	(VFD_Write@buff+2)& (0+255),w,b
  3954  0011A2  EC3E  F01A         	call	_Check_Seg
  3955  0011A6  0100               	movlb	0	; () banked
  3956  0011A8  6F67               	movwf	Bit_Write@data& (0+255),b
  3957  0011AA  EC88  F016         	call	_Bit_Write	;wreg free
  3958  0011AE                     
  3959                           ;main.c: 157:     Bit_Write(&temp, 2, Check_Seg(buff[2], 2));
  3960  0011AE  0E83               	movlw	low VFD_Write@temp
  3961  0011B0  0100               	movlb	0	; () banked
  3962  0011B2  6F64               	movwf	Bit_Write@ptr& (0+255),b
  3963  0011B4  0E00               	movlw	high VFD_Write@temp
  3964  0011B6  6F65               	movwf	(Bit_Write@ptr+1)& (0+255),b
  3965  0011B8  0E02               	movlw	2
  3966  0011BA  6F66               	movwf	Bit_Write@num& (0+255),b
  3967  0011BC  0E02               	movlw	2
  3968  0011BE  6F60               	movwf	Check_Seg@pos& (0+255),b
  3969  0011C0  517F               	movf	(VFD_Write@buff+2)& (0+255),w,b
  3970  0011C2  EC3E  F01A         	call	_Check_Seg
  3971  0011C6  0100               	movlb	0	; () banked
  3972  0011C8  6F67               	movwf	Bit_Write@data& (0+255),b
  3973  0011CA  EC88  F016         	call	_Bit_Write	;wreg free
  3974  0011CE                     
  3975                           ;main.c: 159:     Bit_Write(&temp, 3, Check_Seg(buff[1], 3));
  3976  0011CE  0E83               	movlw	low VFD_Write@temp
  3977  0011D0  0100               	movlb	0	; () banked
  3978  0011D2  6F64               	movwf	Bit_Write@ptr& (0+255),b
  3979  0011D4  0E00               	movlw	high VFD_Write@temp
  3980  0011D6  6F65               	movwf	(Bit_Write@ptr+1)& (0+255),b
  3981  0011D8  0E03               	movlw	3
  3982  0011DA  6F66               	movwf	Bit_Write@num& (0+255),b
  3983  0011DC  0E03               	movlw	3
  3984  0011DE  6F60               	movwf	Check_Seg@pos& (0+255),b
  3985  0011E0  517E               	movf	(VFD_Write@buff+1)& (0+255),w,b
  3986  0011E2  EC3E  F01A         	call	_Check_Seg
  3987  0011E6  0100               	movlb	0	; () banked
  3988  0011E8  6F67               	movwf	Bit_Write@data& (0+255),b
  3989  0011EA  EC88  F016         	call	_Bit_Write	;wreg free
  3990  0011EE                     
  3991                           ;main.c: 160:     Bit_Write(&temp, 4, Check_Seg(buff[1], 4));
  3992  0011EE  0E83               	movlw	low VFD_Write@temp
  3993  0011F0  0100               	movlb	0	; () banked
  3994  0011F2  6F64               	movwf	Bit_Write@ptr& (0+255),b
  3995  0011F4  0E00               	movlw	high VFD_Write@temp
  3996  0011F6  6F65               	movwf	(Bit_Write@ptr+1)& (0+255),b
  3997  0011F8  0E04               	movlw	4
  3998  0011FA  6F66               	movwf	Bit_Write@num& (0+255),b
  3999  0011FC  0E04               	movlw	4
  4000  0011FE  6F60               	movwf	Check_Seg@pos& (0+255),b
  4001  001200  517E               	movf	(VFD_Write@buff+1)& (0+255),w,b
  4002  001202  EC3E  F01A         	call	_Check_Seg
  4003  001206  0100               	movlb	0	; () banked
  4004  001208  6F67               	movwf	Bit_Write@data& (0+255),b
  4005  00120A  EC88  F016         	call	_Bit_Write	;wreg free
  4006  00120E                     
  4007                           ;main.c: 161:     Bit_Write(&temp, 5, Check_Seg(buff[1], 5));
  4008  00120E  0E83               	movlw	low VFD_Write@temp
  4009  001210  0100               	movlb	0	; () banked
  4010  001212  6F64               	movwf	Bit_Write@ptr& (0+255),b
  4011  001214  0E00               	movlw	high VFD_Write@temp
  4012  001216  6F65               	movwf	(Bit_Write@ptr+1)& (0+255),b
  4013  001218  0E05               	movlw	5
  4014  00121A  6F66               	movwf	Bit_Write@num& (0+255),b
  4015  00121C  0E05               	movlw	5
  4016  00121E  6F60               	movwf	Check_Seg@pos& (0+255),b
  4017  001220  517E               	movf	(VFD_Write@buff+1)& (0+255),w,b
  4018  001222  EC3E  F01A         	call	_Check_Seg
  4019  001226  0100               	movlb	0	; () banked
  4020  001228  6F67               	movwf	Bit_Write@data& (0+255),b
  4021  00122A  EC88  F016         	call	_Bit_Write	;wreg free
  4022  00122E                     
  4023                           ;main.c: 162:     Bit_Write(&temp, 6, Check_Seg(buff[1], 6));
  4024  00122E  0E83               	movlw	low VFD_Write@temp
  4025  001230  0100               	movlb	0	; () banked
  4026  001232  6F64               	movwf	Bit_Write@ptr& (0+255),b
  4027  001234  0E00               	movlw	high VFD_Write@temp
  4028  001236  6F65               	movwf	(Bit_Write@ptr+1)& (0+255),b
  4029  001238  0E06               	movlw	6
  4030  00123A  6F66               	movwf	Bit_Write@num& (0+255),b
  4031  00123C  0E06               	movlw	6
  4032  00123E  6F60               	movwf	Check_Seg@pos& (0+255),b
  4033  001240  517E               	movf	(VFD_Write@buff+1)& (0+255),w,b
  4034  001242  EC3E  F01A         	call	_Check_Seg
  4035  001246  0100               	movlb	0	; () banked
  4036  001248  6F67               	movwf	Bit_Write@data& (0+255),b
  4037  00124A  EC88  F016         	call	_Bit_Write	;wreg free
  4038  00124E                     
  4039                           ;main.c: 164:     Bit_Write(&temp, 10, Check_Seg(buff[1], 0));
  4040  00124E  0E83               	movlw	low VFD_Write@temp
  4041  001250  0100               	movlb	0	; () banked
  4042  001252  6F64               	movwf	Bit_Write@ptr& (0+255),b
  4043  001254  0E00               	movlw	high VFD_Write@temp
  4044  001256  6F65               	movwf	(Bit_Write@ptr+1)& (0+255),b
  4045  001258  0E0A               	movlw	10
  4046  00125A  6F66               	movwf	Bit_Write@num& (0+255),b
  4047  00125C  0E00               	movlw	0
  4048  00125E  6F60               	movwf	Check_Seg@pos& (0+255),b
  4049  001260  517E               	movf	(VFD_Write@buff+1)& (0+255),w,b
  4050  001262  EC3E  F01A         	call	_Check_Seg
  4051  001266  0100               	movlb	0	; () banked
  4052  001268  6F67               	movwf	Bit_Write@data& (0+255),b
  4053  00126A  EC88  F016         	call	_Bit_Write	;wreg free
  4054  00126E                     
  4055                           ;main.c: 165:     Bit_Write(&temp, 11, Check_Seg(buff[1], 1));
  4056  00126E  0E83               	movlw	low VFD_Write@temp
  4057  001270  0100               	movlb	0	; () banked
  4058  001272  6F64               	movwf	Bit_Write@ptr& (0+255),b
  4059  001274  0E00               	movlw	high VFD_Write@temp
  4060  001276  6F65               	movwf	(Bit_Write@ptr+1)& (0+255),b
  4061  001278  0E0B               	movlw	11
  4062  00127A  6F66               	movwf	Bit_Write@num& (0+255),b
  4063  00127C  0E01               	movlw	1
  4064  00127E  6F60               	movwf	Check_Seg@pos& (0+255),b
  4065  001280  517E               	movf	(VFD_Write@buff+1)& (0+255),w,b
  4066  001282  EC3E  F01A         	call	_Check_Seg
  4067  001286  0100               	movlb	0	; () banked
  4068  001288  6F67               	movwf	Bit_Write@data& (0+255),b
  4069  00128A  EC88  F016         	call	_Bit_Write	;wreg free
  4070  00128E                     
  4071                           ;main.c: 166:     Bit_Write(&temp, 12, Check_Seg(buff[1], 7));
  4072  00128E  0E83               	movlw	low VFD_Write@temp
  4073  001290  0100               	movlb	0	; () banked
  4074  001292  6F64               	movwf	Bit_Write@ptr& (0+255),b
  4075  001294  0E00               	movlw	high VFD_Write@temp
  4076  001296  6F65               	movwf	(Bit_Write@ptr+1)& (0+255),b
  4077  001298  0E0C               	movlw	12
  4078  00129A  6F66               	movwf	Bit_Write@num& (0+255),b
  4079  00129C  0E07               	movlw	7
  4080  00129E  6F60               	movwf	Check_Seg@pos& (0+255),b
  4081  0012A0  517E               	movf	(VFD_Write@buff+1)& (0+255),w,b
  4082  0012A2  EC3E  F01A         	call	_Check_Seg
  4083  0012A6  0100               	movlb	0	; () banked
  4084  0012A8  6F67               	movwf	Bit_Write@data& (0+255),b
  4085  0012AA  EC88  F016         	call	_Bit_Write	;wreg free
  4086  0012AE                     
  4087                           ;main.c: 167:     Bit_Write(&temp, 13, Check_Seg(buff[1], 2));
  4088  0012AE  0E83               	movlw	low VFD_Write@temp
  4089  0012B0  0100               	movlb	0	; () banked
  4090  0012B2  6F64               	movwf	Bit_Write@ptr& (0+255),b
  4091  0012B4  0E00               	movlw	high VFD_Write@temp
  4092  0012B6  6F65               	movwf	(Bit_Write@ptr+1)& (0+255),b
  4093  0012B8  0E0D               	movlw	13
  4094  0012BA  6F66               	movwf	Bit_Write@num& (0+255),b
  4095  0012BC  0E02               	movlw	2
  4096  0012BE  6F60               	movwf	Check_Seg@pos& (0+255),b
  4097  0012C0  517E               	movf	(VFD_Write@buff+1)& (0+255),w,b
  4098  0012C2  EC3E  F01A         	call	_Check_Seg
  4099  0012C6  0100               	movlb	0	; () banked
  4100  0012C8  6F67               	movwf	Bit_Write@data& (0+255),b
  4101  0012CA  EC88  F016         	call	_Bit_Write	;wreg free
  4102  0012CE                     
  4103                           ;main.c: 169:     Bit_Write(&temp, 14, Check_Seg(buff[0], 3));
  4104  0012CE  0E83               	movlw	low VFD_Write@temp
  4105  0012D0  0100               	movlb	0	; () banked
  4106  0012D2  6F64               	movwf	Bit_Write@ptr& (0+255),b
  4107  0012D4  0E00               	movlw	high VFD_Write@temp
  4108  0012D6  6F65               	movwf	(Bit_Write@ptr+1)& (0+255),b
  4109  0012D8  0E0E               	movlw	14
  4110  0012DA  6F66               	movwf	Bit_Write@num& (0+255),b
  4111  0012DC  0E03               	movlw	3
  4112  0012DE  6F60               	movwf	Check_Seg@pos& (0+255),b
  4113  0012E0  517D               	movf	VFD_Write@buff& (0+255),w,b
  4114  0012E2  EC3E  F01A         	call	_Check_Seg
  4115  0012E6  0100               	movlb	0	; () banked
  4116  0012E8  6F67               	movwf	Bit_Write@data& (0+255),b
  4117  0012EA  EC88  F016         	call	_Bit_Write	;wreg free
  4118  0012EE                     
  4119                           ;main.c: 170:     Bit_Write(&temp, 15, Check_Seg(buff[0], 4));
  4120  0012EE  0E83               	movlw	low VFD_Write@temp
  4121  0012F0  0100               	movlb	0	; () banked
  4122  0012F2  6F64               	movwf	Bit_Write@ptr& (0+255),b
  4123  0012F4  0E00               	movlw	high VFD_Write@temp
  4124  0012F6  6F65               	movwf	(Bit_Write@ptr+1)& (0+255),b
  4125  0012F8  0E0F               	movlw	15
  4126  0012FA  6F66               	movwf	Bit_Write@num& (0+255),b
  4127  0012FC  0E04               	movlw	4
  4128  0012FE  6F60               	movwf	Check_Seg@pos& (0+255),b
  4129  001300  517D               	movf	VFD_Write@buff& (0+255),w,b
  4130  001302  EC3E  F01A         	call	_Check_Seg
  4131  001306  0100               	movlb	0	; () banked
  4132  001308  6F67               	movwf	Bit_Write@data& (0+255),b
  4133  00130A  EC88  F016         	call	_Bit_Write	;wreg free
  4134  00130E                     
  4135                           ;main.c: 172:     Bit_Write(&temp, 16, Check_Seg(buff[0], 5));
  4136  00130E  0E83               	movlw	low VFD_Write@temp
  4137  001310  0100               	movlb	0	; () banked
  4138  001312  6F64               	movwf	Bit_Write@ptr& (0+255),b
  4139  001314  0E00               	movlw	high VFD_Write@temp
  4140  001316  6F65               	movwf	(Bit_Write@ptr+1)& (0+255),b
  4141  001318  0E10               	movlw	16
  4142  00131A  6F66               	movwf	Bit_Write@num& (0+255),b
  4143  00131C  0E05               	movlw	5
  4144  00131E  6F60               	movwf	Check_Seg@pos& (0+255),b
  4145  001320  517D               	movf	VFD_Write@buff& (0+255),w,b
  4146  001322  EC3E  F01A         	call	_Check_Seg
  4147  001326  0100               	movlb	0	; () banked
  4148  001328  6F67               	movwf	Bit_Write@data& (0+255),b
  4149  00132A  EC88  F016         	call	_Bit_Write	;wreg free
  4150  00132E                     
  4151                           ;main.c: 173:     Bit_Write(&temp, 17, Check_Seg(buff[0], 6));
  4152  00132E  0E83               	movlw	low VFD_Write@temp
  4153  001330  0100               	movlb	0	; () banked
  4154  001332  6F64               	movwf	Bit_Write@ptr& (0+255),b
  4155  001334  0E00               	movlw	high VFD_Write@temp
  4156  001336  6F65               	movwf	(Bit_Write@ptr+1)& (0+255),b
  4157  001338  0E11               	movlw	17
  4158  00133A  6F66               	movwf	Bit_Write@num& (0+255),b
  4159  00133C  0E06               	movlw	6
  4160  00133E  6F60               	movwf	Check_Seg@pos& (0+255),b
  4161  001340  517D               	movf	VFD_Write@buff& (0+255),w,b
  4162  001342  EC3E  F01A         	call	_Check_Seg
  4163  001346  0100               	movlb	0	; () banked
  4164  001348  6F67               	movwf	Bit_Write@data& (0+255),b
  4165  00134A  EC88  F016         	call	_Bit_Write	;wreg free
  4166  00134E                     
  4167                           ;main.c: 174:     Bit_Write(&temp, 18, Check_Seg(buff[0], 0));
  4168  00134E  0E83               	movlw	low VFD_Write@temp
  4169  001350  0100               	movlb	0	; () banked
  4170  001352  6F64               	movwf	Bit_Write@ptr& (0+255),b
  4171  001354  0E00               	movlw	high VFD_Write@temp
  4172  001356  6F65               	movwf	(Bit_Write@ptr+1)& (0+255),b
  4173  001358  0E12               	movlw	18
  4174  00135A  6F66               	movwf	Bit_Write@num& (0+255),b
  4175  00135C  0E00               	movlw	0
  4176  00135E  6F60               	movwf	Check_Seg@pos& (0+255),b
  4177  001360  517D               	movf	VFD_Write@buff& (0+255),w,b
  4178  001362  EC3E  F01A         	call	_Check_Seg
  4179  001366  0100               	movlb	0	; () banked
  4180  001368  6F67               	movwf	Bit_Write@data& (0+255),b
  4181  00136A  EC88  F016         	call	_Bit_Write	;wreg free
  4182  00136E                     
  4183                           ;main.c: 176:     Bit_Write(&temp, 19, Check_Seg(buff[0], 1));
  4184  00136E  0E83               	movlw	low VFD_Write@temp
  4185  001370  0100               	movlb	0	; () banked
  4186  001372  6F64               	movwf	Bit_Write@ptr& (0+255),b
  4187  001374  0E00               	movlw	high VFD_Write@temp
  4188  001376  6F65               	movwf	(Bit_Write@ptr+1)& (0+255),b
  4189  001378  0E13               	movlw	19
  4190  00137A  6F66               	movwf	Bit_Write@num& (0+255),b
  4191  00137C  0E01               	movlw	1
  4192  00137E  6F60               	movwf	Check_Seg@pos& (0+255),b
  4193  001380  517D               	movf	VFD_Write@buff& (0+255),w,b
  4194  001382  EC3E  F01A         	call	_Check_Seg
  4195  001386  0100               	movlb	0	; () banked
  4196  001388  6F67               	movwf	Bit_Write@data& (0+255),b
  4197  00138A  EC88  F016         	call	_Bit_Write	;wreg free
  4198  00138E                     
  4199                           ;main.c: 177:     Bit_Write(&temp, 20, Check_Seg(buff[0], 7));
  4200  00138E  0E83               	movlw	low VFD_Write@temp
  4201  001390  0100               	movlb	0	; () banked
  4202  001392  6F64               	movwf	Bit_Write@ptr& (0+255),b
  4203  001394  0E00               	movlw	high VFD_Write@temp
  4204  001396  6F65               	movwf	(Bit_Write@ptr+1)& (0+255),b
  4205  001398  0E14               	movlw	20
  4206  00139A  6F66               	movwf	Bit_Write@num& (0+255),b
  4207  00139C  0E07               	movlw	7
  4208  00139E  6F60               	movwf	Check_Seg@pos& (0+255),b
  4209  0013A0  517D               	movf	VFD_Write@buff& (0+255),w,b
  4210  0013A2  EC3E  F01A         	call	_Check_Seg
  4211  0013A6  0100               	movlb	0	; () banked
  4212  0013A8  6F67               	movwf	Bit_Write@data& (0+255),b
  4213  0013AA  EC88  F016         	call	_Bit_Write	;wreg free
  4214  0013AE                     
  4215                           ;main.c: 178:     Bit_Write(&temp, 21, Check_Seg(buff[0], 2));
  4216  0013AE  0E83               	movlw	low VFD_Write@temp
  4217  0013B0  0100               	movlb	0	; () banked
  4218  0013B2  6F64               	movwf	Bit_Write@ptr& (0+255),b
  4219  0013B4  0E00               	movlw	high VFD_Write@temp
  4220  0013B6  6F65               	movwf	(Bit_Write@ptr+1)& (0+255),b
  4221  0013B8  0E15               	movlw	21
  4222  0013BA  6F66               	movwf	Bit_Write@num& (0+255),b
  4223  0013BC  0E02               	movlw	2
  4224  0013BE  6F60               	movwf	Check_Seg@pos& (0+255),b
  4225  0013C0  517D               	movf	VFD_Write@buff& (0+255),w,b
  4226  0013C2  EC3E  F01A         	call	_Check_Seg
  4227  0013C6  0100               	movlb	0	; () banked
  4228  0013C8  6F67               	movwf	Bit_Write@data& (0+255),b
  4229  0013CA  EC88  F016         	call	_Bit_Write	;wreg free
  4230  0013CE                     
  4231                           ;main.c: 180:     Bit_Write(&temp, 27, Check_Seg(buff[2], 3));
  4232  0013CE  0E83               	movlw	low VFD_Write@temp
  4233  0013D0  0100               	movlb	0	; () banked
  4234  0013D2  6F64               	movwf	Bit_Write@ptr& (0+255),b
  4235  0013D4  0E00               	movlw	high VFD_Write@temp
  4236  0013D6  6F65               	movwf	(Bit_Write@ptr+1)& (0+255),b
  4237  0013D8  0E1B               	movlw	27
  4238  0013DA  6F66               	movwf	Bit_Write@num& (0+255),b
  4239  0013DC  0E03               	movlw	3
  4240  0013DE  6F60               	movwf	Check_Seg@pos& (0+255),b
  4241  0013E0  517F               	movf	(VFD_Write@buff+2)& (0+255),w,b
  4242  0013E2  EC3E  F01A         	call	_Check_Seg
  4243  0013E6  0100               	movlb	0	; () banked
  4244  0013E8  6F67               	movwf	Bit_Write@data& (0+255),b
  4245  0013EA  EC88  F016         	call	_Bit_Write	;wreg free
  4246  0013EE                     
  4247                           ;main.c: 181:     Bit_Write(&temp, 28, Check_Seg(buff[2], 4));
  4248  0013EE  0E83               	movlw	low VFD_Write@temp
  4249  0013F0  0100               	movlb	0	; () banked
  4250  0013F2  6F64               	movwf	Bit_Write@ptr& (0+255),b
  4251  0013F4  0E00               	movlw	high VFD_Write@temp
  4252  0013F6  6F65               	movwf	(Bit_Write@ptr+1)& (0+255),b
  4253  0013F8  0E1C               	movlw	28
  4254  0013FA  6F66               	movwf	Bit_Write@num& (0+255),b
  4255  0013FC  0E04               	movlw	4
  4256  0013FE  6F60               	movwf	Check_Seg@pos& (0+255),b
  4257  001400  517F               	movf	(VFD_Write@buff+2)& (0+255),w,b
  4258  001402  EC3E  F01A         	call	_Check_Seg
  4259  001406  0100               	movlb	0	; () banked
  4260  001408  6F67               	movwf	Bit_Write@data& (0+255),b
  4261  00140A  EC88  F016         	call	_Bit_Write	;wreg free
  4262  00140E                     
  4263                           ;main.c: 183:     Bit_Write(&temp, 29, Check_Seg(buff[2], 5));
  4264  00140E  0E83               	movlw	low VFD_Write@temp
  4265  001410  0100               	movlb	0	; () banked
  4266  001412  6F64               	movwf	Bit_Write@ptr& (0+255),b
  4267  001414  0E00               	movlw	high VFD_Write@temp
  4268  001416  6F65               	movwf	(Bit_Write@ptr+1)& (0+255),b
  4269  001418  0E1D               	movlw	29
  4270  00141A  6F66               	movwf	Bit_Write@num& (0+255),b
  4271  00141C  0E05               	movlw	5
  4272  00141E  6F60               	movwf	Check_Seg@pos& (0+255),b
  4273  001420  517F               	movf	(VFD_Write@buff+2)& (0+255),w,b
  4274  001422  EC3E  F01A         	call	_Check_Seg
  4275  001426  0100               	movlb	0	; () banked
  4276  001428  6F67               	movwf	Bit_Write@data& (0+255),b
  4277  00142A  EC88  F016         	call	_Bit_Write	;wreg free
  4278  00142E                     
  4279                           ;main.c: 184:     Bit_Write(&temp, 30, Check_Seg(buff[2], 6));
  4280  00142E  0E83               	movlw	low VFD_Write@temp
  4281  001430  0100               	movlb	0	; () banked
  4282  001432  6F64               	movwf	Bit_Write@ptr& (0+255),b
  4283  001434  0E00               	movlw	high VFD_Write@temp
  4284  001436  6F65               	movwf	(Bit_Write@ptr+1)& (0+255),b
  4285  001438  0E1E               	movlw	30
  4286  00143A  6F66               	movwf	Bit_Write@num& (0+255),b
  4287  00143C  0E06               	movlw	6
  4288  00143E  6F60               	movwf	Check_Seg@pos& (0+255),b
  4289  001440  517F               	movf	(VFD_Write@buff+2)& (0+255),w,b
  4290  001442  EC3E  F01A         	call	_Check_Seg
  4291  001446  0100               	movlb	0	; () banked
  4292  001448  6F67               	movwf	Bit_Write@data& (0+255),b
  4293  00144A  EC88  F016         	call	_Bit_Write	;wreg free
  4294  00144E                     
  4295                           ;main.c: 185:     Bit_Write(&temp, 31, Check_Seg(buff[2], 0));
  4296  00144E  0E83               	movlw	low VFD_Write@temp
  4297  001450  0100               	movlb	0	; () banked
  4298  001452  6F64               	movwf	Bit_Write@ptr& (0+255),b
  4299  001454  0E00               	movlw	high VFD_Write@temp
  4300  001456  6F65               	movwf	(Bit_Write@ptr+1)& (0+255),b
  4301  001458  0E1F               	movlw	31
  4302  00145A  6F66               	movwf	Bit_Write@num& (0+255),b
  4303  00145C  0E00               	movlw	0
  4304  00145E  6F60               	movwf	Check_Seg@pos& (0+255),b
  4305  001460  517F               	movf	(VFD_Write@buff+2)& (0+255),w,b
  4306  001462  EC3E  F01A         	call	_Check_Seg
  4307  001466  0100               	movlb	0	; () banked
  4308  001468  6F67               	movwf	Bit_Write@data& (0+255),b
  4309  00146A  EC88  F016         	call	_Bit_Write	;wreg free
  4310  00146E                     
  4311                           ;main.c: 187:     Bit_Write(&temp, 32, Check_Seg(buff[5], 1));
  4312  00146E  0E83               	movlw	low VFD_Write@temp
  4313  001470  0100               	movlb	0	; () banked
  4314  001472  6F64               	movwf	Bit_Write@ptr& (0+255),b
  4315  001474  0E00               	movlw	high VFD_Write@temp
  4316  001476  6F65               	movwf	(Bit_Write@ptr+1)& (0+255),b
  4317  001478  0E20               	movlw	32
  4318  00147A  6F66               	movwf	Bit_Write@num& (0+255),b
  4319  00147C  0E01               	movlw	1
  4320  00147E  6F60               	movwf	Check_Seg@pos& (0+255),b
  4321  001480  5182               	movf	(VFD_Write@buff+5)& (0+255),w,b
  4322  001482  EC3E  F01A         	call	_Check_Seg
  4323  001486  0100               	movlb	0	; () banked
  4324  001488  6F67               	movwf	Bit_Write@data& (0+255),b
  4325  00148A  EC88  F016         	call	_Bit_Write	;wreg free
  4326  00148E                     
  4327                           ;main.c: 188:     Bit_Write(&temp, 33, Check_Seg(buff[5], 7));
  4328  00148E  0E83               	movlw	low VFD_Write@temp
  4329  001490  0100               	movlb	0	; () banked
  4330  001492  6F64               	movwf	Bit_Write@ptr& (0+255),b
  4331  001494  0E00               	movlw	high VFD_Write@temp
  4332  001496  6F65               	movwf	(Bit_Write@ptr+1)& (0+255),b
  4333  001498  0E21               	movlw	33
  4334  00149A  6F66               	movwf	Bit_Write@num& (0+255),b
  4335  00149C  0E07               	movlw	7
  4336  00149E  6F60               	movwf	Check_Seg@pos& (0+255),b
  4337  0014A0  5182               	movf	(VFD_Write@buff+5)& (0+255),w,b
  4338  0014A2  EC3E  F01A         	call	_Check_Seg
  4339  0014A6  0100               	movlb	0	; () banked
  4340  0014A8  6F67               	movwf	Bit_Write@data& (0+255),b
  4341  0014AA  EC88  F016         	call	_Bit_Write	;wreg free
  4342  0014AE                     
  4343                           ;main.c: 189:     Bit_Write(&temp, 34, Check_Seg(buff[5], 2));
  4344  0014AE  0E83               	movlw	low VFD_Write@temp
  4345  0014B0  0100               	movlb	0	; () banked
  4346  0014B2  6F64               	movwf	Bit_Write@ptr& (0+255),b
  4347  0014B4  0E00               	movlw	high VFD_Write@temp
  4348  0014B6  6F65               	movwf	(Bit_Write@ptr+1)& (0+255),b
  4349  0014B8  0E22               	movlw	34
  4350  0014BA  6F66               	movwf	Bit_Write@num& (0+255),b
  4351  0014BC  0E02               	movlw	2
  4352  0014BE  6F60               	movwf	Check_Seg@pos& (0+255),b
  4353  0014C0  5182               	movf	(VFD_Write@buff+5)& (0+255),w,b
  4354  0014C2  EC3E  F01A         	call	_Check_Seg
  4355  0014C6  0100               	movlb	0	; () banked
  4356  0014C8  6F67               	movwf	Bit_Write@data& (0+255),b
  4357  0014CA  EC88  F016         	call	_Bit_Write	;wreg free
  4358  0014CE                     
  4359                           ;main.c: 191:     Bit_Write(&temp, 35, Check_Seg(buff[4], 3));
  4360  0014CE  0E83               	movlw	low VFD_Write@temp
  4361  0014D0  0100               	movlb	0	; () banked
  4362  0014D2  6F64               	movwf	Bit_Write@ptr& (0+255),b
  4363  0014D4  0E00               	movlw	high VFD_Write@temp
  4364  0014D6  6F65               	movwf	(Bit_Write@ptr+1)& (0+255),b
  4365  0014D8  0E23               	movlw	35
  4366  0014DA  6F66               	movwf	Bit_Write@num& (0+255),b
  4367  0014DC  0E03               	movlw	3
  4368  0014DE  6F60               	movwf	Check_Seg@pos& (0+255),b
  4369  0014E0  5181               	movf	(VFD_Write@buff+4)& (0+255),w,b
  4370  0014E2  EC3E  F01A         	call	_Check_Seg
  4371  0014E6  0100               	movlb	0	; () banked
  4372  0014E8  6F67               	movwf	Bit_Write@data& (0+255),b
  4373  0014EA  EC88  F016         	call	_Bit_Write	;wreg free
  4374  0014EE                     
  4375                           ;main.c: 192:     Bit_Write(&temp, 36, Check_Seg(buff[4], 4));
  4376  0014EE  0E83               	movlw	low VFD_Write@temp
  4377  0014F0  0100               	movlb	0	; () banked
  4378  0014F2  6F64               	movwf	Bit_Write@ptr& (0+255),b
  4379  0014F4  0E00               	movlw	high VFD_Write@temp
  4380  0014F6  6F65               	movwf	(Bit_Write@ptr+1)& (0+255),b
  4381  0014F8  0E24               	movlw	36
  4382  0014FA  6F66               	movwf	Bit_Write@num& (0+255),b
  4383  0014FC  0E04               	movlw	4
  4384  0014FE  6F60               	movwf	Check_Seg@pos& (0+255),b
  4385  001500  5181               	movf	(VFD_Write@buff+4)& (0+255),w,b
  4386  001502  EC3E  F01A         	call	_Check_Seg
  4387  001506  0100               	movlb	0	; () banked
  4388  001508  6F67               	movwf	Bit_Write@data& (0+255),b
  4389  00150A  EC88  F016         	call	_Bit_Write	;wreg free
  4390  00150E                     
  4391                           ;main.c: 193:     Bit_Write(&temp, 37, Check_Seg(buff[4], 5));
  4392  00150E  0E83               	movlw	low VFD_Write@temp
  4393  001510  0100               	movlb	0	; () banked
  4394  001512  6F64               	movwf	Bit_Write@ptr& (0+255),b
  4395  001514  0E00               	movlw	high VFD_Write@temp
  4396  001516  6F65               	movwf	(Bit_Write@ptr+1)& (0+255),b
  4397  001518  0E25               	movlw	37
  4398  00151A  6F66               	movwf	Bit_Write@num& (0+255),b
  4399  00151C  0E05               	movlw	5
  4400  00151E  6F60               	movwf	Check_Seg@pos& (0+255),b
  4401  001520  5181               	movf	(VFD_Write@buff+4)& (0+255),w,b
  4402  001522  EC3E  F01A         	call	_Check_Seg
  4403  001526  0100               	movlb	0	; () banked
  4404  001528  6F67               	movwf	Bit_Write@data& (0+255),b
  4405  00152A  EC88  F016         	call	_Bit_Write	;wreg free
  4406  00152E                     
  4407                           ;main.c: 194:     Bit_Write(&temp, 38, Check_Seg(buff[4], 6));
  4408  00152E  0E83               	movlw	low VFD_Write@temp
  4409  001530  0100               	movlb	0	; () banked
  4410  001532  6F64               	movwf	Bit_Write@ptr& (0+255),b
  4411  001534  0E00               	movlw	high VFD_Write@temp
  4412  001536  6F65               	movwf	(Bit_Write@ptr+1)& (0+255),b
  4413  001538  0E26               	movlw	38
  4414  00153A  6F66               	movwf	Bit_Write@num& (0+255),b
  4415  00153C  0E06               	movlw	6
  4416  00153E  6F60               	movwf	Check_Seg@pos& (0+255),b
  4417  001540  5181               	movf	(VFD_Write@buff+4)& (0+255),w,b
  4418  001542  EC3E  F01A         	call	_Check_Seg
  4419  001546  0100               	movlb	0	; () banked
  4420  001548  6F67               	movwf	Bit_Write@data& (0+255),b
  4421  00154A  EC88  F016         	call	_Bit_Write	;wreg free
  4422  00154E                     
  4423                           ;main.c: 196:     Bit_Write(&temp, 42, Check_Seg(buff[4], 0));
  4424  00154E  0E83               	movlw	low VFD_Write@temp
  4425  001550  0100               	movlb	0	; () banked
  4426  001552  6F64               	movwf	Bit_Write@ptr& (0+255),b
  4427  001554  0E00               	movlw	high VFD_Write@temp
  4428  001556  6F65               	movwf	(Bit_Write@ptr+1)& (0+255),b
  4429  001558  0E2A               	movlw	42
  4430  00155A  6F66               	movwf	Bit_Write@num& (0+255),b
  4431  00155C  0E00               	movlw	0
  4432  00155E  6F60               	movwf	Check_Seg@pos& (0+255),b
  4433  001560  5181               	movf	(VFD_Write@buff+4)& (0+255),w,b
  4434  001562  EC3E  F01A         	call	_Check_Seg
  4435  001566  0100               	movlb	0	; () banked
  4436  001568  6F67               	movwf	Bit_Write@data& (0+255),b
  4437  00156A  EC88  F016         	call	_Bit_Write	;wreg free
  4438  00156E                     
  4439                           ;main.c: 197:     Bit_Write(&temp, 43, Check_Seg(buff[4], 1));
  4440  00156E  0E83               	movlw	low VFD_Write@temp
  4441  001570  0100               	movlb	0	; () banked
  4442  001572  6F64               	movwf	Bit_Write@ptr& (0+255),b
  4443  001574  0E00               	movlw	high VFD_Write@temp
  4444  001576  6F65               	movwf	(Bit_Write@ptr+1)& (0+255),b
  4445  001578  0E2B               	movlw	43
  4446  00157A  6F66               	movwf	Bit_Write@num& (0+255),b
  4447  00157C  0E01               	movlw	1
  4448  00157E  6F60               	movwf	Check_Seg@pos& (0+255),b
  4449  001580  5181               	movf	(VFD_Write@buff+4)& (0+255),w,b
  4450  001582  EC3E  F01A         	call	_Check_Seg
  4451  001586  0100               	movlb	0	; () banked
  4452  001588  6F67               	movwf	Bit_Write@data& (0+255),b
  4453  00158A  EC88  F016         	call	_Bit_Write	;wreg free
  4454  00158E                     
  4455                           ;main.c: 198:     Bit_Write(&temp, 44, Check_Seg(buff[4], 7));
  4456  00158E  0E83               	movlw	low VFD_Write@temp
  4457  001590  0100               	movlb	0	; () banked
  4458  001592  6F64               	movwf	Bit_Write@ptr& (0+255),b
  4459  001594  0E00               	movlw	high VFD_Write@temp
  4460  001596  6F65               	movwf	(Bit_Write@ptr+1)& (0+255),b
  4461  001598  0E2C               	movlw	44
  4462  00159A  6F66               	movwf	Bit_Write@num& (0+255),b
  4463  00159C  0E07               	movlw	7
  4464  00159E  6F60               	movwf	Check_Seg@pos& (0+255),b
  4465  0015A0  5181               	movf	(VFD_Write@buff+4)& (0+255),w,b
  4466  0015A2  EC3E  F01A         	call	_Check_Seg
  4467  0015A6  0100               	movlb	0	; () banked
  4468  0015A8  6F67               	movwf	Bit_Write@data& (0+255),b
  4469  0015AA  EC88  F016         	call	_Bit_Write	;wreg free
  4470  0015AE                     
  4471                           ;main.c: 199:     Bit_Write(&temp, 45, Check_Seg(buff[4], 2));
  4472  0015AE  0E83               	movlw	low VFD_Write@temp
  4473  0015B0  0100               	movlb	0	; () banked
  4474  0015B2  6F64               	movwf	Bit_Write@ptr& (0+255),b
  4475  0015B4  0E00               	movlw	high VFD_Write@temp
  4476  0015B6  6F65               	movwf	(Bit_Write@ptr+1)& (0+255),b
  4477  0015B8  0E2D               	movlw	45
  4478  0015BA  6F66               	movwf	Bit_Write@num& (0+255),b
  4479  0015BC  0E02               	movlw	2
  4480  0015BE  6F60               	movwf	Check_Seg@pos& (0+255),b
  4481  0015C0  5181               	movf	(VFD_Write@buff+4)& (0+255),w,b
  4482  0015C2  EC3E  F01A         	call	_Check_Seg
  4483  0015C6  0100               	movlb	0	; () banked
  4484  0015C8  6F67               	movwf	Bit_Write@data& (0+255),b
  4485  0015CA  EC88  F016         	call	_Bit_Write	;wreg free
  4486  0015CE                     
  4487                           ;main.c: 201:     Bit_Write(&temp, 46, Check_Seg(buff[3], 3));
  4488  0015CE  0E83               	movlw	low VFD_Write@temp
  4489  0015D0  0100               	movlb	0	; () banked
  4490  0015D2  6F64               	movwf	Bit_Write@ptr& (0+255),b
  4491  0015D4  0E00               	movlw	high VFD_Write@temp
  4492  0015D6  6F65               	movwf	(Bit_Write@ptr+1)& (0+255),b
  4493  0015D8  0E2E               	movlw	46
  4494  0015DA  6F66               	movwf	Bit_Write@num& (0+255),b
  4495  0015DC  0E03               	movlw	3
  4496  0015DE  6F60               	movwf	Check_Seg@pos& (0+255),b
  4497  0015E0  5180               	movf	(VFD_Write@buff+3)& (0+255),w,b
  4498  0015E2  EC3E  F01A         	call	_Check_Seg
  4499  0015E6  0100               	movlb	0	; () banked
  4500  0015E8  6F67               	movwf	Bit_Write@data& (0+255),b
  4501  0015EA  EC88  F016         	call	_Bit_Write	;wreg free
  4502  0015EE                     
  4503                           ;main.c: 202:     Bit_Write(&temp, 47, Check_Seg(buff[3], 4));
  4504  0015EE  0E83               	movlw	low VFD_Write@temp
  4505  0015F0  0100               	movlb	0	; () banked
  4506  0015F2  6F64               	movwf	Bit_Write@ptr& (0+255),b
  4507  0015F4  0E00               	movlw	high VFD_Write@temp
  4508  0015F6  6F65               	movwf	(Bit_Write@ptr+1)& (0+255),b
  4509  0015F8  0E2F               	movlw	47
  4510  0015FA  6F66               	movwf	Bit_Write@num& (0+255),b
  4511  0015FC  0E04               	movlw	4
  4512  0015FE  6F60               	movwf	Check_Seg@pos& (0+255),b
  4513  001600  5180               	movf	(VFD_Write@buff+3)& (0+255),w,b
  4514  001602  EC3E  F01A         	call	_Check_Seg
  4515  001606  0100               	movlb	0	; () banked
  4516  001608  6F67               	movwf	Bit_Write@data& (0+255),b
  4517  00160A  EC88  F016         	call	_Bit_Write	;wreg free
  4518  00160E                     
  4519                           ;main.c: 204:     Bit_Write(&temp, 48, Check_Seg(buff[3], 5));
  4520  00160E  0E83               	movlw	low VFD_Write@temp
  4521  001610  0100               	movlb	0	; () banked
  4522  001612  6F64               	movwf	Bit_Write@ptr& (0+255),b
  4523  001614  0E00               	movlw	high VFD_Write@temp
  4524  001616  6F65               	movwf	(Bit_Write@ptr+1)& (0+255),b
  4525  001618  0E30               	movlw	48
  4526  00161A  6F66               	movwf	Bit_Write@num& (0+255),b
  4527  00161C  0E05               	movlw	5
  4528  00161E  6F60               	movwf	Check_Seg@pos& (0+255),b
  4529  001620  5180               	movf	(VFD_Write@buff+3)& (0+255),w,b
  4530  001622  EC3E  F01A         	call	_Check_Seg
  4531  001626  0100               	movlb	0	; () banked
  4532  001628  6F67               	movwf	Bit_Write@data& (0+255),b
  4533  00162A  EC88  F016         	call	_Bit_Write	;wreg free
  4534  00162E                     
  4535                           ;main.c: 205:     Bit_Write(&temp, 49, Check_Seg(buff[3], 6));
  4536  00162E  0E83               	movlw	low VFD_Write@temp
  4537  001630  0100               	movlb	0	; () banked
  4538  001632  6F64               	movwf	Bit_Write@ptr& (0+255),b
  4539  001634  0E00               	movlw	high VFD_Write@temp
  4540  001636  6F65               	movwf	(Bit_Write@ptr+1)& (0+255),b
  4541  001638  0E31               	movlw	49
  4542  00163A  6F66               	movwf	Bit_Write@num& (0+255),b
  4543  00163C  0E06               	movlw	6
  4544  00163E  6F60               	movwf	Check_Seg@pos& (0+255),b
  4545  001640  5180               	movf	(VFD_Write@buff+3)& (0+255),w,b
  4546  001642  EC3E  F01A         	call	_Check_Seg
  4547  001646  0100               	movlb	0	; () banked
  4548  001648  6F67               	movwf	Bit_Write@data& (0+255),b
  4549  00164A  EC88  F016         	call	_Bit_Write	;wreg free
  4550  00164E                     
  4551                           ;main.c: 206:     Bit_Write(&temp, 50, Check_Seg(buff[3], 0));
  4552  00164E  0E83               	movlw	low VFD_Write@temp
  4553  001650  0100               	movlb	0	; () banked
  4554  001652  6F64               	movwf	Bit_Write@ptr& (0+255),b
  4555  001654  0E00               	movlw	high VFD_Write@temp
  4556  001656  6F65               	movwf	(Bit_Write@ptr+1)& (0+255),b
  4557  001658  0E32               	movlw	50
  4558  00165A  6F66               	movwf	Bit_Write@num& (0+255),b
  4559  00165C  0E00               	movlw	0
  4560  00165E  6F60               	movwf	Check_Seg@pos& (0+255),b
  4561  001660  5180               	movf	(VFD_Write@buff+3)& (0+255),w,b
  4562  001662  EC3E  F01A         	call	_Check_Seg
  4563  001666  0100               	movlb	0	; () banked
  4564  001668  6F67               	movwf	Bit_Write@data& (0+255),b
  4565  00166A  EC88  F016         	call	_Bit_Write	;wreg free
  4566  00166E                     
  4567                           ;main.c: 208:     Bit_Write(&temp, 51, Check_Seg(buff[3], 1));
  4568  00166E  0E83               	movlw	low VFD_Write@temp
  4569  001670  0100               	movlb	0	; () banked
  4570  001672  6F64               	movwf	Bit_Write@ptr& (0+255),b
  4571  001674  0E00               	movlw	high VFD_Write@temp
  4572  001676  6F65               	movwf	(Bit_Write@ptr+1)& (0+255),b
  4573  001678  0E33               	movlw	51
  4574  00167A  6F66               	movwf	Bit_Write@num& (0+255),b
  4575  00167C  0E01               	movlw	1
  4576  00167E  6F60               	movwf	Check_Seg@pos& (0+255),b
  4577  001680  5180               	movf	(VFD_Write@buff+3)& (0+255),w,b
  4578  001682  EC3E  F01A         	call	_Check_Seg
  4579  001686  0100               	movlb	0	; () banked
  4580  001688  6F67               	movwf	Bit_Write@data& (0+255),b
  4581  00168A  EC88  F016         	call	_Bit_Write	;wreg free
  4582  00168E                     
  4583                           ;main.c: 209:     Bit_Write(&temp, 52, Check_Seg(buff[3], 7));
  4584  00168E  0E83               	movlw	low VFD_Write@temp
  4585  001690  0100               	movlb	0	; () banked
  4586  001692  6F64               	movwf	Bit_Write@ptr& (0+255),b
  4587  001694  0E00               	movlw	high VFD_Write@temp
  4588  001696  6F65               	movwf	(Bit_Write@ptr+1)& (0+255),b
  4589  001698  0E34               	movlw	52
  4590  00169A  6F66               	movwf	Bit_Write@num& (0+255),b
  4591  00169C  0E07               	movlw	7
  4592  00169E  6F60               	movwf	Check_Seg@pos& (0+255),b
  4593  0016A0  5180               	movf	(VFD_Write@buff+3)& (0+255),w,b
  4594  0016A2  EC3E  F01A         	call	_Check_Seg
  4595  0016A6  0100               	movlb	0	; () banked
  4596  0016A8  6F67               	movwf	Bit_Write@data& (0+255),b
  4597  0016AA  EC88  F016         	call	_Bit_Write	;wreg free
  4598  0016AE                     
  4599                           ;main.c: 210:     Bit_Write(&temp, 53, Check_Seg(buff[3], 2));
  4600  0016AE  0E83               	movlw	low VFD_Write@temp
  4601  0016B0  0100               	movlb	0	; () banked
  4602  0016B2  6F64               	movwf	Bit_Write@ptr& (0+255),b
  4603  0016B4  0E00               	movlw	high VFD_Write@temp
  4604  0016B6  6F65               	movwf	(Bit_Write@ptr+1)& (0+255),b
  4605  0016B8  0E35               	movlw	53
  4606  0016BA  6F66               	movwf	Bit_Write@num& (0+255),b
  4607  0016BC  0E02               	movlw	2
  4608  0016BE  6F60               	movwf	Check_Seg@pos& (0+255),b
  4609  0016C0  5180               	movf	(VFD_Write@buff+3)& (0+255),w,b
  4610  0016C2  EC3E  F01A         	call	_Check_Seg
  4611  0016C6  0100               	movlb	0	; () banked
  4612  0016C8  6F67               	movwf	Bit_Write@data& (0+255),b
  4613  0016CA  EC88  F016         	call	_Bit_Write	;wreg free
  4614  0016CE                     
  4615                           ;main.c: 212:     Bit_Write(&temp, 58, Heater_Control);
  4616  0016CE  0E83               	movlw	low VFD_Write@temp
  4617  0016D0  0100               	movlb	0	; () banked
  4618  0016D2  6F64               	movwf	Bit_Write@ptr& (0+255),b
  4619  0016D4  0E00               	movlw	high VFD_Write@temp
  4620  0016D6  6F65               	movwf	(Bit_Write@ptr+1)& (0+255),b
  4621  0016D8  0E3A               	movlw	58
  4622  0016DA  6F66               	movwf	Bit_Write@num& (0+255),b
  4623  0016DC  0E01               	movlw	1
  4624  0016DE  6F67               	movwf	Bit_Write@data& (0+255),b
  4625  0016E0  EC88  F016         	call	_Bit_Write	;wreg free
  4626  0016E4                     
  4627                           ;main.c: 214:     Bit_Write(&temp, 59, Check_Seg(buff[5], 3));
  4628  0016E4  0E83               	movlw	low VFD_Write@temp
  4629  0016E6  0100               	movlb	0	; () banked
  4630  0016E8  6F64               	movwf	Bit_Write@ptr& (0+255),b
  4631  0016EA  0E00               	movlw	high VFD_Write@temp
  4632  0016EC  6F65               	movwf	(Bit_Write@ptr+1)& (0+255),b
  4633  0016EE  0E3B               	movlw	59
  4634  0016F0  6F66               	movwf	Bit_Write@num& (0+255),b
  4635  0016F2  0E03               	movlw	3
  4636  0016F4  6F60               	movwf	Check_Seg@pos& (0+255),b
  4637  0016F6  5182               	movf	(VFD_Write@buff+5)& (0+255),w,b
  4638  0016F8  EC3E  F01A         	call	_Check_Seg
  4639  0016FC  0100               	movlb	0	; () banked
  4640  0016FE  6F67               	movwf	Bit_Write@data& (0+255),b
  4641  001700  EC88  F016         	call	_Bit_Write	;wreg free
  4642  001704                     
  4643                           ;main.c: 215:     Bit_Write(&temp, 60, Check_Seg(buff[5], 4));
  4644  001704  0E83               	movlw	low VFD_Write@temp
  4645  001706  0100               	movlb	0	; () banked
  4646  001708  6F64               	movwf	Bit_Write@ptr& (0+255),b
  4647  00170A  0E00               	movlw	high VFD_Write@temp
  4648  00170C  6F65               	movwf	(Bit_Write@ptr+1)& (0+255),b
  4649  00170E  0E3C               	movlw	60
  4650  001710  6F66               	movwf	Bit_Write@num& (0+255),b
  4651  001712  0E04               	movlw	4
  4652  001714  6F60               	movwf	Check_Seg@pos& (0+255),b
  4653  001716  5182               	movf	(VFD_Write@buff+5)& (0+255),w,b
  4654  001718  EC3E  F01A         	call	_Check_Seg
  4655  00171C  0100               	movlb	0	; () banked
  4656  00171E  6F67               	movwf	Bit_Write@data& (0+255),b
  4657  001720  EC88  F016         	call	_Bit_Write	;wreg free
  4658  001724                     
  4659                           ;main.c: 217:     Bit_Write(&temp, 61, Check_Seg(buff[5], 5));
  4660  001724  0E83               	movlw	low VFD_Write@temp
  4661  001726  0100               	movlb	0	; () banked
  4662  001728  6F64               	movwf	Bit_Write@ptr& (0+255),b
  4663  00172A  0E00               	movlw	high VFD_Write@temp
  4664  00172C  6F65               	movwf	(Bit_Write@ptr+1)& (0+255),b
  4665  00172E  0E3D               	movlw	61
  4666  001730  6F66               	movwf	Bit_Write@num& (0+255),b
  4667  001732  0E05               	movlw	5
  4668  001734  6F60               	movwf	Check_Seg@pos& (0+255),b
  4669  001736  5182               	movf	(VFD_Write@buff+5)& (0+255),w,b
  4670  001738  EC3E  F01A         	call	_Check_Seg
  4671  00173C  0100               	movlb	0	; () banked
  4672  00173E  6F67               	movwf	Bit_Write@data& (0+255),b
  4673  001740  EC88  F016         	call	_Bit_Write	;wreg free
  4674  001744                     
  4675                           ;main.c: 218:     Bit_Write(&temp, 62, Check_Seg(buff[5], 6));
  4676  001744  0E83               	movlw	low VFD_Write@temp
  4677  001746  0100               	movlb	0	; () banked
  4678  001748  6F64               	movwf	Bit_Write@ptr& (0+255),b
  4679  00174A  0E00               	movlw	high VFD_Write@temp
  4680  00174C  6F65               	movwf	(Bit_Write@ptr+1)& (0+255),b
  4681  00174E  0E3E               	movlw	62
  4682  001750  6F66               	movwf	Bit_Write@num& (0+255),b
  4683  001752  0E06               	movlw	6
  4684  001754  6F60               	movwf	Check_Seg@pos& (0+255),b
  4685  001756  5182               	movf	(VFD_Write@buff+5)& (0+255),w,b
  4686  001758  EC3E  F01A         	call	_Check_Seg
  4687  00175C  0100               	movlb	0	; () banked
  4688  00175E  6F67               	movwf	Bit_Write@data& (0+255),b
  4689  001760  EC88  F016         	call	_Bit_Write	;wreg free
  4690  001764                     
  4691                           ;main.c: 219:     Bit_Write(&temp, 63, Check_Seg(buff[5], 0));
  4692  001764  0E83               	movlw	low VFD_Write@temp
  4693  001766  0100               	movlb	0	; () banked
  4694  001768  6F64               	movwf	Bit_Write@ptr& (0+255),b
  4695  00176A  0E00               	movlw	high VFD_Write@temp
  4696  00176C  6F65               	movwf	(Bit_Write@ptr+1)& (0+255),b
  4697  00176E  0E3F               	movlw	63
  4698  001770  6F66               	movwf	Bit_Write@num& (0+255),b
  4699  001772  0E00               	movlw	0
  4700  001774  6F60               	movwf	Check_Seg@pos& (0+255),b
  4701  001776  5182               	movf	(VFD_Write@buff+5)& (0+255),w,b
  4702  001778  EC3E  F01A         	call	_Check_Seg
  4703  00177C  0100               	movlb	0	; () banked
  4704  00177E  6F67               	movwf	Bit_Write@data& (0+255),b
  4705  001780  EC88  F016         	call	_Bit_Write	;wreg free
  4706  001784                     
  4707                           ;main.c: 221:     MAX6922_Write(temp);
  4708  001784  C083  F060         	movff	VFD_Write@temp,MAX6922_Write@data
  4709  001788  C084  F061         	movff	VFD_Write@temp+1,MAX6922_Write@data+1
  4710  00178C  C085  F062         	movff	VFD_Write@temp+2,MAX6922_Write@data+2
  4711  001790  C086  F063         	movff	VFD_Write@temp+3,MAX6922_Write@data+3
  4712  001794  C087  F064         	movff	VFD_Write@temp+4,MAX6922_Write@data+4
  4713  001798  C088  F065         	movff	VFD_Write@temp+5,MAX6922_Write@data+5
  4714  00179C  C089  F066         	movff	VFD_Write@temp+6,MAX6922_Write@data+6
  4715  0017A0  C08A  F067         	movff	VFD_Write@temp+7,MAX6922_Write@data+7
  4716  0017A4  EC91  F018         	call	_MAX6922_Write	;wreg free
  4717  0017A8  0012               	return		;funcret
  4718  0017AA                     __end_of_VFD_Write:
  4719                           	callstack 0
  4720                           
  4721 ;; *************** function ___llmod *****************
  4722 ;; Defined at:
  4723 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\llmod.c"
  4724 ;; Parameters:    Size  Location     Type
  4725 ;;  dividend        4   13[BANK0 ] unsigned long 
  4726 ;;  divisor         4   17[BANK0 ] unsigned long 
  4727 ;; Auto vars:     Size  Location     Type
  4728 ;;  counter         1   21[BANK0 ] unsigned char 
  4729 ;; Return value:  Size  Location     Type
  4730 ;;                  4   13[BANK0 ] unsigned long 
  4731 ;; Registers used:
  4732 ;;		wreg, status,2, status,0
  4733 ;; Tracked objects:
  4734 ;;		On entry : 0/0
  4735 ;;		On exit  : 0/0
  4736 ;;		Unchanged: 0/0
  4737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4738 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4739 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4741 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4742 ;;Total ram usage:        9 bytes
  4743 ;; Hardware stack levels used: 1
  4744 ;; Hardware stack levels required when called: 4
  4745 ;; This function calls:
  4746 ;;		Nothing
  4747 ;; This function is called by:
  4748 ;;		_VFD_Write
  4749 ;; This function uses a non-reentrant model
  4750 ;;
  4751                           
  4752                           	psect	text9
  4753  003098                     __ptext9:
  4754                           	callstack 0
  4755  003098                     ___llmod:
  4756                           	callstack 25
  4757  003098  0100               	movlb	0	; () banked
  4758  00309A  5171               	movf	___llmod@divisor& (0+255),w,b
  4759  00309C  1172               	iorwf	(___llmod@divisor+1)& (0+255),w,b
  4760  00309E  1173               	iorwf	(___llmod@divisor+2)& (0+255),w,b
  4761  0030A0  1174               	iorwf	(___llmod@divisor+3)& (0+255),w,b
  4762  0030A2  B4D8               	btfsc	status,2,c
  4763  0030A4  EF56  F018         	goto	u2911
  4764  0030A8  EF58  F018         	goto	u2910
  4765  0030AC                     u2911:
  4766  0030AC  EF88  F018         	goto	l656
  4767  0030B0                     u2910:
  4768  0030B0                     
  4769                           ; BSR set to: 0
  4770  0030B0  0E01               	movlw	1
  4771  0030B2  6F75               	movwf	___llmod@counter& (0+255),b
  4772  0030B4  EF62  F018         	goto	l2856
  4773  0030B8                     l2854:
  4774                           
  4775                           ; BSR set to: 0
  4776  0030B8  90D8               	bcf	status,0,c
  4777  0030BA  3771               	rlcf	___llmod@divisor& (0+255),f,b
  4778  0030BC  3772               	rlcf	(___llmod@divisor+1)& (0+255),f,b
  4779  0030BE  3773               	rlcf	(___llmod@divisor+2)& (0+255),f,b
  4780  0030C0  3774               	rlcf	(___llmod@divisor+3)& (0+255),f,b
  4781  0030C2  2B75               	incf	___llmod@counter& (0+255),f,b
  4782  0030C4                     l2856:
  4783                           
  4784                           ; BSR set to: 0
  4785  0030C4  AF74               	btfss	(___llmod@divisor+3)& (0+255),7,b
  4786  0030C6  EF67  F018         	goto	u2921
  4787  0030CA  EF69  F018         	goto	u2920
  4788  0030CE                     u2921:
  4789  0030CE  EF5C  F018         	goto	l2854
  4790  0030D2                     u2920:
  4791  0030D2                     l2858:
  4792                           
  4793                           ; BSR set to: 0
  4794  0030D2  5171               	movf	___llmod@divisor& (0+255),w,b
  4795  0030D4  5D6D               	subwf	___llmod@dividend& (0+255),w,b
  4796  0030D6  5172               	movf	(___llmod@divisor+1)& (0+255),w,b
  4797  0030D8  596E               	subwfb	(___llmod@dividend+1)& (0+255),w,b
  4798  0030DA  5173               	movf	(___llmod@divisor+2)& (0+255),w,b
  4799  0030DC  596F               	subwfb	(___llmod@dividend+2)& (0+255),w,b
  4800  0030DE  5174               	movf	(___llmod@divisor+3)& (0+255),w,b
  4801  0030E0  5970               	subwfb	(___llmod@dividend+3)& (0+255),w,b
  4802  0030E2  A0D8               	btfss	status,0,c
  4803  0030E4  EF76  F018         	goto	u2931
  4804  0030E8  EF78  F018         	goto	u2930
  4805  0030EC                     u2931:
  4806  0030EC  EF80  F018         	goto	l2862
  4807  0030F0                     u2930:
  4808  0030F0                     
  4809                           ; BSR set to: 0
  4810  0030F0  5171               	movf	___llmod@divisor& (0+255),w,b
  4811  0030F2  5F6D               	subwf	___llmod@dividend& (0+255),f,b
  4812  0030F4  5172               	movf	(___llmod@divisor+1)& (0+255),w,b
  4813  0030F6  5B6E               	subwfb	(___llmod@dividend+1)& (0+255),f,b
  4814  0030F8  5173               	movf	(___llmod@divisor+2)& (0+255),w,b
  4815  0030FA  5B6F               	subwfb	(___llmod@dividend+2)& (0+255),f,b
  4816  0030FC  5174               	movf	(___llmod@divisor+3)& (0+255),w,b
  4817  0030FE  5B70               	subwfb	(___llmod@dividend+3)& (0+255),f,b
  4818  003100                     l2862:
  4819                           
  4820                           ; BSR set to: 0
  4821  003100  90D8               	bcf	status,0,c
  4822  003102  3374               	rrcf	(___llmod@divisor+3)& (0+255),f,b
  4823  003104  3373               	rrcf	(___llmod@divisor+2)& (0+255),f,b
  4824  003106  3372               	rrcf	(___llmod@divisor+1)& (0+255),f,b
  4825  003108  3371               	rrcf	___llmod@divisor& (0+255),f,b
  4826  00310A                     
  4827                           ; BSR set to: 0
  4828  00310A  2F75               	decfsz	___llmod@counter& (0+255),f,b
  4829  00310C  EF69  F018         	goto	l2858
  4830  003110                     l656:
  4831                           
  4832                           ; BSR set to: 0
  4833  003110  C06D  F06D         	movff	___llmod@dividend,?___llmod
  4834  003114  C06E  F06E         	movff	___llmod@dividend+1,?___llmod+1
  4835  003118  C06F  F06F         	movff	___llmod@dividend+2,?___llmod+2
  4836  00311C  C070  F070         	movff	___llmod@dividend+3,?___llmod+3
  4837  003120                     
  4838                           ; BSR set to: 0
  4839  003120  0012               	return		;funcret
  4840  003122                     __end_of___llmod:
  4841                           	callstack 0
  4842                           
  4843 ;; *************** function ___lldiv *****************
  4844 ;; Defined at:
  4845 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__lldiv.c"
  4846 ;; Parameters:    Size  Location     Type
  4847 ;;  dividend        4    0[BANK0 ] unsigned long 
  4848 ;;  divisor         4    4[BANK0 ] unsigned long 
  4849 ;; Auto vars:     Size  Location     Type
  4850 ;;  quotient        4    8[BANK0 ] unsigned long 
  4851 ;;  counter         1   12[BANK0 ] unsigned char 
  4852 ;; Return value:  Size  Location     Type
  4853 ;;                  4    0[BANK0 ] unsigned long 
  4854 ;; Registers used:
  4855 ;;		wreg, status,2, status,0
  4856 ;; Tracked objects:
  4857 ;;		On entry : 0/0
  4858 ;;		On exit  : 0/0
  4859 ;;		Unchanged: 0/0
  4860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4861 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4862 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4864 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4865 ;;Total ram usage:       13 bytes
  4866 ;; Hardware stack levels used: 1
  4867 ;; Hardware stack levels required when called: 4
  4868 ;; This function calls:
  4869 ;;		Nothing
  4870 ;; This function is called by:
  4871 ;;		_VFD_Write
  4872 ;; This function uses a non-reentrant model
  4873 ;;
  4874                           
  4875                           	psect	text10
  4876  002EC0                     __ptext10:
  4877                           	callstack 0
  4878  002EC0                     ___lldiv:
  4879                           	callstack 25
  4880  002EC0  0E00               	movlw	0
  4881  002EC2  0100               	movlb	0	; () banked
  4882  002EC4  6F68               	movwf	___lldiv@quotient& (0+255),b
  4883  002EC6  0E00               	movlw	0
  4884  002EC8  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
  4885  002ECA  0E00               	movlw	0
  4886  002ECC  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
  4887  002ECE  0E00               	movlw	0
  4888  002ED0  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
  4889  002ED2                     
  4890                           ; BSR set to: 0
  4891  002ED2  5164               	movf	___lldiv@divisor& (0+255),w,b
  4892  002ED4  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  4893  002ED6  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  4894  002ED8  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  4895  002EDA  B4D8               	btfsc	status,2,c
  4896  002EDC  EF72  F017         	goto	u2881
  4897  002EE0  EF74  F017         	goto	u2880
  4898  002EE4                     u2881:
  4899  002EE4  EFAA  F017         	goto	l263
  4900  002EE8                     u2880:
  4901  002EE8                     
  4902                           ; BSR set to: 0
  4903  002EE8  0E01               	movlw	1
  4904  002EEA  6F6C               	movwf	___lldiv@counter& (0+255),b
  4905  002EEC  EF7E  F017         	goto	l2836
  4906  002EF0                     l2834:
  4907                           
  4908                           ; BSR set to: 0
  4909  002EF0  90D8               	bcf	status,0,c
  4910  002EF2  3764               	rlcf	___lldiv@divisor& (0+255),f,b
  4911  002EF4  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  4912  002EF6  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  4913  002EF8  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  4914  002EFA  2B6C               	incf	___lldiv@counter& (0+255),f,b
  4915  002EFC                     l2836:
  4916                           
  4917                           ; BSR set to: 0
  4918  002EFC  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  4919  002EFE  EF83  F017         	goto	u2891
  4920  002F02  EF85  F017         	goto	u2890
  4921  002F06                     u2891:
  4922  002F06  EF78  F017         	goto	l2834
  4923  002F0A                     u2890:
  4924  002F0A                     l2838:
  4925                           
  4926                           ; BSR set to: 0
  4927  002F0A  90D8               	bcf	status,0,c
  4928  002F0C  3768               	rlcf	___lldiv@quotient& (0+255),f,b
  4929  002F0E  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  4930  002F10  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  4931  002F12  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  4932  002F14                     
  4933                           ; BSR set to: 0
  4934  002F14  5164               	movf	___lldiv@divisor& (0+255),w,b
  4935  002F16  5D60               	subwf	___lldiv@dividend& (0+255),w,b
  4936  002F18  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
  4937  002F1A  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  4938  002F1C  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
  4939  002F1E  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  4940  002F20  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
  4941  002F22  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  4942  002F24  A0D8               	btfss	status,0,c
  4943  002F26  EF97  F017         	goto	u2901
  4944  002F2A  EF99  F017         	goto	u2900
  4945  002F2E                     u2901:
  4946  002F2E  EFA2  F017         	goto	l2846
  4947  002F32                     u2900:
  4948  002F32                     
  4949                           ; BSR set to: 0
  4950  002F32  5164               	movf	___lldiv@divisor& (0+255),w,b
  4951  002F34  5F60               	subwf	___lldiv@dividend& (0+255),f,b
  4952  002F36  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
  4953  002F38  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  4954  002F3A  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
  4955  002F3C  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  4956  002F3E  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
  4957  002F40  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  4958  002F42                     
  4959                           ; BSR set to: 0
  4960  002F42  8168               	bsf	___lldiv@quotient& (0+255),0,b
  4961  002F44                     l2846:
  4962                           
  4963                           ; BSR set to: 0
  4964  002F44  90D8               	bcf	status,0,c
  4965  002F46  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  4966  002F48  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  4967  002F4A  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  4968  002F4C  3364               	rrcf	___lldiv@divisor& (0+255),f,b
  4969  002F4E                     
  4970                           ; BSR set to: 0
  4971  002F4E  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
  4972  002F50  EF85  F017         	goto	l2838
  4973  002F54                     l263:
  4974                           
  4975                           ; BSR set to: 0
  4976  002F54  C068  F060         	movff	___lldiv@quotient,?___lldiv
  4977  002F58  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
  4978  002F5C  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
  4979  002F60  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
  4980  002F64                     
  4981                           ; BSR set to: 0
  4982  002F64  0012               	return		;funcret
  4983  002F66                     __end_of___lldiv:
  4984                           	callstack 0
  4985                           
  4986 ;; *************** function _MAX6922_Write *****************
  4987 ;; Defined at:
  4988 ;;		line 243 in file "main.c"
  4989 ;; Parameters:    Size  Location     Type
  4990 ;;  data            8    0[BANK0 ] unsigned long long 
  4991 ;; Auto vars:     Size  Location     Type
  4992 ;;  i               2   16[BANK0 ] short 
  4993 ;; Return value:  Size  Location     Type
  4994 ;;                  1    wreg      void 
  4995 ;; Registers used:
  4996 ;;		wreg, status,2, status,0
  4997 ;; Tracked objects:
  4998 ;;		On entry : 0/0
  4999 ;;		On exit  : 0/0
  5000 ;;		Unchanged: 0/0
  5001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5002 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5003 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5004 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5005 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5006 ;;Total ram usage:       18 bytes
  5007 ;; Hardware stack levels used: 1
  5008 ;; Hardware stack levels required when called: 4
  5009 ;; This function calls:
  5010 ;;		Nothing
  5011 ;; This function is called by:
  5012 ;;		_VFD_Write
  5013 ;; This function uses a non-reentrant model
  5014 ;;
  5015                           
  5016                           	psect	text11
  5017  003122                     __ptext11:
  5018                           	callstack 0
  5019  003122                     _MAX6922_Write:
  5020                           	callstack 25
  5021  003122                     
  5022                           ;main.c: 243: void MAX6922_Write(uint64_t data);main.c: 244: {;main.c: 245:     int16_t 
      +                          i;;main.c: 247:     for (i = 0; i < 64; i++) {
  5023  003122  0E00               	movlw	0
  5024  003124  0100               	movlb	0	; () banked
  5025  003126  6F71               	movwf	(MAX6922_Write@i+1)& (0+255),b
  5026  003128  0E00               	movlw	0
  5027  00312A  6F70               	movwf	MAX6922_Write@i& (0+255),b
  5028  00312C                     l2740:
  5029                           
  5030                           ; BSR set to: 0
  5031                           ;main.c: 248:         LATC5 = data >> i;
  5032  00312C  5170               	movf	MAX6922_Write@i& (0+255),w,b
  5033  00312E  C060  F068         	movff	MAX6922_Write@data,??_MAX6922_Write
  5034  003132  C061  F069         	movff	MAX6922_Write@data+1,??_MAX6922_Write+1
  5035  003136  C062  F06A         	movff	MAX6922_Write@data+2,??_MAX6922_Write+2
  5036  00313A  C063  F06B         	movff	MAX6922_Write@data+3,??_MAX6922_Write+3
  5037  00313E  C064  F06C         	movff	MAX6922_Write@data+4,??_MAX6922_Write+4
  5038  003142  C065  F06D         	movff	MAX6922_Write@data+5,??_MAX6922_Write+5
  5039  003146  C066  F06E         	movff	MAX6922_Write@data+6,??_MAX6922_Write+6
  5040  00314A  C067  F06F         	movff	MAX6922_Write@data+7,??_MAX6922_Write+7
  5041  00314E  2AE8               	incf	wreg,f,c
  5042  003150  EFB3  F018         	goto	u2720
  5043  003154                     u2725:
  5044  003154  90D8               	bcf	status,0,c
  5045  003156  336F               	rrcf	(??_MAX6922_Write+7)& (0+255),f,b
  5046  003158  336E               	rrcf	(??_MAX6922_Write+6)& (0+255),f,b
  5047  00315A  336D               	rrcf	(??_MAX6922_Write+5)& (0+255),f,b
  5048  00315C  336C               	rrcf	(??_MAX6922_Write+4)& (0+255),f,b
  5049  00315E  336B               	rrcf	(??_MAX6922_Write+3)& (0+255),f,b
  5050  003160  336A               	rrcf	(??_MAX6922_Write+2)& (0+255),f,b
  5051  003162  3369               	rrcf	(??_MAX6922_Write+1)& (0+255),f,b
  5052  003164  3368               	rrcf	??_MAX6922_Write& (0+255),f,b
  5053  003166                     u2720:
  5054  003166  2EE8               	decfsz	wreg,f,c
  5055  003168  EFAA  F018         	goto	u2725
  5056  00316C  3168               	rrcf	??_MAX6922_Write& (0+255),w,b
  5057  00316E  B0D8               	btfsc	status,0,c
  5058  003170  EFBC  F018         	goto	u2731
  5059  003174  EFBF  F018         	goto	u2730
  5060  003178                     u2731:
  5061  003178  8A84               	bsf	3972,5,c	;volatile
  5062  00317A  EFC0  F018         	goto	u2745
  5063  00317E                     u2730:
  5064  00317E  9A84               	bcf	3972,5,c	;volatile
  5065  003180                     u2745:
  5066  003180                     
  5067                           ;main.c: 249:         LATC7 = 0;
  5068  003180  9E84               	bcf	3972,7,c	;volatile
  5069  003182                     
  5070                           ;main.c: 250:         LATC7 = 1;
  5071  003182  8E84               	bsf	3972,7,c	;volatile
  5072  003184                     
  5073                           ;main.c: 251:     }
  5074  003184  0100               	movlb	0	; () banked
  5075  003186  4B70               	infsnz	MAX6922_Write@i& (0+255),f,b
  5076  003188  2B71               	incf	(MAX6922_Write@i+1)& (0+255),f,b
  5077  00318A                     
  5078                           ; BSR set to: 0
  5079  00318A  BF71               	btfsc	(MAX6922_Write@i+1)& (0+255),7,b
  5080  00318C  EFD1  F018         	goto	u2751
  5081  003190  5171               	movf	(MAX6922_Write@i+1)& (0+255),w,b
  5082  003192  E109               	bnz	u2750
  5083  003194  0E40               	movlw	64
  5084  003196  5D70               	subwf	MAX6922_Write@i& (0+255),w,b
  5085  003198  A0D8               	btfss	status,0,c
  5086  00319A  EFD1  F018         	goto	u2751
  5087  00319E  EFD3  F018         	goto	u2750
  5088  0031A2                     u2751:
  5089  0031A2  EF96  F018         	goto	l2740
  5090  0031A6                     u2750:
  5091  0031A6                     
  5092                           ; BSR set to: 0
  5093                           ;main.c: 253:     LATC6 = 0;
  5094  0031A6  9C84               	bcf	3972,6,c	;volatile
  5095                           
  5096                           ;main.c: 254:     LATC6 = 1;
  5097  0031A8  8C84               	bsf	3972,6,c	;volatile
  5098  0031AA                     
  5099                           ; BSR set to: 0
  5100  0031AA  0012               	return		;funcret
  5101  0031AC                     __end_of_MAX6922_Write:
  5102                           	callstack 0
  5103                           
  5104 ;; *************** function _Check_Seg *****************
  5105 ;; Defined at:
  5106 ;;		line 323 in file "main.c"
  5107 ;; Parameters:    Size  Location     Type
  5108 ;;  num             1    wreg     unsigned char 
  5109 ;;  pos             1    0[BANK0 ] unsigned char 
  5110 ;; Auto vars:     Size  Location     Type
  5111 ;;  num             1    3[BANK0 ] unsigned char 
  5112 ;; Return value:  Size  Location     Type
  5113 ;;                  1    wreg      unsigned char 
  5114 ;; Registers used:
  5115 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  5116 ;; Tracked objects:
  5117 ;;		On entry : 0/0
  5118 ;;		On exit  : 0/0
  5119 ;;		Unchanged: 0/0
  5120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5121 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5122 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5123 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5124 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5125 ;;Total ram usage:        4 bytes
  5126 ;; Hardware stack levels used: 1
  5127 ;; Hardware stack levels required when called: 4
  5128 ;; This function calls:
  5129 ;;		Nothing
  5130 ;; This function is called by:
  5131 ;;		_VFD_Write
  5132 ;; This function uses a non-reentrant model
  5133 ;;
  5134                           
  5135                           	psect	text12
  5136  00347C                     __ptext12:
  5137                           	callstack 0
  5138  00347C                     _Check_Seg:
  5139                           	callstack 25
  5140                           
  5141                           ; BSR set to: 0
  5142                           ;incstack = 0
  5143                           ;Check_Seg@num stored from wreg
  5144  00347C  0100               	movlb	0	; () banked
  5145  00347E  6F63               	movwf	Check_Seg@num& (0+255),b
  5146  003480                     
  5147                           ;main.c: 323: uint8_t Check_Seg(uint8_t num, uint8_t pos);main.c: 324: {;main.c: 326:   
      +                            static const uint8_t data[10][8] = {;main.c: 339:     return data[num][pos];
  5148  003480  0100               	movlb	0	; () banked
  5149  003482  5163               	movf	Check_Seg@num& (0+255),w,b
  5150  003484  0D08               	mullw	8
  5151  003486  0E01               	movlw	low Check_Seg@data
  5152  003488  6F61               	movwf	??_Check_Seg& (0+255),b
  5153  00348A  0E0F               	movlw	high Check_Seg@data
  5154  00348C  6F62               	movwf	(??_Check_Seg+1)& (0+255),b
  5155  00348E  50F3               	movf	243,w,c
  5156  003490  2761               	addwf	??_Check_Seg& (0+255),f,b
  5157  003492  50F4               	movf	244,w,c
  5158  003494  2362               	addwfc	(??_Check_Seg+1)& (0+255),f,b
  5159  003496  5160               	movf	Check_Seg@pos& (0+255),w,b
  5160  003498  2761               	addwf	??_Check_Seg& (0+255),f,b
  5161  00349A  0E00               	movlw	0
  5162  00349C  2362               	addwfc	(??_Check_Seg+1)& (0+255),f,b
  5163  00349E  C061  FFF6         	movff	??_Check_Seg,tblptrl
  5164  0034A2  C062  FFF7         	movff	??_Check_Seg+1,tblptrh
  5165  0034A6                     	if	0	;tblptru may be non-zero
  5166  0034A6                     	endif
  5167  0034A6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5168  0034A6  0E00               	movlw	low (__mediumconst shr (0+16))
  5169  0034A8  6EF8               	movwf	tblptru,c
  5170  0034AA                     	endif
  5171  0034AA  0008               	tblrd		*
  5172  0034AC  50F5               	movf	tablat,w,c
  5173  0034AE                     
  5174                           ; BSR set to: 0
  5175  0034AE  0012               	return		;funcret
  5176  0034B0                     __end_of_Check_Seg:
  5177                           	callstack 0
  5178                           
  5179 ;; *************** function _Bit_Write *****************
  5180 ;; Defined at:
  5181 ;;		line 343 in file "main.c"
  5182 ;; Parameters:    Size  Location     Type
  5183 ;;  ptr             2    4[BANK0 ] PTR unsigned long long 
  5184 ;;		 -> VFD_Write@temp(8), 
  5185 ;;  num             1    6[BANK0 ] unsigned char 
  5186 ;;  data            1    7[BANK0 ] unsigned char 
  5187 ;; Auto vars:     Size  Location     Type
  5188 ;;		None
  5189 ;; Return value:  Size  Location     Type
  5190 ;;                  1    wreg      void 
  5191 ;; Registers used:
  5192 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5193 ;; Tracked objects:
  5194 ;;		On entry : 0/0
  5195 ;;		On exit  : 0/0
  5196 ;;		Unchanged: 0/0
  5197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5198 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5200 ;;      Temps:          0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5201 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5202 ;;Total ram usage:       21 bytes
  5203 ;; Hardware stack levels used: 1
  5204 ;; Hardware stack levels required when called: 4
  5205 ;; This function calls:
  5206 ;;		Nothing
  5207 ;; This function is called by:
  5208 ;;		_VFD_Write
  5209 ;; This function uses a non-reentrant model
  5210 ;;
  5211                           
  5212                           	psect	text13
  5213  002D10                     __ptext13:
  5214                           	callstack 0
  5215  002D10                     _Bit_Write:
  5216                           	callstack 25
  5217  002D10                     
  5218                           ;main.c: 343: void Bit_Write(uint64_t *ptr, uint8_t num, uint8_t data);main.c: 344: {;ma
      +                          in.c: 345:     if (ptr == ((void*)0)) return;
  5219  002D10  0100               	movlb	0	; () banked
  5220  002D12  5164               	movf	Bit_Write@ptr& (0+255),w,b
  5221  002D14  1165               	iorwf	(Bit_Write@ptr+1)& (0+255),w,b
  5222  002D16  A4D8               	btfss	status,2,c
  5223  002D18  EF90  F016         	goto	u2681
  5224  002D1C  EF92  F016         	goto	u2680
  5225  002D20                     u2681:
  5226  002D20  EF94  F016         	goto	l2728
  5227  002D24                     u2680:
  5228  002D24  EF0A  F017         	goto	l169
  5229  002D28                     l2728:
  5230                           
  5231                           ; BSR set to: 0
  5232                           ;main.c: 347:     if (data == 0) {
  5233  002D28  5167               	movf	Bit_Write@data& (0+255),w,b
  5234  002D2A  A4D8               	btfss	status,2,c
  5235  002D2C  EF9A  F016         	goto	u2691
  5236  002D30  EF9C  F016         	goto	u2690
  5237  002D34                     u2691:
  5238  002D34  EFDC  F016         	goto	l2732
  5239  002D38                     u2690:
  5240  002D38                     
  5241                           ; BSR set to: 0
  5242                           ;main.c: 348:         (*ptr) &= ~((uint64_t)0x01 << num);
  5243  002D38  C066  F068         	movff	Bit_Write@num,??_Bit_Write
  5244  002D3C  0E01               	movlw	1
  5245  002D3E  6F69               	movwf	(??_Bit_Write+1)& (0+255),b
  5246  002D40  6B6A               	clrf	(??_Bit_Write+2)& (0+255),b
  5247  002D42  6B6B               	clrf	(??_Bit_Write+3)& (0+255),b
  5248  002D44  6B6C               	clrf	(??_Bit_Write+4)& (0+255),b
  5249  002D46  6B6D               	clrf	(??_Bit_Write+5)& (0+255),b
  5250  002D48  6B6E               	clrf	(??_Bit_Write+6)& (0+255),b
  5251  002D4A  6B6F               	clrf	(??_Bit_Write+7)& (0+255),b
  5252  002D4C  6B70               	clrf	(??_Bit_Write+8)& (0+255),b
  5253  002D4E  2B68               	incf	??_Bit_Write& (0+255),f,b
  5254  002D50  EFB3  F016         	goto	u2700
  5255  002D54                     u2705:
  5256  002D54  90D8               	bcf	status,0,c
  5257  002D56  3769               	rlcf	(??_Bit_Write+1)& (0+255),f,b
  5258  002D58  376A               	rlcf	(??_Bit_Write+2)& (0+255),f,b
  5259  002D5A  376B               	rlcf	(??_Bit_Write+3)& (0+255),f,b
  5260  002D5C  376C               	rlcf	(??_Bit_Write+4)& (0+255),f,b
  5261  002D5E  376D               	rlcf	(??_Bit_Write+5)& (0+255),f,b
  5262  002D60  376E               	rlcf	(??_Bit_Write+6)& (0+255),f,b
  5263  002D62  376F               	rlcf	(??_Bit_Write+7)& (0+255),f,b
  5264  002D64  3770               	rlcf	(??_Bit_Write+8)& (0+255),f,b
  5265  002D66                     u2700:
  5266  002D66  2F68               	decfsz	??_Bit_Write& (0+255),f,b
  5267  002D68  EFAA  F016         	goto	u2705
  5268  002D6C  1D69               	comf	(??_Bit_Write+1)& (0+255),w,b
  5269  002D6E  6F71               	movwf	(??_Bit_Write+9)& (0+255),b
  5270  002D70  1D6A               	comf	(??_Bit_Write+2)& (0+255),w,b
  5271  002D72  6F72               	movwf	(??_Bit_Write+10)& (0+255),b
  5272  002D74  1D6B               	comf	(??_Bit_Write+3)& (0+255),w,b
  5273  002D76  6F73               	movwf	(??_Bit_Write+11)& (0+255),b
  5274  002D78  1D6C               	comf	(??_Bit_Write+4)& (0+255),w,b
  5275  002D7A  6F74               	movwf	(??_Bit_Write+12)& (0+255),b
  5276  002D7C  1D6D               	comf	(??_Bit_Write+5)& (0+255),w,b
  5277  002D7E  6F75               	movwf	(??_Bit_Write+13)& (0+255),b
  5278  002D80  1D6E               	comf	(??_Bit_Write+6)& (0+255),w,b
  5279  002D82  6F76               	movwf	(??_Bit_Write+14)& (0+255),b
  5280  002D84  1D6F               	comf	(??_Bit_Write+7)& (0+255),w,b
  5281  002D86  6F77               	movwf	(??_Bit_Write+15)& (0+255),b
  5282  002D88  1D70               	comf	(??_Bit_Write+8)& (0+255),w,b
  5283  002D8A  6F78               	movwf	(??_Bit_Write+16)& (0+255),b
  5284  002D8C  C064  FFD9         	movff	Bit_Write@ptr,fsr2l
  5285  002D90  C065  FFDA         	movff	Bit_Write@ptr+1,fsr2h
  5286  002D94  5171               	movf	(??_Bit_Write+9)& (0+255),w,b
  5287  002D96  16DE               	andwf	postinc2,f,c
  5288  002D98  5172               	movf	(??_Bit_Write+10)& (0+255),w,b
  5289  002D9A  16DE               	andwf	postinc2,f,c
  5290  002D9C  5173               	movf	(??_Bit_Write+11)& (0+255),w,b
  5291  002D9E  16DE               	andwf	postinc2,f,c
  5292  002DA0  5174               	movf	(??_Bit_Write+12)& (0+255),w,b
  5293  002DA2  16DE               	andwf	postinc2,f,c
  5294  002DA4  5175               	movf	(??_Bit_Write+13)& (0+255),w,b
  5295  002DA6  16DE               	andwf	postinc2,f,c
  5296  002DA8  5176               	movf	(??_Bit_Write+14)& (0+255),w,b
  5297  002DAA  16DE               	andwf	postinc2,f,c
  5298  002DAC  5177               	movf	(??_Bit_Write+15)& (0+255),w,b
  5299  002DAE  16DE               	andwf	postinc2,f,c
  5300  002DB0  5178               	movf	(??_Bit_Write+16)& (0+255),w,b
  5301  002DB2  16DE               	andwf	postinc2,f,c
  5302                           
  5303                           ;main.c: 349:     }
  5304  002DB4  EF0A  F017         	goto	l169
  5305  002DB8                     l2732:
  5306                           
  5307                           ; BSR set to: 0
  5308                           ;main.c: 351:         (*ptr) |= ((uint64_t)0x01 << num);
  5309  002DB8  C066  F068         	movff	Bit_Write@num,??_Bit_Write
  5310  002DBC  0E01               	movlw	1
  5311  002DBE  6F69               	movwf	(??_Bit_Write+1)& (0+255),b
  5312  002DC0  6B6A               	clrf	(??_Bit_Write+2)& (0+255),b
  5313  002DC2  6B6B               	clrf	(??_Bit_Write+3)& (0+255),b
  5314  002DC4  6B6C               	clrf	(??_Bit_Write+4)& (0+255),b
  5315  002DC6  6B6D               	clrf	(??_Bit_Write+5)& (0+255),b
  5316  002DC8  6B6E               	clrf	(??_Bit_Write+6)& (0+255),b
  5317  002DCA  6B6F               	clrf	(??_Bit_Write+7)& (0+255),b
  5318  002DCC  6B70               	clrf	(??_Bit_Write+8)& (0+255),b
  5319  002DCE  2B68               	incf	??_Bit_Write& (0+255),f,b
  5320  002DD0  EFF3  F016         	goto	u2710
  5321  002DD4                     u2715:
  5322  002DD4  90D8               	bcf	status,0,c
  5323  002DD6  3769               	rlcf	(??_Bit_Write+1)& (0+255),f,b
  5324  002DD8  376A               	rlcf	(??_Bit_Write+2)& (0+255),f,b
  5325  002DDA  376B               	rlcf	(??_Bit_Write+3)& (0+255),f,b
  5326  002DDC  376C               	rlcf	(??_Bit_Write+4)& (0+255),f,b
  5327  002DDE  376D               	rlcf	(??_Bit_Write+5)& (0+255),f,b
  5328  002DE0  376E               	rlcf	(??_Bit_Write+6)& (0+255),f,b
  5329  002DE2  376F               	rlcf	(??_Bit_Write+7)& (0+255),f,b
  5330  002DE4  3770               	rlcf	(??_Bit_Write+8)& (0+255),f,b
  5331  002DE6                     u2710:
  5332  002DE6  2F68               	decfsz	??_Bit_Write& (0+255),f,b
  5333  002DE8  EFEA  F016         	goto	u2715
  5334  002DEC  C064  FFD9         	movff	Bit_Write@ptr,fsr2l
  5335  002DF0  C065  FFDA         	movff	Bit_Write@ptr+1,fsr2h
  5336  002DF4  5169               	movf	(??_Bit_Write+1)& (0+255),w,b
  5337  002DF6  12DE               	iorwf	postinc2,f,c
  5338  002DF8  516A               	movf	(??_Bit_Write+2)& (0+255),w,b
  5339  002DFA  12DE               	iorwf	postinc2,f,c
  5340  002DFC  516B               	movf	(??_Bit_Write+3)& (0+255),w,b
  5341  002DFE  12DE               	iorwf	postinc2,f,c
  5342  002E00  516C               	movf	(??_Bit_Write+4)& (0+255),w,b
  5343  002E02  12DE               	iorwf	postinc2,f,c
  5344  002E04  516D               	movf	(??_Bit_Write+5)& (0+255),w,b
  5345  002E06  12DE               	iorwf	postinc2,f,c
  5346  002E08  516E               	movf	(??_Bit_Write+6)& (0+255),w,b
  5347  002E0A  12DE               	iorwf	postinc2,f,c
  5348  002E0C  516F               	movf	(??_Bit_Write+7)& (0+255),w,b
  5349  002E0E  12DE               	iorwf	postinc2,f,c
  5350  002E10  5170               	movf	(??_Bit_Write+8)& (0+255),w,b
  5351  002E12  12DE               	iorwf	postinc2,f,c
  5352  002E14                     l169:
  5353                           
  5354                           ; BSR set to: 0
  5355  002E14  0012               	return		;funcret
  5356  002E16                     __end_of_Bit_Write:
  5357                           	callstack 0
  5358                           
  5359 ;; *************** function _T0_int *****************
  5360 ;; Defined at:
  5361 ;;		line 375 in file "main.c"
  5362 ;; Parameters:    Size  Location     Type
  5363 ;;  val             2    0[BANK0 ] short 
  5364 ;; Auto vars:     Size  Location     Type
  5365 ;;		None
  5366 ;; Return value:  Size  Location     Type
  5367 ;;                  1    wreg      _Bool 
  5368 ;; Registers used:
  5369 ;;		wreg, status,2, status,0
  5370 ;; Tracked objects:
  5371 ;;		On entry : 0/0
  5372 ;;		On exit  : 0/0
  5373 ;;		Unchanged: 0/0
  5374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5375 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5377 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5378 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5379 ;;Total ram usage:        3 bytes
  5380 ;; Hardware stack levels used: 1
  5381 ;; Hardware stack levels required when called: 4
  5382 ;; This function calls:
  5383 ;;		Nothing
  5384 ;; This function is called by:
  5385 ;;		_main
  5386 ;; This function uses a non-reentrant model
  5387 ;;
  5388                           
  5389                           	psect	text14
  5390  0033B6                     __ptext14:
  5391                           	callstack 0
  5392  0033B6                     _T0_int:
  5393                           	callstack 26
  5394  0033B6                     
  5395                           ;main.c: 375: _Bool T0_int(int16_t val);main.c: 376: {;main.c: 377:     static uint8_t f
      +                          lag = 0;;main.c: 378:     static int16_t cnt = 0;;main.c: 380:     if (flag != g_t0_f) {
  5396  0033B6  0100               	movlb	0	; () banked
  5397  0033B8  51C4               	movf	T0_int@flag& (0+255),w,b
  5398  0033BA  1843               	xorwf	_g_t0_f^0,w,c
  5399  0033BC  B4D8               	btfsc	status,2,c
  5400  0033BE  EFE3  F019         	goto	u2941
  5401  0033C2  EFE5  F019         	goto	u2940
  5402  0033C6                     u2941:
  5403  0033C6  EFFF  F019         	goto	l2908
  5404  0033CA                     u2940:
  5405  0033CA                     
  5406                           ; BSR set to: 0
  5407                           ;main.c: 381:         flag = g_t0_f;
  5408  0033CA  C043  F0C4         	movff	_g_t0_f,T0_int@flag
  5409  0033CE                     
  5410                           ; BSR set to: 0
  5411                           ;main.c: 382:         cnt++;
  5412  0033CE  4BC0               	infsnz	T0_int@cnt& (0+255),f,b
  5413  0033D0  2BC1               	incf	(T0_int@cnt+1)& (0+255),f,b
  5414  0033D2                     
  5415                           ; BSR set to: 0
  5416                           ;main.c: 383:         if (cnt >= val) {
  5417  0033D2  5160               	movf	T0_int@val& (0+255),w,b
  5418  0033D4  5DC0               	subwf	T0_int@cnt& (0+255),w,b
  5419  0033D6  51C1               	movf	(T0_int@cnt+1)& (0+255),w,b
  5420  0033D8  0A80               	xorlw	128
  5421  0033DA  6F62               	movwf	??_T0_int& (0+255),b
  5422  0033DC  5161               	movf	(T0_int@val+1)& (0+255),w,b
  5423  0033DE  0A80               	xorlw	128
  5424  0033E0  5962               	subwfb	??_T0_int& (0+255),w,b
  5425  0033E2  A0D8               	btfss	status,0,c
  5426  0033E4  EFF6  F019         	goto	u2951
  5427  0033E8  EFF8  F019         	goto	u2950
  5428  0033EC                     u2951:
  5429  0033EC  EFFF  F019         	goto	l2908
  5430  0033F0                     u2950:
  5431  0033F0                     
  5432                           ; BSR set to: 0
  5433                           ;main.c: 384:             cnt = 0;
  5434  0033F0  0E00               	movlw	0
  5435  0033F2  6FC1               	movwf	(T0_int@cnt+1)& (0+255),b
  5436  0033F4  0E00               	movlw	0
  5437  0033F6  6FC0               	movwf	T0_int@cnt& (0+255),b
  5438  0033F8                     
  5439                           ; BSR set to: 0
  5440                           ;main.c: 385:             return 1;
  5441  0033F8  0E01               	movlw	1
  5442  0033FA  EF00  F01A         	goto	l188
  5443  0033FE                     l2908:
  5444                           
  5445                           ; BSR set to: 0
  5446                           ;main.c: 389:     return 0;
  5447  0033FE  0E00               	movlw	0
  5448  003400                     l188:
  5449                           
  5450                           ; BSR set to: 0
  5451  003400  0012               	return		;funcret
  5452  003402                     __end_of_T0_int:
  5453                           	callstack 0
  5454                           
  5455 ;; *************** function _Duty_Controll *****************
  5456 ;; Defined at:
  5457 ;;		line 225 in file "main.c"
  5458 ;; Parameters:    Size  Location     Type
  5459 ;;		None
  5460 ;; Auto vars:     Size  Location     Type
  5461 ;;		None
  5462 ;; Return value:  Size  Location     Type
  5463 ;;                  1    wreg      void 
  5464 ;; Registers used:
  5465 ;;		wreg, status,2, status,0, cstack
  5466 ;; Tracked objects:
  5467 ;;		On entry : 0/0
  5468 ;;		On exit  : 0/0
  5469 ;;		Unchanged: 0/0
  5470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5474 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5475 ;;Total ram usage:        0 bytes
  5476 ;; Hardware stack levels used: 1
  5477 ;; Hardware stack levels required when called: 5
  5478 ;; This function calls:
  5479 ;;		_Set_PWM_Duty
  5480 ;; This function is called by:
  5481 ;;		_main
  5482 ;; This function uses a non-reentrant model
  5483 ;;
  5484                           
  5485                           	psect	text15
  5486  003402                     __ptext15:
  5487                           	callstack 0
  5488  003402                     _Duty_Controll:
  5489                           	callstack 25
  5490  003402                     
  5491                           ;main.c: 227:     static uint16_t cnt = 0;;main.c: 228:     static const uint16_t cnt_li
      +                          mit = 0x0100;;main.c: 230:     if (RB3) {
  5492  003402  A68D               	btfss	3981,3,c	;volatile
  5493  003404  EF06  F01A         	goto	u2961
  5494  003408  EF08  F01A         	goto	u2960
  5495  00340C                     u2961:
  5496  00340C  EF15  F01A         	goto	l2918
  5497  003410                     u2960:
  5498  003410                     
  5499                           ;main.c: 231:         if (cnt < cnt_limit) {
  5500  003410  0100               	movlb	0	; () banked
  5501  003412  05C3               	decf	(Duty_Controll@cnt+1)& (0+255),w,b
  5502  003414  B0D8               	btfsc	status,0,c
  5503  003416  EF0F  F01A         	goto	u2971
  5504  00341A  EF11  F01A         	goto	u2970
  5505  00341E                     u2971:
  5506  00341E  EF1A  F01A         	goto	l2920
  5507  003422                     u2970:
  5508  003422                     
  5509                           ; BSR set to: 0
  5510                           ;main.c: 232:             cnt++;
  5511  003422  4BC2               	infsnz	Duty_Controll@cnt& (0+255),f,b
  5512  003424  2BC3               	incf	(Duty_Controll@cnt+1)& (0+255),f,b
  5513  003426  EF1A  F01A         	goto	l2920
  5514  00342A                     l2918:
  5515                           
  5516                           ;main.c: 236:         cnt = 0;
  5517  00342A  0E00               	movlw	0
  5518  00342C  0100               	movlb	0	; () banked
  5519  00342E  6FC3               	movwf	(Duty_Controll@cnt+1)& (0+255),b
  5520  003430  0E00               	movlw	0
  5521  003432  6FC2               	movwf	Duty_Controll@cnt& (0+255),b
  5522  003434                     l2920:
  5523                           
  5524                           ; BSR set to: 0
  5525                           ;main.c: 239:     Set_PWM_Duty(3, cnt);
  5526  003434  C0C2  F060         	movff	Duty_Controll@cnt,Set_PWM_Duty@duty
  5527  003438  C0C3  F061         	movff	Duty_Controll@cnt+1,Set_PWM_Duty@duty+1
  5528  00343C  0E03               	movlw	3
  5529  00343E  EC1A  F019         	call	_Set_PWM_Duty
  5530  003442  0012               	return		;funcret
  5531  003444                     __end_of_Duty_Controll:
  5532                           	callstack 0
  5533                           
  5534 ;; *************** function _Set_PWM_Duty *****************
  5535 ;; Defined at:
  5536 ;;		line 356 in file "main.c"
  5537 ;; Parameters:    Size  Location     Type
  5538 ;;  ch              1    wreg     unsigned char 
  5539 ;;  duty            2    0[BANK0 ] short 
  5540 ;; Auto vars:     Size  Location     Type
  5541 ;;  ch              1    4[BANK0 ] unsigned char 
  5542 ;; Return value:  Size  Location     Type
  5543 ;;                  1    wreg      void 
  5544 ;; Registers used:
  5545 ;;		wreg, status,2, status,0
  5546 ;; Tracked objects:
  5547 ;;		On entry : 0/0
  5548 ;;		On exit  : 0/0
  5549 ;;		Unchanged: 0/0
  5550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5551 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5552 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5553 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5554 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5555 ;;Total ram usage:        5 bytes
  5556 ;; Hardware stack levels used: 1
  5557 ;; Hardware stack levels required when called: 4
  5558 ;; This function calls:
  5559 ;;		Nothing
  5560 ;; This function is called by:
  5561 ;;		_init
  5562 ;;		_Duty_Controll
  5563 ;; This function uses a non-reentrant model
  5564 ;;
  5565                           
  5566                           	psect	text16
  5567  003234                     __ptext16:
  5568                           	callstack 0
  5569  003234                     _Set_PWM_Duty:
  5570                           	callstack 25
  5571                           
  5572                           ;incstack = 0
  5573                           ;Set_PWM_Duty@ch stored from wreg
  5574  003234  0100               	movlb	0	; () banked
  5575  003236  6F64               	movwf	Set_PWM_Duty@ch& (0+255),b
  5576  003238                     
  5577                           ;main.c: 356: void Set_PWM_Duty(uint8_t ch, int16_t duty);main.c: 357: {;main.c: 358:   
      +                            switch (ch) {
  5578  003238  EF3E  F019         	goto	l2708
  5579  00323C                     l2698:
  5580                           
  5581                           ; BSR set to: 0
  5582                           ;main.c: 360:             PWM3DCH = duty >> 2;
  5583  00323C  C060  F062         	movff	Set_PWM_Duty@duty,??_Set_PWM_Duty
  5584  003240  C061  F063         	movff	Set_PWM_Duty@duty+1,??_Set_PWM_Duty+1
  5585  003244  3563               	rlcf	(??_Set_PWM_Duty+1)& (0+255),w,b
  5586  003246  3363               	rrcf	(??_Set_PWM_Duty+1)& (0+255),f,b
  5587  003248  3362               	rrcf	??_Set_PWM_Duty& (0+255),f,b
  5588  00324A  3563               	rlcf	(??_Set_PWM_Duty+1)& (0+255),w,b
  5589  00324C  3363               	rrcf	(??_Set_PWM_Duty+1)& (0+255),f,b
  5590  00324E  3362               	rrcf	??_Set_PWM_Duty& (0+255),f,b
  5591  003250  5162               	movf	??_Set_PWM_Duty& (0+255),w,b
  5592  003252  6EA3               	movwf	163,c	;volatile
  5593  003254                     
  5594                           ; BSR set to: 0
  5595                           ;main.c: 361:             PWM3DCL = duty;
  5596  003254  C060  FFA2         	movff	Set_PWM_Duty@duty,4002	;volatile
  5597                           
  5598                           ;main.c: 362:             break;
  5599  003258  EF54  F019         	goto	l179
  5600  00325C                     l2702:
  5601                           
  5602                           ; BSR set to: 0
  5603                           ;main.c: 365:             PWM4DCH = duty >> 2;
  5604  00325C  C060  F062         	movff	Set_PWM_Duty@duty,??_Set_PWM_Duty
  5605  003260  C061  F063         	movff	Set_PWM_Duty@duty+1,??_Set_PWM_Duty+1
  5606  003264  3563               	rlcf	(??_Set_PWM_Duty+1)& (0+255),w,b
  5607  003266  3363               	rrcf	(??_Set_PWM_Duty+1)& (0+255),f,b
  5608  003268  3362               	rrcf	??_Set_PWM_Duty& (0+255),f,b
  5609  00326A  3563               	rlcf	(??_Set_PWM_Duty+1)& (0+255),w,b
  5610  00326C  3363               	rrcf	(??_Set_PWM_Duty+1)& (0+255),f,b
  5611  00326E  3362               	rrcf	??_Set_PWM_Duty& (0+255),f,b
  5612  003270  5162               	movf	??_Set_PWM_Duty& (0+255),w,b
  5613  003272  6EA0               	movwf	160,c	;volatile
  5614  003274                     
  5615                           ; BSR set to: 0
  5616                           ;main.c: 366:             PWM4DCL = duty;
  5617  003274  C060  FF9F         	movff	Set_PWM_Duty@duty,3999	;volatile
  5618                           
  5619                           ;main.c: 367:             break;
  5620  003278  EF54  F019         	goto	l179
  5621  00327C                     l2708:
  5622  00327C  0100               	movlb	0	; () banked
  5623  00327E  5164               	movf	Set_PWM_Duty@ch& (0+255),w,b
  5624  003280  6F62               	movwf	??_Set_PWM_Duty& (0+255),b
  5625  003282  6B63               	clrf	(??_Set_PWM_Duty+1)& (0+255),b
  5626                           
  5627                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5628                           ; Switch size 1, requested type "simple"
  5629                           ; Number of cases is 1, Range of values is 0 to 0
  5630                           ; switch strategies available:
  5631                           ; Name         Instructions Cycles
  5632                           ; simple_byte            4     3 (average)
  5633                           ;	Chosen strategy is simple_byte
  5634  003284  5163               	movf	(??_Set_PWM_Duty+1)& (0+255),w,b
  5635  003286  0A00               	xorlw	0	; case 0
  5636  003288  B4D8               	btfsc	status,2,c
  5637  00328A  EF49  F019         	goto	l3146
  5638  00328E  EF54  F019         	goto	l179
  5639  003292                     l3146:
  5640                           
  5641                           ; BSR set to: 0
  5642                           ; Switch size 1, requested type "simple"
  5643                           ; Number of cases is 2, Range of values is 3 to 4
  5644                           ; switch strategies available:
  5645                           ; Name         Instructions Cycles
  5646                           ; simple_byte            7     4 (average)
  5647                           ;	Chosen strategy is simple_byte
  5648  003292  5162               	movf	??_Set_PWM_Duty& (0+255),w,b
  5649  003294  0A03               	xorlw	3	; case 3
  5650  003296  B4D8               	btfsc	status,2,c
  5651  003298  EF1E  F019         	goto	l2698
  5652  00329C  0A07               	xorlw	7	; case 4
  5653  00329E  B4D8               	btfsc	status,2,c
  5654  0032A0  EF2E  F019         	goto	l2702
  5655  0032A4  EF54  F019         	goto	l179
  5656  0032A8                     l179:
  5657                           
  5658                           ; BSR set to: 0
  5659  0032A8  0012               	return		;funcret
  5660  0032AA                     __end_of_Set_PWM_Duty:
  5661                           	callstack 0
  5662                           
  5663 ;; *************** function _isr *****************
  5664 ;; Defined at:
  5665 ;;		line 123 in file "main.c"
  5666 ;; Parameters:    Size  Location     Type
  5667 ;;		None
  5668 ;; Auto vars:     Size  Location     Type
  5669 ;;		None
  5670 ;; Return value:  Size  Location     Type
  5671 ;;                  1    wreg      void 
  5672 ;; Registers used:
  5673 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5674 ;; Tracked objects:
  5675 ;;		On entry : 0/0
  5676 ;;		On exit  : 0/0
  5677 ;;		Unchanged: 0/0
  5678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5681 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5682 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5683 ;;Total ram usage:        2 bytes
  5684 ;; Hardware stack levels used: 1
  5685 ;; Hardware stack levels required when called: 3
  5686 ;; This function calls:
  5687 ;;		_RTC_Read
  5688 ;;		_UART_Read
  5689 ;; This function is called by:
  5690 ;;		Interrupt level 2
  5691 ;; This function uses a non-reentrant model
  5692 ;;
  5693                           
  5694                           	psect	intcode
  5695  000008                     __pintcode:
  5696                           	callstack 0
  5697  000008                     _isr:
  5698                           	callstack 24
  5699                           
  5700                           ; BSR set to: 0
  5701                           ;incstack = 0
  5702  000008  824E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5703  00000A  CFD9 F03C          	movff	fsr2l,??_isr
  5704  00000E  CFDA F03D          	movff	fsr2h,??_isr+1
  5705  000012                     
  5706                           ;main.c: 126:     if (TMR0IF) {
  5707  000012  010E               	movlb	14	; () banked
  5708  000014  ABC5               	btfss	197,5,b	;volatile
  5709  000016  EF0F  F000         	goto	i2u305_41
  5710  00001A  EF11  F000         	goto	i2u305_40
  5711  00001E                     i2u305_41:
  5712  00001E  EF21  F000         	goto	i2l3082
  5713  000022                     i2u305_40:
  5714  000022                     
  5715                           ; BSR set to: 14
  5716                           ;main.c: 127:         ((void)(TMR0H=((65036)>>8),TMR0L=((65036)&0xFF)));
  5717  000022  0EFE               	movlw	254
  5718  000024  6ED3               	movwf	211,c	;volatile
  5719  000026  0E0C               	movlw	12
  5720  000028  6ED2               	movwf	210,c	;volatile
  5721  00002A                     
  5722                           ; BSR set to: 14
  5723                           ;main.c: 128:         TMR0IF = 0;
  5724  00002A  9BC5               	bcf	197,5,b	;volatile
  5725  00002C                     
  5726                           ; BSR set to: 14
  5727                           ;main.c: 129:         g_t0_f = ~g_t0_f;
  5728  00002C  0443               	decf	_g_t0_f^0,w,c
  5729  00002E  A4D8               	btfss	status,2,c
  5730  000030  EF1C  F000         	goto	i2u306_41
  5731  000034  EF1F  F000         	goto	i2u306_40
  5732  000038                     i2u306_41:
  5733  000038  0E01               	movlw	1
  5734  00003A  EF20  F000         	goto	i2u307_40
  5735  00003E                     i2u306_40:
  5736  00003E  0E00               	movlw	0
  5737  000040                     i2u307_40:
  5738  000040  6E43               	movwf	_g_t0_f^0,c
  5739  000042                     i2l3082:
  5740                           
  5741                           ; BSR set to: 14
  5742                           ;main.c: 132:     if (RCIF) {
  5743  000042  ABC8               	btfss	200,5,b	;volatile
  5744  000044  EF26  F000         	goto	i2u308_41
  5745  000048  EF28  F000         	goto	i2u308_40
  5746  00004C                     i2u308_41:
  5747  00004C  EF2C  F000         	goto	i2l116
  5748  000050                     i2u308_40:
  5749  000050                     
  5750                           ; BSR set to: 14
  5751                           ;main.c: 133:         RTC_Read(UART_Read());
  5752  000050  EC69  F01A         	call	_UART_Read	;wreg free
  5753  000054  EC72  F015         	call	_RTC_Read
  5754  000058                     i2l116:
  5755  000058  C03D  FFDA         	movff	??_isr+1,fsr2h
  5756  00005C  C03C  FFD9         	movff	??_isr,fsr2l
  5757  000060  924E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5758  000062  0011               	retfie		f
  5759  000064                     __end_of_isr:
  5760                           	callstack 0
  5761                           
  5762 ;; *************** function _UART_Read *****************
  5763 ;; Defined at:
  5764 ;;		line 29 in file "library/UART/UART.c"
  5765 ;; Parameters:    Size  Location     Type
  5766 ;;		None
  5767 ;; Auto vars:     Size  Location     Type
  5768 ;;		None
  5769 ;; Return value:  Size  Location     Type
  5770 ;;                  1    wreg      unsigned char 
  5771 ;; Registers used:
  5772 ;;		wreg, status,2
  5773 ;; Tracked objects:
  5774 ;;		On entry : 0/0
  5775 ;;		On exit  : 0/0
  5776 ;;		Unchanged: 0/0
  5777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5781 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5782 ;;Total ram usage:        0 bytes
  5783 ;; Hardware stack levels used: 1
  5784 ;; This function calls:
  5785 ;;		Nothing
  5786 ;; This function is called by:
  5787 ;;		_isr
  5788 ;; This function uses a non-reentrant model
  5789 ;;
  5790                           
  5791                           	psect	text18
  5792  0034D2                     __ptext18:
  5793                           	callstack 0
  5794  0034D2                     _UART_Read:
  5795                           	callstack 26
  5796  0034D2                     
  5797                           ;library/UART/UART.c: 31:     if (RC1STAbits.OERR == 1) {
  5798  0034D2  A29C               	btfss	156,1,c	;volatile
  5799  0034D4  EF6E  F01A         	goto	i2u143_41
  5800  0034D8  EF70  F01A         	goto	i2u143_40
  5801  0034DC                     i2u143_41:
  5802  0034DC  EF72  F01A         	goto	i2l1926
  5803  0034E0                     i2u143_40:
  5804  0034E0                     
  5805                           ;library/UART/UART.c: 32:         RC1STAbits.CREN = 0;
  5806  0034E0  989C               	bcf	156,4,c	;volatile
  5807                           
  5808                           ;library/UART/UART.c: 33:         RC1STAbits.CREN = 1;
  5809  0034E2  889C               	bsf	156,4,c	;volatile
  5810  0034E4                     i2l1926:
  5811                           
  5812                           ;library/UART/UART.c: 36:     return RCREG;
  5813  0034E4  5098               	movf	152,w,c	;volatile
  5814  0034E6  0012               	return		;funcret
  5815  0034E8                     __end_of_UART_Read:
  5816                           	callstack 0
  5817                           
  5818 ;; *************** function _RTC_Read *****************
  5819 ;; Defined at:
  5820 ;;		line 258 in file "main.c"
  5821 ;; Parameters:    Size  Location     Type
  5822 ;;  data            1    wreg     unsigned char 
  5823 ;; Auto vars:     Size  Location     Type
  5824 ;;  data            1   58[COMRAM] unsigned char 
  5825 ;; Return value:  Size  Location     Type
  5826 ;;                  1    wreg      void 
  5827 ;; Registers used:
  5828 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5829 ;; Tracked objects:
  5830 ;;		On entry : 0/0
  5831 ;;		On exit  : 0/0
  5832 ;;		Unchanged: 0/0
  5833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5835 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5836 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5837 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5838 ;;Total ram usage:        3 bytes
  5839 ;; Hardware stack levels used: 1
  5840 ;; Hardware stack levels required when called: 2
  5841 ;; This function calls:
  5842 ;;		_Convert_data
  5843 ;;		_atol
  5844 ;;		_memset
  5845 ;; This function is called by:
  5846 ;;		_isr
  5847 ;; This function uses a non-reentrant model
  5848 ;;
  5849                           
  5850                           	psect	text19
  5851  002AE4                     __ptext19:
  5852                           	callstack 0
  5853  002AE4                     _RTC_Read:
  5854                           	callstack 24
  5855                           
  5856                           ;incstack = 0
  5857                           ;RTC_Read@data stored from wreg
  5858  002AE4  6E3B               	movwf	RTC_Read@data^0,c
  5859  002AE6                     
  5860                           ;main.c: 258: void RTC_Read(uint8_t data);main.c: 259: {;main.c: 260:     static int16_t
      +                           cnt = 0;;main.c: 261:     static char str[10];;main.c: 263:     switch (cnt) {
  5861  002AE6  EFAB  F015         	goto	i2l3052
  5862  002AEA                     i2l3032:
  5863                           
  5864                           ;main.c: 266:             if (data == '$') {
  5865  002AEA  0E24               	movlw	36
  5866  002AEC  183B               	xorwf	RTC_Read@data^0,w,c
  5867  002AEE  A4D8               	btfss	status,2,c
  5868  002AF0  EF7C  F015         	goto	i2u300_41
  5869  002AF4  EF7E  F015         	goto	i2u300_40
  5870  002AF8                     i2u300_41:
  5871  002AF8  EFD9  F015         	goto	i2l3054
  5872  002AFC                     i2u300_40:
  5873  002AFC                     
  5874                           ;main.c: 268:                 memset(str, '\0', sizeof(str));
  5875  002AFC  0E44               	movlw	low RTC_Read@str
  5876  002AFE  6E01               	movwf	memset@dest^0,c
  5877  002B00  0E00               	movlw	high RTC_Read@str
  5878  002B02  6E02               	movwf	(memset@dest+1)^0,c
  5879  002B04  0E00               	movlw	0
  5880  002B06  6E04               	movwf	(memset@c+1)^0,c
  5881  002B08  0E00               	movlw	0
  5882  002B0A  6E03               	movwf	memset@c^0,c
  5883  002B0C  0E00               	movlw	0
  5884  002B0E  6E06               	movwf	(memset@n+1)^0,c
  5885  002B10  0E0A               	movlw	10
  5886  002B12  6E05               	movwf	memset@n^0,c
  5887  002B14  ECB7  F014         	call	_memset	;wreg free
  5888  002B18                     i2l3036:
  5889                           
  5890                           ;main.c: 269:                 cnt++;
  5891  002B18  4A40               	infsnz	RTC_Read@cnt^0,f,c
  5892  002B1A  2A41               	incf	(RTC_Read@cnt+1)^0,f,c
  5893  002B1C  EFD9  F015         	goto	i2l3054
  5894  002B20                     i2l3038:
  5895                           
  5896                           ;main.c: 275:             if (data == 'Z') {
  5897  002B20  0E5A               	movlw	90
  5898  002B22  183B               	xorwf	RTC_Read@data^0,w,c
  5899  002B24  A4D8               	btfss	status,2,c
  5900  002B26  EF97  F015         	goto	i2u301_41
  5901  002B2A  EF99  F015         	goto	i2u301_40
  5902  002B2E                     i2u301_41:
  5903  002B2E  EF9B  F015         	goto	i2l3042
  5904  002B32                     i2u301_40:
  5905  002B32  EF8C  F015         	goto	i2l3036
  5906  002B36                     i2l3042:
  5907                           
  5908                           ;main.c: 279:                 cnt = 0;
  5909  002B36  0E00               	movlw	0
  5910  002B38  6E41               	movwf	(RTC_Read@cnt+1)^0,c
  5911  002B3A  0E00               	movlw	0
  5912  002B3C  6E40               	movwf	RTC_Read@cnt^0,c
  5913  002B3E  EFD9  F015         	goto	i2l3054
  5914  002B42                     i2l152:
  5915  002B42                     i2l3044:
  5916                           
  5917                           ;main.c: 289:             str[cnt - 7] = data;
  5918  002B42  0E3D               	movlw	low (RTC_Read@str+65529)
  5919  002B44  2440               	addwf	RTC_Read@cnt^0,w,c
  5920  002B46  6ED9               	movwf	fsr2l,c
  5921  002B48  0E00               	movlw	high (RTC_Read@str+65529)
  5922  002B4A  2041               	addwfc	(RTC_Read@cnt+1)^0,w,c
  5923  002B4C  6EDA               	movwf	fsr2h,c
  5924  002B4E  C03B  FFDF         	movff	RTC_Read@data,indf2
  5925  002B52  EF8C  F015         	goto	i2l3036
  5926  002B56                     i2l3052:
  5927  002B56  C040  F039         	movff	RTC_Read@cnt,??_RTC_Read
  5928  002B5A  C041  F03A         	movff	RTC_Read@cnt+1,??_RTC_Read+1
  5929                           
  5930                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5931                           ; Switch size 1, requested type "simple"
  5932                           ; Number of cases is 1, Range of values is 0 to 0
  5933                           ; switch strategies available:
  5934                           ; Name         Instructions Cycles
  5935                           ; simple_byte            4     3 (average)
  5936                           ;	Chosen strategy is simple_byte
  5937  002B5E  503A               	movf	(??_RTC_Read+1)^0,w,c
  5938  002B60  0A00               	xorlw	0	; case 0
  5939  002B62  B4D8               	btfsc	status,2,c
  5940  002B64  EFB6  F015         	goto	i2l3148
  5941  002B68  EF8C  F015         	goto	i2l3036
  5942  002B6C                     i2l3148:
  5943                           
  5944                           ; Switch size 1, requested type "simple"
  5945                           ; Number of cases is 8, Range of values is 0 to 12
  5946                           ; switch strategies available:
  5947                           ; Name         Instructions Cycles
  5948                           ; simple_byte           25    13 (average)
  5949                           ;	Chosen strategy is simple_byte
  5950  002B6C  5039               	movf	??_RTC_Read^0,w,c
  5951  002B6E  0A00               	xorlw	0	; case 0
  5952  002B70  B4D8               	btfsc	status,2,c
  5953  002B72  EF75  F015         	goto	i2l3032
  5954  002B76  0A03               	xorlw	3	; case 3
  5955  002B78  B4D8               	btfsc	status,2,c
  5956  002B7A  EF90  F015         	goto	i2l3038
  5957  002B7E  0A04               	xorlw	4	; case 7
  5958  002B80  B4D8               	btfsc	status,2,c
  5959  002B82  EFA1  F015         	goto	i2l152
  5960  002B86  0A0F               	xorlw	15	; case 8
  5961  002B88  B4D8               	btfsc	status,2,c
  5962  002B8A  EFA1  F015         	goto	i2l3044
  5963  002B8E  0A01               	xorlw	1	; case 9
  5964  002B90  B4D8               	btfsc	status,2,c
  5965  002B92  EFA1  F015         	goto	i2l3044
  5966  002B96  0A03               	xorlw	3	; case 10
  5967  002B98  B4D8               	btfsc	status,2,c
  5968  002B9A  EFA1  F015         	goto	i2l3044
  5969  002B9E  0A01               	xorlw	1	; case 11
  5970  002BA0  B4D8               	btfsc	status,2,c
  5971  002BA2  EFA1  F015         	goto	i2l3044
  5972  002BA6  0A07               	xorlw	7	; case 12
  5973  002BA8  B4D8               	btfsc	status,2,c
  5974  002BAA  EFA1  F015         	goto	i2l3044
  5975  002BAE  EF8C  F015         	goto	i2l3036
  5976  002BB2                     i2l3054:
  5977                           
  5978                           ;main.c: 299:     if (cnt >= 13) {
  5979  002BB2  BE41               	btfsc	(RTC_Read@cnt+1)^0,7,c
  5980  002BB4  EFE5  F015         	goto	i2u302_41
  5981  002BB8  5041               	movf	(RTC_Read@cnt+1)^0,w,c
  5982  002BBA  E109               	bnz	i2u302_40
  5983  002BBC  0E0D               	movlw	13
  5984  002BBE  5C40               	subwf	RTC_Read@cnt^0,w,c
  5985  002BC0  A0D8               	btfss	status,0,c
  5986  002BC2  EFE5  F015         	goto	i2u302_41
  5987  002BC6  EFE7  F015         	goto	i2u302_40
  5988  002BCA                     i2u302_41:
  5989  002BCA  EF03  F016         	goto	i2l157
  5990  002BCE                     i2u302_40:
  5991  002BCE                     
  5992                           ;main.c: 300:         g_time = Convert_data(atol(str));
  5993  002BCE  0E44               	movlw	low RTC_Read@str
  5994  002BD0  6E0D               	movwf	atol@s^0,c
  5995  002BD2  0E00               	movlw	high RTC_Read@str
  5996  002BD4  6E0E               	movwf	(atol@s+1)^0,c
  5997  002BD6  EC1A  F012         	call	_atol	;wreg free
  5998  002BDA  C00D  F021         	movff	?_atol,Convert_data@data
  5999  002BDE  C00E  F022         	movff	?_atol+1,Convert_data@data+1
  6000  002BE2  C00F  F023         	movff	?_atol+2,Convert_data@data+2
  6001  002BE6  C010  F024         	movff	?_atol+3,Convert_data@data+3
  6002  002BEA  ECE2  F013         	call	_Convert_data	;wreg free
  6003  002BEE  C021  F0BC         	movff	?_Convert_data,_g_time
  6004  002BF2  C022  F0BD         	movff	?_Convert_data+1,_g_time+1
  6005  002BF6  C023  F0BE         	movff	?_Convert_data+2,_g_time+2
  6006  002BFA  C024  F0BF         	movff	?_Convert_data+3,_g_time+3
  6007  002BFE                     
  6008                           ;main.c: 301:         cnt = 0;
  6009  002BFE  0E00               	movlw	0
  6010  002C00  6E41               	movwf	(RTC_Read@cnt+1)^0,c
  6011  002C02  0E00               	movlw	0
  6012  002C04  6E40               	movwf	RTC_Read@cnt^0,c
  6013  002C06                     i2l157:
  6014  002C06  0012               	return		;funcret
  6015  002C08                     __end_of_RTC_Read:
  6016                           	callstack 0
  6017                           
  6018 ;; *************** function _memset *****************
  6019 ;; Defined at:
  6020 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\memset.c"
  6021 ;; Parameters:    Size  Location     Type
  6022 ;;  dest            2    0[COMRAM] PTR void 
  6023 ;;		 -> RTC_Read@str(10), 
  6024 ;;  c               2    2[COMRAM] int 
  6025 ;;  n               2    4[COMRAM] unsigned int 
  6026 ;; Auto vars:     Size  Location     Type
  6027 ;;  s               2   10[COMRAM] PTR unsigned char 
  6028 ;;		 -> RTC_Read@str(10), 
  6029 ;;  k               2    8[COMRAM] unsigned int 
  6030 ;; Return value:  Size  Location     Type
  6031 ;;                  2    0[COMRAM] PTR void 
  6032 ;; Registers used:
  6033 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6034 ;; Tracked objects:
  6035 ;;		On entry : 0/0
  6036 ;;		On exit  : 0/0
  6037 ;;		Unchanged: 0/0
  6038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6039 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6040 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6041 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6042 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6043 ;;Total ram usage:       12 bytes
  6044 ;; Hardware stack levels used: 1
  6045 ;; This function calls:
  6046 ;;		Nothing
  6047 ;; This function is called by:
  6048 ;;		_RTC_Read
  6049 ;; This function uses a non-reentrant model
  6050 ;;
  6051                           
  6052                           	psect	text20
  6053  00296E                     __ptext20:
  6054                           	callstack 0
  6055  00296E                     _memset:
  6056                           	callstack 25
  6057  00296E  C001  F00B         	movff	memset@dest,memset@s
  6058  002972  C002  F00C         	movff	memset@dest+1,memset@s+1
  6059  002976  5005               	movf	memset@n^0,w,c
  6060  002978  1006               	iorwf	(memset@n+1)^0,w,c
  6061  00297A  A4D8               	btfss	status,2,c
  6062  00297C  EFC2  F014         	goto	i2u276_41
  6063  002980  EFC4  F014         	goto	i2u276_40
  6064  002984                     i2u276_41:
  6065  002984  EFC6  F014         	goto	i2l2754
  6066  002988                     i2u276_40:
  6067  002988  EF71  F015         	goto	i2l956
  6068  00298C                     i2l2754:
  6069  00298C  C00B  FFD9         	movff	memset@s,fsr2l
  6070  002990  C00C  FFDA         	movff	memset@s+1,fsr2h
  6071  002994  C003  FFDF         	movff	memset@c,indf2
  6072  002998  5005               	movf	memset@n^0,w,c
  6073  00299A  240B               	addwf	memset@s^0,w,c
  6074  00299C  6E07               	movwf	??_memset^0,c
  6075  00299E  5006               	movf	(memset@n+1)^0,w,c
  6076  0029A0  200C               	addwfc	(memset@s+1)^0,w,c
  6077  0029A2  6E08               	movwf	(??_memset+1)^0,c
  6078  0029A4  0EFF               	movlw	255
  6079  0029A6  2407               	addwf	??_memset^0,w,c
  6080  0029A8  6ED9               	movwf	fsr2l,c
  6081  0029AA  0EFF               	movlw	255
  6082  0029AC  2008               	addwfc	(??_memset+1)^0,w,c
  6083  0029AE  6EDA               	movwf	fsr2h,c
  6084  0029B0  C003  FFDF         	movff	memset@c,indf2
  6085  0029B4  5006               	movf	(memset@n+1)^0,w,c
  6086  0029B6  E107               	bnz	i2u277_41
  6087  0029B8  0E03               	movlw	3
  6088  0029BA  5C05               	subwf	memset@n^0,w,c
  6089  0029BC  B0D8               	btfsc	status,0,c
  6090  0029BE  EFE3  F014         	goto	i2u277_41
  6091  0029C2  EFE5  F014         	goto	i2u277_40
  6092  0029C6                     i2u277_41:
  6093  0029C6  EFE7  F014         	goto	i2l2760
  6094  0029CA                     i2u277_40:
  6095  0029CA  EF71  F015         	goto	i2l956
  6096  0029CE                     i2l2760:
  6097  0029CE  EE20 F001          	lfsr	2,1
  6098  0029D2  500B               	movf	memset@s^0,w,c
  6099  0029D4  26D9               	addwf	fsr2l,f,c
  6100  0029D6  500C               	movf	(memset@s+1)^0,w,c
  6101  0029D8  22DA               	addwfc	fsr2h,f,c
  6102  0029DA  C003  FFDF         	movff	memset@c,indf2
  6103  0029DE  EE20 F002          	lfsr	2,2
  6104  0029E2  500B               	movf	memset@s^0,w,c
  6105  0029E4  26D9               	addwf	fsr2l,f,c
  6106  0029E6  500C               	movf	(memset@s+1)^0,w,c
  6107  0029E8  22DA               	addwfc	fsr2h,f,c
  6108  0029EA  C003  FFDF         	movff	memset@c,indf2
  6109  0029EE  5005               	movf	memset@n^0,w,c
  6110  0029F0  240B               	addwf	memset@s^0,w,c
  6111  0029F2  6E07               	movwf	??_memset^0,c
  6112  0029F4  5006               	movf	(memset@n+1)^0,w,c
  6113  0029F6  200C               	addwfc	(memset@s+1)^0,w,c
  6114  0029F8  6E08               	movwf	(??_memset+1)^0,c
  6115  0029FA  0EFE               	movlw	254
  6116  0029FC  2407               	addwf	??_memset^0,w,c
  6117  0029FE  6ED9               	movwf	fsr2l,c
  6118  002A00  0EFF               	movlw	255
  6119  002A02  2008               	addwfc	(??_memset+1)^0,w,c
  6120  002A04  6EDA               	movwf	fsr2h,c
  6121  002A06  C003  FFDF         	movff	memset@c,indf2
  6122  002A0A  5005               	movf	memset@n^0,w,c
  6123  002A0C  240B               	addwf	memset@s^0,w,c
  6124  002A0E  6E07               	movwf	??_memset^0,c
  6125  002A10  5006               	movf	(memset@n+1)^0,w,c
  6126  002A12  200C               	addwfc	(memset@s+1)^0,w,c
  6127  002A14  6E08               	movwf	(??_memset+1)^0,c
  6128  002A16  0EFD               	movlw	253
  6129  002A18  2407               	addwf	??_memset^0,w,c
  6130  002A1A  6ED9               	movwf	fsr2l,c
  6131  002A1C  0EFF               	movlw	255
  6132  002A1E  2008               	addwfc	(??_memset+1)^0,w,c
  6133  002A20  6EDA               	movwf	fsr2h,c
  6134  002A22  C003  FFDF         	movff	memset@c,indf2
  6135  002A26  5006               	movf	(memset@n+1)^0,w,c
  6136  002A28  E107               	bnz	i2u278_41
  6137  002A2A  0E07               	movlw	7
  6138  002A2C  5C05               	subwf	memset@n^0,w,c
  6139  002A2E  B0D8               	btfsc	status,0,c
  6140  002A30  EF1C  F015         	goto	i2u278_41
  6141  002A34  EF1E  F015         	goto	i2u278_40
  6142  002A38                     i2u278_41:
  6143  002A38  EF20  F015         	goto	i2l2766
  6144  002A3C                     i2u278_40:
  6145  002A3C  EF71  F015         	goto	i2l956
  6146  002A40                     i2l2766:
  6147  002A40  EE20 F003          	lfsr	2,3
  6148  002A44  500B               	movf	memset@s^0,w,c
  6149  002A46  26D9               	addwf	fsr2l,f,c
  6150  002A48  500C               	movf	(memset@s+1)^0,w,c
  6151  002A4A  22DA               	addwfc	fsr2h,f,c
  6152  002A4C  C003  FFDF         	movff	memset@c,indf2
  6153  002A50  5005               	movf	memset@n^0,w,c
  6154  002A52  240B               	addwf	memset@s^0,w,c
  6155  002A54  6E07               	movwf	??_memset^0,c
  6156  002A56  5006               	movf	(memset@n+1)^0,w,c
  6157  002A58  200C               	addwfc	(memset@s+1)^0,w,c
  6158  002A5A  6E08               	movwf	(??_memset+1)^0,c
  6159  002A5C  0EFC               	movlw	252
  6160  002A5E  2407               	addwf	??_memset^0,w,c
  6161  002A60  6ED9               	movwf	fsr2l,c
  6162  002A62  0EFF               	movlw	255
  6163  002A64  2008               	addwfc	(??_memset+1)^0,w,c
  6164  002A66  6EDA               	movwf	fsr2h,c
  6165  002A68  C003  FFDF         	movff	memset@c,indf2
  6166  002A6C  5006               	movf	(memset@n+1)^0,w,c
  6167  002A6E  E107               	bnz	i2u279_41
  6168  002A70  0E09               	movlw	9
  6169  002A72  5C05               	subwf	memset@n^0,w,c
  6170  002A74  B0D8               	btfsc	status,0,c
  6171  002A76  EF3F  F015         	goto	i2u279_41
  6172  002A7A  EF41  F015         	goto	i2u279_40
  6173  002A7E                     i2u279_41:
  6174  002A7E  EF43  F015         	goto	i2l2772
  6175  002A82                     i2u279_40:
  6176  002A82  EF71  F015         	goto	i2l956
  6177  002A86                     i2l2772:
  6178  002A86  C00B  F007         	movff	memset@s,??_memset
  6179  002A8A  C00C  F008         	movff	memset@s+1,??_memset+1
  6180  002A8E  1E07               	comf	??_memset^0,f,c
  6181  002A90  1E08               	comf	(??_memset+1)^0,f,c
  6182  002A92  4A07               	infsnz	??_memset^0,f,c
  6183  002A94  2A08               	incf	(??_memset+1)^0,f,c
  6184  002A96  0E03               	movlw	3
  6185  002A98  1407               	andwf	??_memset^0,w,c
  6186  002A9A  6E09               	movwf	memset@k^0,c
  6187  002A9C  6A0A               	clrf	(memset@k+1)^0,c
  6188  002A9E  5009               	movf	memset@k^0,w,c
  6189  002AA0  260B               	addwf	memset@s^0,f,c
  6190  002AA2  500A               	movf	(memset@k+1)^0,w,c
  6191  002AA4  220C               	addwfc	(memset@s+1)^0,f,c
  6192  002AA6  5009               	movf	memset@k^0,w,c
  6193  002AA8  5E05               	subwf	memset@n^0,f,c
  6194  002AAA  500A               	movf	(memset@k+1)^0,w,c
  6195  002AAC  5A06               	subwfb	(memset@n+1)^0,f,c
  6196  002AAE  0EFC               	movlw	252
  6197  002AB0  1605               	andwf	memset@n^0,f,c
  6198  002AB2  0EFF               	movlw	255
  6199  002AB4  1606               	andwf	(memset@n+1)^0,f,c
  6200  002AB6  EF68  F015         	goto	i2l2780
  6201  002ABA                     i2l2774:
  6202  002ABA  C00B  FFD9         	movff	memset@s,fsr2l
  6203  002ABE  C00C  FFDA         	movff	memset@s+1,fsr2h
  6204  002AC2  C003  FFDF         	movff	memset@c,indf2
  6205  002AC6  0605               	decf	memset@n^0,f,c
  6206  002AC8  A0D8               	btfss	status,0,c
  6207  002ACA  0606               	decf	(memset@n+1)^0,f,c
  6208  002ACC  4A0B               	infsnz	memset@s^0,f,c
  6209  002ACE  2A0C               	incf	(memset@s+1)^0,f,c
  6210  002AD0                     i2l2780:
  6211  002AD0  5005               	movf	memset@n^0,w,c
  6212  002AD2  1006               	iorwf	(memset@n+1)^0,w,c
  6213  002AD4  A4D8               	btfss	status,2,c
  6214  002AD6  EF6F  F015         	goto	i2u280_41
  6215  002ADA  EF71  F015         	goto	i2u280_40
  6216  002ADE                     i2u280_41:
  6217  002ADE  EF5D  F015         	goto	i2l2774
  6218  002AE2                     i2u280_40:
  6219  002AE2                     i2l956:
  6220  002AE2  0012               	return		;funcret
  6221  002AE4                     __end_of_memset:
  6222                           	callstack 0
  6223                           
  6224 ;; *************** function _atol *****************
  6225 ;; Defined at:
  6226 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\atol.c"
  6227 ;; Parameters:    Size  Location     Type
  6228 ;;  s               2   12[COMRAM] PTR const unsigned char 
  6229 ;;		 -> RTC_Read@str(10), 
  6230 ;; Auto vars:     Size  Location     Type
  6231 ;;  n               4   28[COMRAM] long 
  6232 ;;  neg             2   21[COMRAM] int 
  6233 ;; Return value:  Size  Location     Type
  6234 ;;                  4   12[COMRAM] long 
  6235 ;; Registers used:
  6236 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6237 ;; Tracked objects:
  6238 ;;		On entry : 0/0
  6239 ;;		On exit  : 0/0
  6240 ;;		Unchanged: 0/0
  6241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6242 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6243 ;;      Locals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6244 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6245 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6246 ;;Total ram usage:       20 bytes
  6247 ;; Hardware stack levels used: 1
  6248 ;; Hardware stack levels required when called: 1
  6249 ;; This function calls:
  6250 ;;		___lmul
  6251 ;;		_isdigit
  6252 ;;		_isspace
  6253 ;; This function is called by:
  6254 ;;		_RTC_Read
  6255 ;; This function uses a non-reentrant model
  6256 ;;
  6257                           
  6258                           	psect	text21
  6259  002434                     __ptext21:
  6260                           	callstack 0
  6261  002434                     _atol:
  6262                           	callstack 24
  6263  002434  0E00               	movlw	0
  6264  002436  6E1D               	movwf	atol@n^0,c
  6265  002438  0E00               	movlw	0
  6266  00243A  6E1E               	movwf	(atol@n+1)^0,c
  6267  00243C  0E00               	movlw	0
  6268  00243E  6E1F               	movwf	(atol@n+2)^0,c
  6269  002440  0E00               	movlw	0
  6270  002442  6E20               	movwf	(atol@n+3)^0,c
  6271  002444  0E00               	movlw	0
  6272  002446  6E17               	movwf	(atol@neg+1)^0,c
  6273  002448  0E00               	movlw	0
  6274  00244A  6E16               	movwf	atol@neg^0,c
  6275  00244C  EF2A  F012         	goto	i2l2786
  6276  002450                     i2l2784:
  6277  002450  4A0D               	infsnz	atol@s^0,f,c
  6278  002452  2A0E               	incf	(atol@s+1)^0,f,c
  6279  002454                     i2l2786:
  6280  002454  0E01               	movlw	1
  6281  002456  6E1C               	movwf	_atol$779^0,c
  6282  002458  C00D  FFD9         	movff	atol@s,fsr2l
  6283  00245C  C00E  FFDA         	movff	atol@s+1,fsr2h
  6284  002460  0E20               	movlw	32
  6285  002462  18DE               	xorwf	postinc2,w,c
  6286  002464  B4D8               	btfsc	status,2,c
  6287  002466  EF37  F012         	goto	i2u281_41
  6288  00246A  EF39  F012         	goto	i2u281_40
  6289  00246E                     i2u281_41:
  6290  00246E  EF55  F012         	goto	i2l2794
  6291  002472                     i2u281_40:
  6292  002472  0EF7               	movlw	247
  6293  002474  6E11               	movwf	??_atol^0,c
  6294  002476  0EFF               	movlw	255
  6295  002478  6E12               	movwf	(??_atol+1)^0,c
  6296  00247A  C00D  FFD9         	movff	atol@s,fsr2l
  6297  00247E  C00E  FFDA         	movff	atol@s+1,fsr2h
  6298  002482  50DF               	movf	indf2,w,c
  6299  002484  6E13               	movwf	(??_atol+2)^0,c
  6300  002486  6A14               	clrf	(??_atol+3)^0,c
  6301  002488  5011               	movf	??_atol^0,w,c
  6302  00248A  2613               	addwf	(??_atol+2)^0,f,c
  6303  00248C  5012               	movf	(??_atol+1)^0,w,c
  6304  00248E  2214               	addwfc	(??_atol+3)^0,f,c
  6305  002490  5014               	movf	(??_atol+3)^0,w,c
  6306  002492  E109               	bnz	i2u282_40
  6307  002494  0E05               	movlw	5
  6308  002496  5C13               	subwf	(??_atol+2)^0,w,c
  6309  002498  A0D8               	btfss	status,0,c
  6310  00249A  EF51  F012         	goto	i2u282_41
  6311  00249E  EF53  F012         	goto	i2u282_40
  6312  0024A2                     i2u282_41:
  6313  0024A2  EF55  F012         	goto	i2l2794
  6314  0024A6                     i2u282_40:
  6315  0024A6  0E00               	movlw	0
  6316  0024A8  6E1C               	movwf	_atol$779^0,c
  6317  0024AA                     i2l2794:
  6318  0024AA  C01C  F018         	movff	_atol$779,_atol$778
  6319  0024AE  6A19               	clrf	(_atol$778+1)^0,c
  6320  0024B0  5018               	movf	_atol$778^0,w,c
  6321  0024B2  1019               	iorwf	(_atol$778+1)^0,w,c
  6322  0024B4  A4D8               	btfss	status,2,c
  6323  0024B6  EF5F  F012         	goto	i2u283_41
  6324  0024BA  EF61  F012         	goto	i2u283_40
  6325  0024BE                     i2u283_41:
  6326  0024BE  EF28  F012         	goto	i2l2784
  6327  0024C2                     i2u283_40:
  6328  0024C2  EF6B  F012         	goto	i2l2804
  6329  0024C6                     i2l2800:
  6330  0024C6  0E00               	movlw	0
  6331  0024C8  6E17               	movwf	(atol@neg+1)^0,c
  6332  0024CA  0E01               	movlw	1
  6333  0024CC  6E16               	movwf	atol@neg^0,c
  6334  0024CE                     i2l2802:
  6335  0024CE  4A0D               	infsnz	atol@s^0,f,c
  6336  0024D0  2A0E               	incf	(atol@s+1)^0,f,c
  6337  0024D2  EFB2  F012         	goto	i2l2810
  6338  0024D6                     i2l2804:
  6339  0024D6  C00D  FFD9         	movff	atol@s,fsr2l
  6340  0024DA  C00E  FFDA         	movff	atol@s+1,fsr2h
  6341  0024DE  50DF               	movf	indf2,w,c
  6342  0024E0  6E11               	movwf	??_atol^0,c
  6343  0024E2  6A12               	clrf	(??_atol+1)^0,c
  6344                           
  6345                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6346                           ; Switch size 1, requested type "simple"
  6347                           ; Number of cases is 1, Range of values is 0 to 0
  6348                           ; switch strategies available:
  6349                           ; Name         Instructions Cycles
  6350                           ; simple_byte            4     3 (average)
  6351                           ;	Chosen strategy is simple_byte
  6352  0024E4  5012               	movf	(??_atol+1)^0,w,c
  6353  0024E6  0A00               	xorlw	0	; case 0
  6354  0024E8  B4D8               	btfsc	status,2,c
  6355  0024EA  EF79  F012         	goto	i2l3150
  6356  0024EE  EFB2  F012         	goto	i2l2810
  6357  0024F2                     i2l3150:
  6358                           
  6359                           ; Switch size 1, requested type "simple"
  6360                           ; Number of cases is 2, Range of values is 43 to 45
  6361                           ; switch strategies available:
  6362                           ; Name         Instructions Cycles
  6363                           ; simple_byte            7     4 (average)
  6364                           ;	Chosen strategy is simple_byte
  6365  0024F2  5011               	movf	??_atol^0,w,c
  6366  0024F4  0A2B               	xorlw	43	; case 43
  6367  0024F6  B4D8               	btfsc	status,2,c
  6368  0024F8  EF67  F012         	goto	i2l2802
  6369  0024FC  0A06               	xorlw	6	; case 45
  6370  0024FE  B4D8               	btfsc	status,2,c
  6371  002500  EF63  F012         	goto	i2l2800
  6372  002504  EFB2  F012         	goto	i2l2810
  6373  002508                     i2l2806:
  6374  002508  C00D  FFD9         	movff	atol@s,fsr2l
  6375  00250C  C00E  FFDA         	movff	atol@s+1,fsr2h
  6376  002510  50DF               	movf	indf2,w,c
  6377  002512  6E11               	movwf	??_atol^0,c
  6378  002514  0ED0               	movlw	208
  6379  002516  2411               	addwf	??_atol^0,w,c
  6380  002518  6E12               	movwf	(??_atol+1)^0,c
  6381  00251A  6A13               	clrf	(??_atol+2)^0,c
  6382  00251C  0EFF               	movlw	255
  6383  00251E  2213               	addwfc	(??_atol+2)^0,f,c
  6384  002520  6A14               	clrf	(??_atol+3)^0,c
  6385  002522  6A15               	clrf	(??_atol+4)^0,c
  6386  002524  C01D  F001         	movff	atol@n,___lmul@multiplier
  6387  002528  C01E  F002         	movff	atol@n+1,___lmul@multiplier+1
  6388  00252C  C01F  F003         	movff	atol@n+2,___lmul@multiplier+2
  6389  002530  C020  F004         	movff	atol@n+3,___lmul@multiplier+3
  6390  002534  0E0A               	movlw	10
  6391  002536  6E05               	movwf	___lmul@multiplicand^0,c
  6392  002538  0E00               	movlw	0
  6393  00253A  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  6394  00253C  0E00               	movlw	0
  6395  00253E  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  6396  002540  0E00               	movlw	0
  6397  002542  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  6398  002544  EC55  F019         	call	___lmul	;wreg free
  6399  002548  5012               	movf	(??_atol+1)^0,w,c
  6400  00254A  5C01               	subwf	?___lmul^0,w,c
  6401  00254C  6E1D               	movwf	atol@n^0,c
  6402  00254E  5013               	movf	(??_atol+2)^0,w,c
  6403  002550  5802               	subwfb	(?___lmul+1)^0,w,c
  6404  002552  6E1E               	movwf	(atol@n+1)^0,c
  6405  002554  5014               	movf	(??_atol+3)^0,w,c
  6406  002556  5803               	subwfb	(?___lmul+2)^0,w,c
  6407  002558  6E1F               	movwf	(atol@n+2)^0,c
  6408  00255A  5015               	movf	(??_atol+4)^0,w,c
  6409  00255C  5804               	subwfb	(?___lmul+3)^0,w,c
  6410  00255E  6E20               	movwf	(atol@n+3)^0,c
  6411  002560  EF67  F012         	goto	i2l2802
  6412  002564                     i2l2810:
  6413  002564  0ED0               	movlw	208
  6414  002566  6E11               	movwf	??_atol^0,c
  6415  002568  0EFF               	movlw	255
  6416  00256A  6E12               	movwf	(??_atol+1)^0,c
  6417  00256C  C00D  FFD9         	movff	atol@s,fsr2l
  6418  002570  C00E  FFDA         	movff	atol@s+1,fsr2h
  6419  002574  50DF               	movf	indf2,w,c
  6420  002576  6E13               	movwf	(??_atol+2)^0,c
  6421  002578  6A14               	clrf	(??_atol+3)^0,c
  6422  00257A  5011               	movf	??_atol^0,w,c
  6423  00257C  2613               	addwf	(??_atol+2)^0,f,c
  6424  00257E  5012               	movf	(??_atol+1)^0,w,c
  6425  002580  2214               	addwfc	(??_atol+3)^0,f,c
  6426  002582  5014               	movf	(??_atol+3)^0,w,c
  6427  002584  E10A               	bnz	i2u284_40
  6428  002586  0E0A               	movlw	10
  6429  002588  5C13               	subwf	(??_atol+2)^0,w,c
  6430  00258A  A0D8               	btfss	status,0,c
  6431  00258C  EFCA  F012         	goto	i2u284_41
  6432  002590  EFCD  F012         	goto	i2u284_40
  6433  002594                     i2u284_41:
  6434  002594  0E01               	movlw	1
  6435  002596  EFCE  F012         	goto	i2u285_40
  6436  00259A                     i2u284_40:
  6437  00259A  0E00               	movlw	0
  6438  00259C                     i2u285_40:
  6439  00259C  6E1A               	movwf	_atol$780^0,c
  6440  00259E  6A1B               	clrf	(_atol$780+1)^0,c
  6441  0025A0  501A               	movf	_atol$780^0,w,c
  6442  0025A2  101B               	iorwf	(_atol$780+1)^0,w,c
  6443  0025A4  A4D8               	btfss	status,2,c
  6444  0025A6  EFD7  F012         	goto	i2u286_41
  6445  0025AA  EFD9  F012         	goto	i2u286_40
  6446  0025AE                     i2u286_41:
  6447  0025AE  EF84  F012         	goto	i2l2806
  6448  0025B2                     i2u286_40:
  6449  0025B2  5016               	movf	atol@neg^0,w,c
  6450  0025B4  1017               	iorwf	(atol@neg+1)^0,w,c
  6451  0025B6  A4D8               	btfss	status,2,c
  6452  0025B8  EFE0  F012         	goto	i2u287_41
  6453  0025BC  EFE2  F012         	goto	i2u287_40
  6454  0025C0                     i2u287_41:
  6455  0025C0  EFFD  F012         	goto	i2l935
  6456  0025C4                     i2u287_40:
  6457  0025C4  C01D  F011         	movff	atol@n,??_atol
  6458  0025C8  C01E  F012         	movff	atol@n+1,??_atol+1
  6459  0025CC  C01F  F013         	movff	atol@n+2,??_atol+2
  6460  0025D0  C020  F014         	movff	atol@n+3,??_atol+3
  6461  0025D4  1E11               	comf	??_atol^0,f,c
  6462  0025D6  1E12               	comf	(??_atol+1)^0,f,c
  6463  0025D8  1E13               	comf	(??_atol+2)^0,f,c
  6464  0025DA  1E14               	comf	(??_atol+3)^0,f,c
  6465  0025DC  2A11               	incf	??_atol^0,f,c
  6466  0025DE  0E00               	movlw	0
  6467  0025E0  2212               	addwfc	(??_atol+1)^0,f,c
  6468  0025E2  2213               	addwfc	(??_atol+2)^0,f,c
  6469  0025E4  2214               	addwfc	(??_atol+3)^0,f,c
  6470  0025E6  C011  F00D         	movff	??_atol,?_atol
  6471  0025EA  C012  F00E         	movff	??_atol+1,?_atol+1
  6472  0025EE  C013  F00F         	movff	??_atol+2,?_atol+2
  6473  0025F2  C014  F010         	movff	??_atol+3,?_atol+3
  6474  0025F6  EF05  F013         	goto	i2l938
  6475  0025FA                     i2l935:
  6476  0025FA  C01D  F00D         	movff	atol@n,?_atol
  6477  0025FE  C01E  F00E         	movff	atol@n+1,?_atol+1
  6478  002602  C01F  F00F         	movff	atol@n+2,?_atol+2
  6479  002606  C020  F010         	movff	atol@n+3,?_atol+3
  6480  00260A                     i2l938:
  6481  00260A  0012               	return		;funcret
  6482  00260C                     __end_of_atol:
  6483                           	callstack 0
  6484                           
  6485 ;; *************** function _isspace *****************
  6486 ;; Defined at:
  6487 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isspace.c"
  6488 ;; Parameters:    Size  Location     Type
  6489 ;;  c               2    0[COMRAM] int 
  6490 ;; Auto vars:     Size  Location     Type
  6491 ;;		None
  6492 ;; Return value:  Size  Location     Type
  6493 ;;                  2    0[COMRAM] int 
  6494 ;; Registers used:
  6495 ;;		wreg, status,2, status,0
  6496 ;; Tracked objects:
  6497 ;;		On entry : 0/0
  6498 ;;		On exit  : 0/0
  6499 ;;		Unchanged: 0/0
  6500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6501 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6502 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6503 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6504 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6505 ;;Total ram usage:        7 bytes
  6506 ;; Hardware stack levels used: 1
  6507 ;; This function calls:
  6508 ;;		Nothing
  6509 ;; This function is called by:
  6510 ;;		_atol
  6511 ;; This function uses a non-reentrant model
  6512 ;;
  6513                           
  6514                           	psect	text22
  6515  003314                     __ptext22:
  6516                           	callstack 0
  6517  003314                     _isspace:
  6518                           	callstack 24
  6519  003314  0E01               	movlw	1
  6520  003316  6E07               	movwf	_isspace$796^0,c
  6521  003318  0E20               	movlw	32
  6522  00331A  1801               	xorwf	isspace@c^0,w,c
  6523  00331C  1002               	iorwf	(isspace@c+1)^0,w,c
  6524  00331E  B4D8               	btfsc	status,2,c
  6525  003320  EF94  F019         	goto	i2u258_41
  6526  003324  EF96  F019         	goto	i2u258_40
  6527  003328                     i2u258_41:
  6528  003328  EFAF  F019         	goto	i2l2650
  6529  00332C                     i2u258_40:
  6530  00332C  0EF7               	movlw	247
  6531  00332E  6E03               	movwf	??_isspace^0,c
  6532  003330  0EFF               	movlw	255
  6533  003332  6E04               	movwf	(??_isspace+1)^0,c
  6534  003334  C001  F005         	movff	isspace@c,??_isspace+2
  6535  003338  C002  F006         	movff	isspace@c+1,??_isspace+3
  6536  00333C  5003               	movf	??_isspace^0,w,c
  6537  00333E  2605               	addwf	(??_isspace+2)^0,f,c
  6538  003340  5004               	movf	(??_isspace+1)^0,w,c
  6539  003342  2206               	addwfc	(??_isspace+3)^0,f,c
  6540  003344  5006               	movf	(??_isspace+3)^0,w,c
  6541  003346  E109               	bnz	i2u259_40
  6542  003348  0E05               	movlw	5
  6543  00334A  5C05               	subwf	(??_isspace+2)^0,w,c
  6544  00334C  A0D8               	btfss	status,0,c
  6545  00334E  EFAB  F019         	goto	i2u259_41
  6546  003352  EFAD  F019         	goto	i2u259_40
  6547  003356                     i2u259_41:
  6548  003356  EFAF  F019         	goto	i2l2650
  6549  00335A                     i2u259_40:
  6550  00335A  0E00               	movlw	0
  6551  00335C  6E07               	movwf	_isspace$796^0,c
  6552  00335E                     i2l2650:
  6553  00335E  C007  F001         	movff	_isspace$796,?_isspace
  6554  003362  6A02               	clrf	(?_isspace+1)^0,c
  6555  003364  0012               	return		;funcret
  6556  003366                     __end_of_isspace:
  6557                           	callstack 0
  6558                           
  6559 ;; *************** function _isdigit *****************
  6560 ;; Defined at:
  6561 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isdigit.c"
  6562 ;; Parameters:    Size  Location     Type
  6563 ;;  c               2    0[COMRAM] int 
  6564 ;; Auto vars:     Size  Location     Type
  6565 ;;		None
  6566 ;; Return value:  Size  Location     Type
  6567 ;;                  2    0[COMRAM] int 
  6568 ;; Registers used:
  6569 ;;		wreg, status,2, status,0
  6570 ;; Tracked objects:
  6571 ;;		On entry : 0/0
  6572 ;;		On exit  : 0/0
  6573 ;;		Unchanged: 0/0
  6574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6575 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6577 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6578 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6579 ;;Total ram usage:        6 bytes
  6580 ;; Hardware stack levels used: 1
  6581 ;; This function calls:
  6582 ;;		Nothing
  6583 ;; This function is called by:
  6584 ;;		_atol
  6585 ;; This function uses a non-reentrant model
  6586 ;;
  6587                           
  6588                           	psect	text23
  6589  003444                     __ptext23:
  6590                           	callstack 0
  6591  003444                     _isdigit:
  6592                           	callstack 24
  6593  003444  0ED0               	movlw	208
  6594  003446  6E03               	movwf	??_isdigit^0,c
  6595  003448  0EFF               	movlw	255
  6596  00344A  6E04               	movwf	(??_isdigit+1)^0,c
  6597  00344C  C001  F005         	movff	isdigit@c,??_isdigit+2
  6598  003450  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  6599  003454  5003               	movf	??_isdigit^0,w,c
  6600  003456  2605               	addwf	(??_isdigit+2)^0,f,c
  6601  003458  5004               	movf	(??_isdigit+1)^0,w,c
  6602  00345A  2206               	addwfc	(??_isdigit+3)^0,f,c
  6603  00345C  5006               	movf	(??_isdigit+3)^0,w,c
  6604  00345E  E10A               	bnz	i2u260_40
  6605  003460  0E0A               	movlw	10
  6606  003462  5C05               	subwf	(??_isdigit+2)^0,w,c
  6607  003464  A0D8               	btfss	status,0,c
  6608  003466  EF37  F01A         	goto	i2u260_41
  6609  00346A  EF3A  F01A         	goto	i2u260_40
  6610  00346E                     i2u260_41:
  6611  00346E  0E01               	movlw	1
  6612  003470  EF3B  F01A         	goto	i2u261_40
  6613  003474                     i2u260_40:
  6614  003474  0E00               	movlw	0
  6615  003476                     i2u261_40:
  6616  003476  6E01               	movwf	?_isdigit^0,c
  6617  003478  6A02               	clrf	(?_isdigit+1)^0,c
  6618  00347A  0012               	return		;funcret
  6619  00347C                     __end_of_isdigit:
  6620                           	callstack 0
  6621                           
  6622 ;; *************** function _Convert_data *****************
  6623 ;; Defined at:
  6624 ;;		line 306 in file "main.c"
  6625 ;; Parameters:    Size  Location     Type
  6626 ;;  data            4   32[COMRAM] unsigned long 
  6627 ;; Auto vars:     Size  Location     Type
  6628 ;;  hour            4   52[COMRAM] unsigned long 
  6629 ;;  sec             4   48[COMRAM] unsigned long 
  6630 ;;  min             4   44[COMRAM] unsigned long 
  6631 ;; Return value:  Size  Location     Type
  6632 ;;                  4   32[COMRAM] unsigned long 
  6633 ;; Registers used:
  6634 ;;		wreg, status,2, status,0, cstack
  6635 ;; Tracked objects:
  6636 ;;		On entry : 0/0
  6637 ;;		On exit  : 0/0
  6638 ;;		Unchanged: 0/0
  6639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6640 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6641 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6642 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6643 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6644 ;;Total ram usage:       24 bytes
  6645 ;; Hardware stack levels used: 1
  6646 ;; Hardware stack levels required when called: 1
  6647 ;; This function calls:
  6648 ;;		___lmul
  6649 ;;		i2___lldiv
  6650 ;;		i2___llmod
  6651 ;; This function is called by:
  6652 ;;		_RTC_Read
  6653 ;; This function uses a non-reentrant model
  6654 ;;
  6655                           
  6656                           	psect	text24
  6657  0027C4                     __ptext24:
  6658                           	callstack 0
  6659  0027C4                     _Convert_data:
  6660                           	callstack 24
  6661  0027C4                     
  6662                           ;main.c: 306: uint32_t Convert_data(uint32_t data);main.c: 307: {;main.c: 308:     uint3
      +                          2_t hour;;main.c: 309:     uint32_t min;;main.c: 310:     uint32_t sec;;main.c: 312:    
      +                           hour = (data / 10000) % 100;
  6663  0027C4  0E10               	movlw	16
  6664  0027C6  6E05               	movwf	i2___lldiv@divisor^0,c
  6665  0027C8  0E27               	movlw	39
  6666  0027CA  6E06               	movwf	(i2___lldiv@divisor+1)^0,c
  6667  0027CC  0E00               	movlw	0
  6668  0027CE  6E07               	movwf	(i2___lldiv@divisor+2)^0,c
  6669  0027D0  0E00               	movlw	0
  6670  0027D2  6E08               	movwf	(i2___lldiv@divisor+3)^0,c
  6671  0027D4  C021  F001         	movff	Convert_data@data,i2___lldiv@dividend
  6672  0027D8  C022  F002         	movff	Convert_data@data+1,i2___lldiv@dividend+1
  6673  0027DC  C023  F003         	movff	Convert_data@data+2,i2___lldiv@dividend+2
  6674  0027E0  C024  F004         	movff	Convert_data@data+3,i2___lldiv@dividend+3
  6675  0027E4  ECB3  F017         	call	i2___lldiv	;wreg free
  6676  0027E8  C001  F00E         	movff	?i2___lldiv,i2___llmod@dividend
  6677  0027EC  C002  F00F         	movff	?i2___lldiv+1,i2___llmod@dividend+1
  6678  0027F0  C003  F010         	movff	?i2___lldiv+2,i2___llmod@dividend+2
  6679  0027F4  C004  F011         	movff	?i2___lldiv+3,i2___llmod@dividend+3
  6680  0027F8  0E64               	movlw	100
  6681  0027FA  6E12               	movwf	i2___llmod@divisor^0,c
  6682  0027FC  0E00               	movlw	0
  6683  0027FE  6E13               	movwf	(i2___llmod@divisor+1)^0,c
  6684  002800  0E00               	movlw	0
  6685  002802  6E14               	movwf	(i2___llmod@divisor+2)^0,c
  6686  002804  0E00               	movlw	0
  6687  002806  6E15               	movwf	(i2___llmod@divisor+3)^0,c
  6688  002808  ECD6  F018         	call	i2___llmod	;wreg free
  6689  00280C  C00E  F035         	movff	?i2___llmod,Convert_data@hour
  6690  002810  C00F  F036         	movff	?i2___llmod+1,Convert_data@hour+1
  6691  002814  C010  F037         	movff	?i2___llmod+2,Convert_data@hour+2
  6692  002818  C011  F038         	movff	?i2___llmod+3,Convert_data@hour+3
  6693                           
  6694                           ;main.c: 313:     min = (data / 100) % 100;
  6695  00281C  0E64               	movlw	100
  6696  00281E  6E05               	movwf	i2___lldiv@divisor^0,c
  6697  002820  0E00               	movlw	0
  6698  002822  6E06               	movwf	(i2___lldiv@divisor+1)^0,c
  6699  002824  0E00               	movlw	0
  6700  002826  6E07               	movwf	(i2___lldiv@divisor+2)^0,c
  6701  002828  0E00               	movlw	0
  6702  00282A  6E08               	movwf	(i2___lldiv@divisor+3)^0,c
  6703  00282C  C021  F001         	movff	Convert_data@data,i2___lldiv@dividend
  6704  002830  C022  F002         	movff	Convert_data@data+1,i2___lldiv@dividend+1
  6705  002834  C023  F003         	movff	Convert_data@data+2,i2___lldiv@dividend+2
  6706  002838  C024  F004         	movff	Convert_data@data+3,i2___lldiv@dividend+3
  6707  00283C  ECB3  F017         	call	i2___lldiv	;wreg free
  6708  002840  C001  F00E         	movff	?i2___lldiv,i2___llmod@dividend
  6709  002844  C002  F00F         	movff	?i2___lldiv+1,i2___llmod@dividend+1
  6710  002848  C003  F010         	movff	?i2___lldiv+2,i2___llmod@dividend+2
  6711  00284C  C004  F011         	movff	?i2___lldiv+3,i2___llmod@dividend+3
  6712  002850  0E64               	movlw	100
  6713  002852  6E12               	movwf	i2___llmod@divisor^0,c
  6714  002854  0E00               	movlw	0
  6715  002856  6E13               	movwf	(i2___llmod@divisor+1)^0,c
  6716  002858  0E00               	movlw	0
  6717  00285A  6E14               	movwf	(i2___llmod@divisor+2)^0,c
  6718  00285C  0E00               	movlw	0
  6719  00285E  6E15               	movwf	(i2___llmod@divisor+3)^0,c
  6720  002860  ECD6  F018         	call	i2___llmod	;wreg free
  6721  002864  C00E  F02D         	movff	?i2___llmod,Convert_data@min
  6722  002868  C00F  F02E         	movff	?i2___llmod+1,Convert_data@min+1
  6723  00286C  C010  F02F         	movff	?i2___llmod+2,Convert_data@min+2
  6724  002870  C011  F030         	movff	?i2___llmod+3,Convert_data@min+3
  6725                           
  6726                           ;main.c: 314:     sec = (data / 1) % 100;
  6727  002874  C021  F00E         	movff	Convert_data@data,i2___llmod@dividend
  6728  002878  C022  F00F         	movff	Convert_data@data+1,i2___llmod@dividend+1
  6729  00287C  C023  F010         	movff	Convert_data@data+2,i2___llmod@dividend+2
  6730  002880  C024  F011         	movff	Convert_data@data+3,i2___llmod@dividend+3
  6731  002884  0E64               	movlw	100
  6732  002886  6E12               	movwf	i2___llmod@divisor^0,c
  6733  002888  0E00               	movlw	0
  6734  00288A  6E13               	movwf	(i2___llmod@divisor+1)^0,c
  6735  00288C  0E00               	movlw	0
  6736  00288E  6E14               	movwf	(i2___llmod@divisor+2)^0,c
  6737  002890  0E00               	movlw	0
  6738  002892  6E15               	movwf	(i2___llmod@divisor+3)^0,c
  6739  002894  ECD6  F018         	call	i2___llmod	;wreg free
  6740  002898  C00E  F031         	movff	?i2___llmod,Convert_data@sec
  6741  00289C  C00F  F032         	movff	?i2___llmod+1,Convert_data@sec+1
  6742  0028A0  C010  F033         	movff	?i2___llmod+2,Convert_data@sec+2
  6743  0028A4  C011  F034         	movff	?i2___llmod+3,Convert_data@sec+3
  6744                           
  6745                           ;main.c: 317:     hour = (hour + 9) % 24;
  6746  0028A8  0E09               	movlw	9
  6747  0028AA  2435               	addwf	Convert_data@hour^0,w,c
  6748  0028AC  6E0E               	movwf	i2___llmod@dividend^0,c
  6749  0028AE  0E00               	movlw	0
  6750  0028B0  2036               	addwfc	(Convert_data@hour+1)^0,w,c
  6751  0028B2  6E0F               	movwf	(i2___llmod@dividend+1)^0,c
  6752  0028B4  0E00               	movlw	0
  6753  0028B6  2037               	addwfc	(Convert_data@hour+2)^0,w,c
  6754  0028B8  6E10               	movwf	(i2___llmod@dividend+2)^0,c
  6755  0028BA  0E00               	movlw	0
  6756  0028BC  2038               	addwfc	(Convert_data@hour+3)^0,w,c
  6757  0028BE  6E11               	movwf	(i2___llmod@dividend+3)^0,c
  6758  0028C0  0E18               	movlw	24
  6759  0028C2  6E12               	movwf	i2___llmod@divisor^0,c
  6760  0028C4  0E00               	movlw	0
  6761  0028C6  6E13               	movwf	(i2___llmod@divisor+1)^0,c
  6762  0028C8  0E00               	movlw	0
  6763  0028CA  6E14               	movwf	(i2___llmod@divisor+2)^0,c
  6764  0028CC  0E00               	movlw	0
  6765  0028CE  6E15               	movwf	(i2___llmod@divisor+3)^0,c
  6766  0028D0  ECD6  F018         	call	i2___llmod	;wreg free
  6767  0028D4  C00E  F035         	movff	?i2___llmod,Convert_data@hour
  6768  0028D8  C00F  F036         	movff	?i2___llmod+1,Convert_data@hour+1
  6769  0028DC  C010  F037         	movff	?i2___llmod+2,Convert_data@hour+2
  6770  0028E0  C011  F038         	movff	?i2___llmod+3,Convert_data@hour+3
  6771                           
  6772                           ;main.c: 319:     return (hour * 10000) + (min * 100) + (sec * 1);
  6773  0028E4  C035  F001         	movff	Convert_data@hour,___lmul@multiplier
  6774  0028E8  C036  F002         	movff	Convert_data@hour+1,___lmul@multiplier+1
  6775  0028EC  C037  F003         	movff	Convert_data@hour+2,___lmul@multiplier+2
  6776  0028F0  C038  F004         	movff	Convert_data@hour+3,___lmul@multiplier+3
  6777  0028F4  0E10               	movlw	16
  6778  0028F6  6E05               	movwf	___lmul@multiplicand^0,c
  6779  0028F8  0E27               	movlw	39
  6780  0028FA  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  6781  0028FC  0E00               	movlw	0
  6782  0028FE  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  6783  002900  0E00               	movlw	0
  6784  002902  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  6785  002904  EC55  F019         	call	___lmul	;wreg free
  6786  002908  C001  F025         	movff	?___lmul,??_Convert_data
  6787  00290C  C002  F026         	movff	?___lmul+1,??_Convert_data+1
  6788  002910  C003  F027         	movff	?___lmul+2,??_Convert_data+2
  6789  002914  C004  F028         	movff	?___lmul+3,??_Convert_data+3
  6790  002918  C02D  F001         	movff	Convert_data@min,___lmul@multiplier
  6791  00291C  C02E  F002         	movff	Convert_data@min+1,___lmul@multiplier+1
  6792  002920  C02F  F003         	movff	Convert_data@min+2,___lmul@multiplier+2
  6793  002924  C030  F004         	movff	Convert_data@min+3,___lmul@multiplier+3
  6794  002928  0E64               	movlw	100
  6795  00292A  6E05               	movwf	___lmul@multiplicand^0,c
  6796  00292C  0E00               	movlw	0
  6797  00292E  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  6798  002930  0E00               	movlw	0
  6799  002932  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  6800  002934  0E00               	movlw	0
  6801  002936  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  6802  002938  EC55  F019         	call	___lmul	;wreg free
  6803  00293C  5001               	movf	?___lmul^0,w,c
  6804  00293E  2425               	addwf	??_Convert_data^0,w,c
  6805  002940  6E29               	movwf	(??_Convert_data+4)^0,c
  6806  002942  5002               	movf	(?___lmul+1)^0,w,c
  6807  002944  2026               	addwfc	(??_Convert_data+1)^0,w,c
  6808  002946  6E2A               	movwf	(??_Convert_data+5)^0,c
  6809  002948  5003               	movf	(?___lmul+2)^0,w,c
  6810  00294A  2027               	addwfc	(??_Convert_data+2)^0,w,c
  6811  00294C  6E2B               	movwf	(??_Convert_data+6)^0,c
  6812  00294E  5004               	movf	(?___lmul+3)^0,w,c
  6813  002950  2028               	addwfc	(??_Convert_data+3)^0,w,c
  6814  002952  6E2C               	movwf	(??_Convert_data+7)^0,c
  6815  002954  5031               	movf	Convert_data@sec^0,w,c
  6816  002956  2429               	addwf	(??_Convert_data+4)^0,w,c
  6817  002958  6E21               	movwf	?_Convert_data^0,c
  6818  00295A  5032               	movf	(Convert_data@sec+1)^0,w,c
  6819  00295C  202A               	addwfc	(??_Convert_data+5)^0,w,c
  6820  00295E  6E22               	movwf	(?_Convert_data+1)^0,c
  6821  002960  5033               	movf	(Convert_data@sec+2)^0,w,c
  6822  002962  202B               	addwfc	(??_Convert_data+6)^0,w,c
  6823  002964  6E23               	movwf	(?_Convert_data+2)^0,c
  6824  002966  5034               	movf	(Convert_data@sec+3)^0,w,c
  6825  002968  202C               	addwfc	(??_Convert_data+7)^0,w,c
  6826  00296A  6E24               	movwf	(?_Convert_data+3)^0,c
  6827  00296C  0012               	return		;funcret
  6828  00296E                     __end_of_Convert_data:
  6829                           	callstack 0
  6830                           
  6831 ;; *************** function i2___llmod *****************
  6832 ;; Defined at:
  6833 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\llmod.c"
  6834 ;; Parameters:    Size  Location     Type
  6835 ;;  dividend        4   13[COMRAM] unsigned long 
  6836 ;;  divisor         4   17[COMRAM] unsigned long 
  6837 ;; Auto vars:     Size  Location     Type
  6838 ;;  counter         1   21[COMRAM] unsigned char 
  6839 ;; Return value:  Size  Location     Type
  6840 ;;                  4   13[COMRAM] unsigned long 
  6841 ;; Registers used:
  6842 ;;		wreg, status,2, status,0
  6843 ;; Tracked objects:
  6844 ;;		On entry : 0/0
  6845 ;;		On exit  : 0/0
  6846 ;;		Unchanged: 0/0
  6847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6848 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6849 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6851 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6852 ;;Total ram usage:        9 bytes
  6853 ;; Hardware stack levels used: 1
  6854 ;; This function calls:
  6855 ;;		Nothing
  6856 ;; This function is called by:
  6857 ;;		_Convert_data
  6858 ;; This function uses a non-reentrant model
  6859 ;;
  6860                           
  6861                           	psect	text25
  6862  0031AC                     __ptext25:
  6863                           	callstack 0
  6864  0031AC                     i2___llmod:
  6865                           	callstack 24
  6866  0031AC  5012               	movf	i2___llmod@divisor^0,w,c
  6867  0031AE  1013               	iorwf	(i2___llmod@divisor+1)^0,w,c
  6868  0031B0  1014               	iorwf	(i2___llmod@divisor+2)^0,w,c
  6869  0031B2  1015               	iorwf	(i2___llmod@divisor+3)^0,w,c
  6870  0031B4  B4D8               	btfsc	status,2,c
  6871  0031B6  EFDF  F018         	goto	i2u265_41
  6872  0031BA  EFE1  F018         	goto	i2u265_40
  6873  0031BE                     i2u265_41:
  6874  0031BE  EF11  F019         	goto	i2l656
  6875  0031C2                     i2u265_40:
  6876  0031C2  0E01               	movlw	1
  6877  0031C4  6E16               	movwf	i2___llmod@counter^0,c
  6878  0031C6  EFEB  F018         	goto	i2l2686
  6879  0031CA                     i2l2684:
  6880  0031CA  90D8               	bcf	status,0,c
  6881  0031CC  3612               	rlcf	i2___llmod@divisor^0,f,c
  6882  0031CE  3613               	rlcf	(i2___llmod@divisor+1)^0,f,c
  6883  0031D0  3614               	rlcf	(i2___llmod@divisor+2)^0,f,c
  6884  0031D2  3615               	rlcf	(i2___llmod@divisor+3)^0,f,c
  6885  0031D4  2A16               	incf	i2___llmod@counter^0,f,c
  6886  0031D6                     i2l2686:
  6887  0031D6  AE15               	btfss	(i2___llmod@divisor+3)^0,7,c
  6888  0031D8  EFF0  F018         	goto	i2u266_41
  6889  0031DC  EFF2  F018         	goto	i2u266_40
  6890  0031E0                     i2u266_41:
  6891  0031E0  EFE5  F018         	goto	i2l2684
  6892  0031E4                     i2u266_40:
  6893  0031E4                     i2l2688:
  6894  0031E4  5012               	movf	i2___llmod@divisor^0,w,c
  6895  0031E6  5C0E               	subwf	i2___llmod@dividend^0,w,c
  6896  0031E8  5013               	movf	(i2___llmod@divisor+1)^0,w,c
  6897  0031EA  580F               	subwfb	(i2___llmod@dividend+1)^0,w,c
  6898  0031EC  5014               	movf	(i2___llmod@divisor+2)^0,w,c
  6899  0031EE  5810               	subwfb	(i2___llmod@dividend+2)^0,w,c
  6900  0031F0  5015               	movf	(i2___llmod@divisor+3)^0,w,c
  6901  0031F2  5811               	subwfb	(i2___llmod@dividend+3)^0,w,c
  6902  0031F4  A0D8               	btfss	status,0,c
  6903  0031F6  EFFF  F018         	goto	i2u267_41
  6904  0031FA  EF01  F019         	goto	i2u267_40
  6905  0031FE                     i2u267_41:
  6906  0031FE  EF09  F019         	goto	i2l2692
  6907  003202                     i2u267_40:
  6908  003202  5012               	movf	i2___llmod@divisor^0,w,c
  6909  003204  5E0E               	subwf	i2___llmod@dividend^0,f,c
  6910  003206  5013               	movf	(i2___llmod@divisor+1)^0,w,c
  6911  003208  5A0F               	subwfb	(i2___llmod@dividend+1)^0,f,c
  6912  00320A  5014               	movf	(i2___llmod@divisor+2)^0,w,c
  6913  00320C  5A10               	subwfb	(i2___llmod@dividend+2)^0,f,c
  6914  00320E  5015               	movf	(i2___llmod@divisor+3)^0,w,c
  6915  003210  5A11               	subwfb	(i2___llmod@dividend+3)^0,f,c
  6916  003212                     i2l2692:
  6917  003212  90D8               	bcf	status,0,c
  6918  003214  3215               	rrcf	(i2___llmod@divisor+3)^0,f,c
  6919  003216  3214               	rrcf	(i2___llmod@divisor+2)^0,f,c
  6920  003218  3213               	rrcf	(i2___llmod@divisor+1)^0,f,c
  6921  00321A  3212               	rrcf	i2___llmod@divisor^0,f,c
  6922  00321C  2E16               	decfsz	i2___llmod@counter^0,f,c
  6923  00321E  EFF2  F018         	goto	i2l2688
  6924  003222                     i2l656:
  6925  003222  C00E  F00E         	movff	i2___llmod@dividend,?i2___llmod
  6926  003226  C00F  F00F         	movff	i2___llmod@dividend+1,?i2___llmod+1
  6927  00322A  C010  F010         	movff	i2___llmod@dividend+2,?i2___llmod+2
  6928  00322E  C011  F011         	movff	i2___llmod@dividend+3,?i2___llmod+3
  6929  003232  0012               	return		;funcret
  6930  003234                     __end_ofi2___llmod:
  6931                           	callstack 0
  6932                           
  6933 ;; *************** function i2___lldiv *****************
  6934 ;; Defined at:
  6935 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__lldiv.c"
  6936 ;; Parameters:    Size  Location     Type
  6937 ;;  dividend        4    0[COMRAM] unsigned long 
  6938 ;;  divisor         4    4[COMRAM] unsigned long 
  6939 ;; Auto vars:     Size  Location     Type
  6940 ;;  quotient        4    8[COMRAM] unsigned long 
  6941 ;;  counter         1   12[COMRAM] unsigned char 
  6942 ;; Return value:  Size  Location     Type
  6943 ;;                  4    0[COMRAM] unsigned long 
  6944 ;; Registers used:
  6945 ;;		wreg, status,2, status,0
  6946 ;; Tracked objects:
  6947 ;;		On entry : 0/0
  6948 ;;		On exit  : 0/0
  6949 ;;		Unchanged: 0/0
  6950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6951 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6952 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6954 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6955 ;;Total ram usage:       13 bytes
  6956 ;; Hardware stack levels used: 1
  6957 ;; This function calls:
  6958 ;;		Nothing
  6959 ;; This function is called by:
  6960 ;;		_Convert_data
  6961 ;; This function uses a non-reentrant model
  6962 ;;
  6963                           
  6964                           	psect	text26
  6965  002F66                     __ptext26:
  6966                           	callstack 0
  6967  002F66                     i2___lldiv:
  6968                           	callstack 24
  6969  002F66  0E00               	movlw	0
  6970  002F68  6E09               	movwf	i2___lldiv@quotient^0,c
  6971  002F6A  0E00               	movlw	0
  6972  002F6C  6E0A               	movwf	(i2___lldiv@quotient+1)^0,c
  6973  002F6E  0E00               	movlw	0
  6974  002F70  6E0B               	movwf	(i2___lldiv@quotient+2)^0,c
  6975  002F72  0E00               	movlw	0
  6976  002F74  6E0C               	movwf	(i2___lldiv@quotient+3)^0,c
  6977  002F76  5005               	movf	i2___lldiv@divisor^0,w,c
  6978  002F78  1006               	iorwf	(i2___lldiv@divisor+1)^0,w,c
  6979  002F7A  1007               	iorwf	(i2___lldiv@divisor+2)^0,w,c
  6980  002F7C  1008               	iorwf	(i2___lldiv@divisor+3)^0,w,c
  6981  002F7E  B4D8               	btfsc	status,2,c
  6982  002F80  EFC4  F017         	goto	i2u262_41
  6983  002F84  EFC6  F017         	goto	i2u262_40
  6984  002F88                     i2u262_41:
  6985  002F88  EFFC  F017         	goto	i2l263
  6986  002F8C                     i2u262_40:
  6987  002F8C  0E01               	movlw	1
  6988  002F8E  6E0D               	movwf	i2___lldiv@counter^0,c
  6989  002F90  EFD0  F017         	goto	i2l2666
  6990  002F94                     i2l2664:
  6991  002F94  90D8               	bcf	status,0,c
  6992  002F96  3605               	rlcf	i2___lldiv@divisor^0,f,c
  6993  002F98  3606               	rlcf	(i2___lldiv@divisor+1)^0,f,c
  6994  002F9A  3607               	rlcf	(i2___lldiv@divisor+2)^0,f,c
  6995  002F9C  3608               	rlcf	(i2___lldiv@divisor+3)^0,f,c
  6996  002F9E  2A0D               	incf	i2___lldiv@counter^0,f,c
  6997  002FA0                     i2l2666:
  6998  002FA0  AE08               	btfss	(i2___lldiv@divisor+3)^0,7,c
  6999  002FA2  EFD5  F017         	goto	i2u263_41
  7000  002FA6  EFD7  F017         	goto	i2u263_40
  7001  002FAA                     i2u263_41:
  7002  002FAA  EFCA  F017         	goto	i2l2664
  7003  002FAE                     i2u263_40:
  7004  002FAE                     i2l2668:
  7005  002FAE  90D8               	bcf	status,0,c
  7006  002FB0  3609               	rlcf	i2___lldiv@quotient^0,f,c
  7007  002FB2  360A               	rlcf	(i2___lldiv@quotient+1)^0,f,c
  7008  002FB4  360B               	rlcf	(i2___lldiv@quotient+2)^0,f,c
  7009  002FB6  360C               	rlcf	(i2___lldiv@quotient+3)^0,f,c
  7010  002FB8  5005               	movf	i2___lldiv@divisor^0,w,c
  7011  002FBA  5C01               	subwf	i2___lldiv@dividend^0,w,c
  7012  002FBC  5006               	movf	(i2___lldiv@divisor+1)^0,w,c
  7013  002FBE  5802               	subwfb	(i2___lldiv@dividend+1)^0,w,c
  7014  002FC0  5007               	movf	(i2___lldiv@divisor+2)^0,w,c
  7015  002FC2  5803               	subwfb	(i2___lldiv@dividend+2)^0,w,c
  7016  002FC4  5008               	movf	(i2___lldiv@divisor+3)^0,w,c
  7017  002FC6  5804               	subwfb	(i2___lldiv@dividend+3)^0,w,c
  7018  002FC8  A0D8               	btfss	status,0,c
  7019  002FCA  EFE9  F017         	goto	i2u264_41
  7020  002FCE  EFEB  F017         	goto	i2u264_40
  7021  002FD2                     i2u264_41:
  7022  002FD2  EFF4  F017         	goto	i2l2676
  7023  002FD6                     i2u264_40:
  7024  002FD6  5005               	movf	i2___lldiv@divisor^0,w,c
  7025  002FD8  5E01               	subwf	i2___lldiv@dividend^0,f,c
  7026  002FDA  5006               	movf	(i2___lldiv@divisor+1)^0,w,c
  7027  002FDC  5A02               	subwfb	(i2___lldiv@dividend+1)^0,f,c
  7028  002FDE  5007               	movf	(i2___lldiv@divisor+2)^0,w,c
  7029  002FE0  5A03               	subwfb	(i2___lldiv@dividend+2)^0,f,c
  7030  002FE2  5008               	movf	(i2___lldiv@divisor+3)^0,w,c
  7031  002FE4  5A04               	subwfb	(i2___lldiv@dividend+3)^0,f,c
  7032  002FE6  8009               	bsf	i2___lldiv@quotient^0,0,c
  7033  002FE8                     i2l2676:
  7034  002FE8  90D8               	bcf	status,0,c
  7035  002FEA  3208               	rrcf	(i2___lldiv@divisor+3)^0,f,c
  7036  002FEC  3207               	rrcf	(i2___lldiv@divisor+2)^0,f,c
  7037  002FEE  3206               	rrcf	(i2___lldiv@divisor+1)^0,f,c
  7038  002FF0  3205               	rrcf	i2___lldiv@divisor^0,f,c
  7039  002FF2  2E0D               	decfsz	i2___lldiv@counter^0,f,c
  7040  002FF4  EFD7  F017         	goto	i2l2668
  7041  002FF8                     i2l263:
  7042  002FF8  C009  F001         	movff	i2___lldiv@quotient,?i2___lldiv
  7043  002FFC  C00A  F002         	movff	i2___lldiv@quotient+1,?i2___lldiv+1
  7044  003000  C00B  F003         	movff	i2___lldiv@quotient+2,?i2___lldiv+2
  7045  003004  C00C  F004         	movff	i2___lldiv@quotient+3,?i2___lldiv+3
  7046  003008  0012               	return		;funcret
  7047  00300A                     __end_ofi2___lldiv:
  7048                           	callstack 0
  7049                           
  7050 ;; *************** function ___lmul *****************
  7051 ;; Defined at:
  7052 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul32.c"
  7053 ;; Parameters:    Size  Location     Type
  7054 ;;  multiplier      4    0[COMRAM] unsigned long 
  7055 ;;  multiplicand    4    4[COMRAM] unsigned long 
  7056 ;; Auto vars:     Size  Location     Type
  7057 ;;  product         4    8[COMRAM] unsigned long 
  7058 ;; Return value:  Size  Location     Type
  7059 ;;                  4    0[COMRAM] unsigned long 
  7060 ;; Registers used:
  7061 ;;		wreg, status,2, status,0
  7062 ;; Tracked objects:
  7063 ;;		On entry : 0/0
  7064 ;;		On exit  : 0/0
  7065 ;;		Unchanged: 0/0
  7066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7067 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7068 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7070 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7071 ;;Total ram usage:       12 bytes
  7072 ;; Hardware stack levels used: 1
  7073 ;; This function calls:
  7074 ;;		Nothing
  7075 ;; This function is called by:
  7076 ;;		_Convert_data
  7077 ;;		_atol
  7078 ;; This function uses a non-reentrant model
  7079 ;;
  7080                           
  7081                           	psect	text27
  7082  0032AA                     __ptext27:
  7083                           	callstack 0
  7084  0032AA                     ___lmul:
  7085                           	callstack 24
  7086  0032AA  0E00               	movlw	0
  7087  0032AC  6E09               	movwf	___lmul@product^0,c
  7088  0032AE  0E00               	movlw	0
  7089  0032B0  6E0A               	movwf	(___lmul@product+1)^0,c
  7090  0032B2  0E00               	movlw	0
  7091  0032B4  6E0B               	movwf	(___lmul@product+2)^0,c
  7092  0032B6  0E00               	movlw	0
  7093  0032B8  6E0C               	movwf	(___lmul@product+3)^0,c
  7094  0032BA                     i2l2074:
  7095  0032BA  A001               	btfss	___lmul@multiplier^0,0,c
  7096  0032BC  EF62  F019         	goto	i2u158_41
  7097  0032C0  EF64  F019         	goto	i2u158_40
  7098  0032C4                     i2u158_41:
  7099  0032C4  EF6C  F019         	goto	i2l2078
  7100  0032C8                     i2u158_40:
  7101  0032C8  5005               	movf	___lmul@multiplicand^0,w,c
  7102  0032CA  2609               	addwf	___lmul@product^0,f,c
  7103  0032CC  5006               	movf	(___lmul@multiplicand+1)^0,w,c
  7104  0032CE  220A               	addwfc	(___lmul@product+1)^0,f,c
  7105  0032D0  5007               	movf	(___lmul@multiplicand+2)^0,w,c
  7106  0032D2  220B               	addwfc	(___lmul@product+2)^0,f,c
  7107  0032D4  5008               	movf	(___lmul@multiplicand+3)^0,w,c
  7108  0032D6  220C               	addwfc	(___lmul@product+3)^0,f,c
  7109  0032D8                     i2l2078:
  7110  0032D8  90D8               	bcf	status,0,c
  7111  0032DA  3605               	rlcf	___lmul@multiplicand^0,f,c
  7112  0032DC  3606               	rlcf	(___lmul@multiplicand+1)^0,f,c
  7113  0032DE  3607               	rlcf	(___lmul@multiplicand+2)^0,f,c
  7114  0032E0  3608               	rlcf	(___lmul@multiplicand+3)^0,f,c
  7115  0032E2  90D8               	bcf	status,0,c
  7116  0032E4  3204               	rrcf	(___lmul@multiplier+3)^0,f,c
  7117  0032E6  3203               	rrcf	(___lmul@multiplier+2)^0,f,c
  7118  0032E8  3202               	rrcf	(___lmul@multiplier+1)^0,f,c
  7119  0032EA  3201               	rrcf	___lmul@multiplier^0,f,c
  7120  0032EC  5001               	movf	___lmul@multiplier^0,w,c
  7121  0032EE  1002               	iorwf	(___lmul@multiplier+1)^0,w,c
  7122  0032F0  1003               	iorwf	(___lmul@multiplier+2)^0,w,c
  7123  0032F2  1004               	iorwf	(___lmul@multiplier+3)^0,w,c
  7124  0032F4  A4D8               	btfss	status,2,c
  7125  0032F6  EF7F  F019         	goto	i2u159_41
  7126  0032FA  EF81  F019         	goto	i2u159_40
  7127  0032FE                     i2u159_41:
  7128  0032FE  EF5D  F019         	goto	i2l2074
  7129  003302                     i2u159_40:
  7130  003302  C009  F001         	movff	___lmul@product,?___lmul
  7131  003306  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  7132  00330A  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  7133  00330E  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  7134  003312  0012               	return		;funcret
  7135  003314                     __end_of___lmul:
  7136                           	callstack 0
  7137                           
  7138                           	psect	rparam
  7139  0000                     
  7140                           	psect	temp
  7141  00004E                     btemp:
  7142                           	callstack 0
  7143  00004E                     	ds	1
  7144  0000                     int$flags	set	btemp
  7145  0000                     wtemp8	set	btemp+1
  7146  0000                     ttemp5	set	btemp+1
  7147  0000                     ttemp6	set	btemp+4
  7148  0000                     ttemp7	set	btemp+8
  7149                           
  7150                           	psect	idloc
  7151                           
  7152                           ;Config register IDLOC0 @ 0x200000
  7153                           ;	unspecified, using default values
  7154  200000                     	org	2097152
  7155  200000  FFFF               	dw	65535
  7156                           
  7157                           ;Config register IDLOC1 @ 0x200002
  7158                           ;	unspecified, using default values
  7159  200002                     	org	2097154
  7160  200002  FFFF               	dw	65535
  7161                           
  7162                           ;Config register IDLOC2 @ 0x200004
  7163                           ;	unspecified, using default values
  7164  200004                     	org	2097156
  7165  200004  FFFF               	dw	65535
  7166                           
  7167                           ;Config register IDLOC3 @ 0x200006
  7168                           ;	unspecified, using default values
  7169  200006                     	org	2097158
  7170  200006  FFFF               	dw	65535
  7171                           
  7172                           ;Config register IDLOC4 @ 0x200008
  7173                           ;	unspecified, using default values
  7174  200008                     	org	2097160
  7175  200008  FFFF               	dw	65535
  7176                           
  7177                           ;Config register IDLOC5 @ 0x20000A
  7178                           ;	unspecified, using default values
  7179  20000A                     	org	2097162
  7180  20000A  FFFF               	dw	65535
  7181                           
  7182                           ;Config register IDLOC6 @ 0x20000C
  7183                           ;	unspecified, using default values
  7184  20000C                     	org	2097164
  7185  20000C  FFFF               	dw	65535
  7186                           
  7187                           ;Config register IDLOC7 @ 0x20000E
  7188                           ;	unspecified, using default values
  7189  20000E                     	org	2097166
  7190  20000E  FFFF               	dw	65535
  7191                           
  7192                           ;Config register IDLOC8 @ 0x200010
  7193                           ;	unspecified, using default values
  7194  200010                     	org	2097168
  7195  200010  FFFF               	dw	65535
  7196                           
  7197                           ;Config register IDLOC9 @ 0x200012
  7198                           ;	unspecified, using default values
  7199  200012                     	org	2097170
  7200  200012  FFFF               	dw	65535
  7201                           
  7202                           ;Config register IDLOC10 @ 0x200014
  7203                           ;	unspecified, using default values
  7204  200014                     	org	2097172
  7205  200014  FFFF               	dw	65535
  7206                           
  7207                           ;Config register IDLOC11 @ 0x200016
  7208                           ;	unspecified, using default values
  7209  200016                     	org	2097174
  7210  200016  FFFF               	dw	65535
  7211                           
  7212                           ;Config register IDLOC12 @ 0x200018
  7213                           ;	unspecified, using default values
  7214  200018                     	org	2097176
  7215  200018  FFFF               	dw	65535
  7216                           
  7217                           ;Config register IDLOC13 @ 0x20001A
  7218                           ;	unspecified, using default values
  7219  20001A                     	org	2097178
  7220  20001A  FFFF               	dw	65535
  7221                           
  7222                           ;Config register IDLOC14 @ 0x20001C
  7223                           ;	unspecified, using default values
  7224  20001C                     	org	2097180
  7225  20001C  FFFF               	dw	65535
  7226                           
  7227                           ;Config register IDLOC15 @ 0x20001E
  7228                           ;	unspecified, using default values
  7229  20001E                     	org	2097182
  7230  20001E  FFFF               	dw	65535
  7231                           
  7232                           ;Config register IDLOC16 @ 0x200020
  7233                           ;	unspecified, using default values
  7234  200020                     	org	2097184
  7235  200020  FFFF               	dw	65535
  7236                           
  7237                           ;Config register IDLOC17 @ 0x200022
  7238                           ;	unspecified, using default values
  7239  200022                     	org	2097186
  7240  200022  FFFF               	dw	65535
  7241                           
  7242                           ;Config register IDLOC18 @ 0x200024
  7243                           ;	unspecified, using default values
  7244  200024                     	org	2097188
  7245  200024  FFFF               	dw	65535
  7246                           
  7247                           ;Config register IDLOC19 @ 0x200026
  7248                           ;	unspecified, using default values
  7249  200026                     	org	2097190
  7250  200026  FFFF               	dw	65535
  7251                           
  7252                           ;Config register IDLOC20 @ 0x200028
  7253                           ;	unspecified, using default values
  7254  200028                     	org	2097192
  7255  200028  FFFF               	dw	65535
  7256                           
  7257                           ;Config register IDLOC21 @ 0x20002A
  7258                           ;	unspecified, using default values
  7259  20002A                     	org	2097194
  7260  20002A  FFFF               	dw	65535
  7261                           
  7262                           ;Config register IDLOC22 @ 0x20002C
  7263                           ;	unspecified, using default values
  7264  20002C                     	org	2097196
  7265  20002C  FFFF               	dw	65535
  7266                           
  7267                           ;Config register IDLOC23 @ 0x20002E
  7268                           ;	unspecified, using default values
  7269  20002E                     	org	2097198
  7270  20002E  FFFF               	dw	65535
  7271                           
  7272                           ;Config register IDLOC24 @ 0x200030
  7273                           ;	unspecified, using default values
  7274  200030                     	org	2097200
  7275  200030  FFFF               	dw	65535
  7276                           
  7277                           ;Config register IDLOC25 @ 0x200032
  7278                           ;	unspecified, using default values
  7279  200032                     	org	2097202
  7280  200032  FFFF               	dw	65535
  7281                           
  7282                           ;Config register IDLOC26 @ 0x200034
  7283                           ;	unspecified, using default values
  7284  200034                     	org	2097204
  7285  200034  FFFF               	dw	65535
  7286                           
  7287                           ;Config register IDLOC27 @ 0x200036
  7288                           ;	unspecified, using default values
  7289  200036                     	org	2097206
  7290  200036  FFFF               	dw	65535
  7291                           
  7292                           ;Config register IDLOC28 @ 0x200038
  7293                           ;	unspecified, using default values
  7294  200038                     	org	2097208
  7295  200038  FFFF               	dw	65535
  7296                           
  7297                           ;Config register IDLOC29 @ 0x20003A
  7298                           ;	unspecified, using default values
  7299  20003A                     	org	2097210
  7300  20003A  FFFF               	dw	65535
  7301                           
  7302                           ;Config register IDLOC30 @ 0x20003C
  7303                           ;	unspecified, using default values
  7304  20003C                     	org	2097212
  7305  20003C  FFFF               	dw	65535
  7306                           
  7307                           ;Config register IDLOC31 @ 0x20003E
  7308                           ;	unspecified, using default values
  7309  20003E                     	org	2097214
  7310  20003E  FFFF               	dw	65535
  7311                           
  7312                           ;Config register IDLOC32 @ 0x200040
  7313                           ;	unspecified, using default values
  7314  200040                     	org	2097216
  7315  200040  FFFF               	dw	65535
  7316                           
  7317                           ;Config register IDLOC33 @ 0x200042
  7318                           ;	unspecified, using default values
  7319  200042                     	org	2097218
  7320  200042  FFFF               	dw	65535
  7321                           
  7322                           ;Config register IDLOC34 @ 0x200044
  7323                           ;	unspecified, using default values
  7324  200044                     	org	2097220
  7325  200044  FFFF               	dw	65535
  7326                           
  7327                           ;Config register IDLOC35 @ 0x200046
  7328                           ;	unspecified, using default values
  7329  200046                     	org	2097222
  7330  200046  FFFF               	dw	65535
  7331                           
  7332                           ;Config register IDLOC36 @ 0x200048
  7333                           ;	unspecified, using default values
  7334  200048                     	org	2097224
  7335  200048  FFFF               	dw	65535
  7336                           
  7337                           ;Config register IDLOC37 @ 0x20004A
  7338                           ;	unspecified, using default values
  7339  20004A                     	org	2097226
  7340  20004A  FFFF               	dw	65535
  7341                           
  7342                           ;Config register IDLOC38 @ 0x20004C
  7343                           ;	unspecified, using default values
  7344  20004C                     	org	2097228
  7345  20004C  FFFF               	dw	65535
  7346                           
  7347                           ;Config register IDLOC39 @ 0x20004E
  7348                           ;	unspecified, using default values
  7349  20004E                     	org	2097230
  7350  20004E  FFFF               	dw	65535
  7351                           
  7352                           ;Config register IDLOC40 @ 0x200050
  7353                           ;	unspecified, using default values
  7354  200050                     	org	2097232
  7355  200050  FFFF               	dw	65535
  7356                           
  7357                           ;Config register IDLOC41 @ 0x200052
  7358                           ;	unspecified, using default values
  7359  200052                     	org	2097234
  7360  200052  FFFF               	dw	65535
  7361                           
  7362                           ;Config register IDLOC42 @ 0x200054
  7363                           ;	unspecified, using default values
  7364  200054                     	org	2097236
  7365  200054  FFFF               	dw	65535
  7366                           
  7367                           ;Config register IDLOC43 @ 0x200056
  7368                           ;	unspecified, using default values
  7369  200056                     	org	2097238
  7370  200056  FFFF               	dw	65535
  7371                           
  7372                           ;Config register IDLOC44 @ 0x200058
  7373                           ;	unspecified, using default values
  7374  200058                     	org	2097240
  7375  200058  FFFF               	dw	65535
  7376                           
  7377                           ;Config register IDLOC45 @ 0x20005A
  7378                           ;	unspecified, using default values
  7379  20005A                     	org	2097242
  7380  20005A  FFFF               	dw	65535
  7381                           
  7382                           ;Config register IDLOC46 @ 0x20005C
  7383                           ;	unspecified, using default values
  7384  20005C                     	org	2097244
  7385  20005C  FFFF               	dw	65535
  7386                           
  7387                           ;Config register IDLOC47 @ 0x20005E
  7388                           ;	unspecified, using default values
  7389  20005E                     	org	2097246
  7390  20005E  FFFF               	dw	65535
  7391                           
  7392                           ;Config register IDLOC48 @ 0x200060
  7393                           ;	unspecified, using default values
  7394  200060                     	org	2097248
  7395  200060  FFFF               	dw	65535
  7396                           
  7397                           ;Config register IDLOC49 @ 0x200062
  7398                           ;	unspecified, using default values
  7399  200062                     	org	2097250
  7400  200062  FFFF               	dw	65535
  7401                           
  7402                           ;Config register IDLOC50 @ 0x200064
  7403                           ;	unspecified, using default values
  7404  200064                     	org	2097252
  7405  200064  FFFF               	dw	65535
  7406                           
  7407                           ;Config register IDLOC51 @ 0x200066
  7408                           ;	unspecified, using default values
  7409  200066                     	org	2097254
  7410  200066  FFFF               	dw	65535
  7411                           
  7412                           ;Config register IDLOC52 @ 0x200068
  7413                           ;	unspecified, using default values
  7414  200068                     	org	2097256
  7415  200068  FFFF               	dw	65535
  7416                           
  7417                           ;Config register IDLOC53 @ 0x20006A
  7418                           ;	unspecified, using default values
  7419  20006A                     	org	2097258
  7420  20006A  FFFF               	dw	65535
  7421                           
  7422                           ;Config register IDLOC54 @ 0x20006C
  7423                           ;	unspecified, using default values
  7424  20006C                     	org	2097260
  7425  20006C  FFFF               	dw	65535
  7426                           
  7427                           ;Config register IDLOC55 @ 0x20006E
  7428                           ;	unspecified, using default values
  7429  20006E                     	org	2097262
  7430  20006E  FFFF               	dw	65535
  7431                           
  7432                           ;Config register IDLOC56 @ 0x200070
  7433                           ;	unspecified, using default values
  7434  200070                     	org	2097264
  7435  200070  FFFF               	dw	65535
  7436                           
  7437                           ;Config register IDLOC57 @ 0x200072
  7438                           ;	unspecified, using default values
  7439  200072                     	org	2097266
  7440  200072  FFFF               	dw	65535
  7441                           
  7442                           ;Config register IDLOC58 @ 0x200074
  7443                           ;	unspecified, using default values
  7444  200074                     	org	2097268
  7445  200074  FFFF               	dw	65535
  7446                           
  7447                           ;Config register IDLOC59 @ 0x200076
  7448                           ;	unspecified, using default values
  7449  200076                     	org	2097270
  7450  200076  FFFF               	dw	65535
  7451                           
  7452                           ;Config register IDLOC60 @ 0x200078
  7453                           ;	unspecified, using default values
  7454  200078                     	org	2097272
  7455  200078  FFFF               	dw	65535
  7456                           
  7457                           ;Config register IDLOC61 @ 0x20007A
  7458                           ;	unspecified, using default values
  7459  20007A                     	org	2097274
  7460  20007A  FFFF               	dw	65535
  7461                           
  7462                           ;Config register IDLOC62 @ 0x20007C
  7463                           ;	unspecified, using default values
  7464  20007C                     	org	2097276
  7465  20007C  FFFF               	dw	65535
  7466                           
  7467                           ;Config register IDLOC63 @ 0x20007E
  7468                           ;	unspecified, using default values
  7469  20007E                     	org	2097278
  7470  20007E  FFFF               	dw	65535
  7471                           
  7472                           ;Config register IDLOC64 @ 0x200080
  7473                           ;	unspecified, using default values
  7474  200080                     	org	2097280
  7475  200080  FFFF               	dw	65535
  7476                           
  7477                           ;Config register IDLOC65 @ 0x200082
  7478                           ;	unspecified, using default values
  7479  200082                     	org	2097282
  7480  200082  FFFF               	dw	65535
  7481                           
  7482                           ;Config register IDLOC66 @ 0x200084
  7483                           ;	unspecified, using default values
  7484  200084                     	org	2097284
  7485  200084  FFFF               	dw	65535
  7486                           
  7487                           ;Config register IDLOC67 @ 0x200086
  7488                           ;	unspecified, using default values
  7489  200086                     	org	2097286
  7490  200086  FFFF               	dw	65535
  7491                           
  7492                           ;Config register IDLOC68 @ 0x200088
  7493                           ;	unspecified, using default values
  7494  200088                     	org	2097288
  7495  200088  FFFF               	dw	65535
  7496                           
  7497                           ;Config register IDLOC69 @ 0x20008A
  7498                           ;	unspecified, using default values
  7499  20008A                     	org	2097290
  7500  20008A  FFFF               	dw	65535
  7501                           
  7502                           ;Config register IDLOC70 @ 0x20008C
  7503                           ;	unspecified, using default values
  7504  20008C                     	org	2097292
  7505  20008C  FFFF               	dw	65535
  7506                           
  7507                           ;Config register IDLOC71 @ 0x20008E
  7508                           ;	unspecified, using default values
  7509  20008E                     	org	2097294
  7510  20008E  FFFF               	dw	65535
  7511                           
  7512                           ;Config register IDLOC72 @ 0x200090
  7513                           ;	unspecified, using default values
  7514  200090                     	org	2097296
  7515  200090  FFFF               	dw	65535
  7516                           
  7517                           ;Config register IDLOC73 @ 0x200092
  7518                           ;	unspecified, using default values
  7519  200092                     	org	2097298
  7520  200092  FFFF               	dw	65535
  7521                           
  7522                           ;Config register IDLOC74 @ 0x200094
  7523                           ;	unspecified, using default values
  7524  200094                     	org	2097300
  7525  200094  FFFF               	dw	65535
  7526                           
  7527                           ;Config register IDLOC75 @ 0x200096
  7528                           ;	unspecified, using default values
  7529  200096                     	org	2097302
  7530  200096  FFFF               	dw	65535
  7531                           
  7532                           ;Config register IDLOC76 @ 0x200098
  7533                           ;	unspecified, using default values
  7534  200098                     	org	2097304
  7535  200098  FFFF               	dw	65535
  7536                           
  7537                           ;Config register IDLOC77 @ 0x20009A
  7538                           ;	unspecified, using default values
  7539  20009A                     	org	2097306
  7540  20009A  FFFF               	dw	65535
  7541                           
  7542                           ;Config register IDLOC78 @ 0x20009C
  7543                           ;	unspecified, using default values
  7544  20009C                     	org	2097308
  7545  20009C  FFFF               	dw	65535
  7546                           
  7547                           ;Config register IDLOC79 @ 0x20009E
  7548                           ;	unspecified, using default values
  7549  20009E                     	org	2097310
  7550  20009E  FFFF               	dw	65535
  7551                           
  7552                           ;Config register IDLOC80 @ 0x2000A0
  7553                           ;	unspecified, using default values
  7554  2000A0                     	org	2097312
  7555  2000A0  FFFF               	dw	65535
  7556                           
  7557                           ;Config register IDLOC81 @ 0x2000A2
  7558                           ;	unspecified, using default values
  7559  2000A2                     	org	2097314
  7560  2000A2  FFFF               	dw	65535
  7561                           
  7562                           ;Config register IDLOC82 @ 0x2000A4
  7563                           ;	unspecified, using default values
  7564  2000A4                     	org	2097316
  7565  2000A4  FFFF               	dw	65535
  7566                           
  7567                           ;Config register IDLOC83 @ 0x2000A6
  7568                           ;	unspecified, using default values
  7569  2000A6                     	org	2097318
  7570  2000A6  FFFF               	dw	65535
  7571                           
  7572                           ;Config register IDLOC84 @ 0x2000A8
  7573                           ;	unspecified, using default values
  7574  2000A8                     	org	2097320
  7575  2000A8  FFFF               	dw	65535
  7576                           
  7577                           ;Config register IDLOC85 @ 0x2000AA
  7578                           ;	unspecified, using default values
  7579  2000AA                     	org	2097322
  7580  2000AA  FFFF               	dw	65535
  7581                           
  7582                           ;Config register IDLOC86 @ 0x2000AC
  7583                           ;	unspecified, using default values
  7584  2000AC                     	org	2097324
  7585  2000AC  FFFF               	dw	65535
  7586                           
  7587                           ;Config register IDLOC87 @ 0x2000AE
  7588                           ;	unspecified, using default values
  7589  2000AE                     	org	2097326
  7590  2000AE  FFFF               	dw	65535
  7591                           
  7592                           ;Config register IDLOC88 @ 0x2000B0
  7593                           ;	unspecified, using default values
  7594  2000B0                     	org	2097328
  7595  2000B0  FFFF               	dw	65535
  7596                           
  7597                           ;Config register IDLOC89 @ 0x2000B2
  7598                           ;	unspecified, using default values
  7599  2000B2                     	org	2097330
  7600  2000B2  FFFF               	dw	65535
  7601                           
  7602                           ;Config register IDLOC90 @ 0x2000B4
  7603                           ;	unspecified, using default values
  7604  2000B4                     	org	2097332
  7605  2000B4  FFFF               	dw	65535
  7606                           
  7607                           ;Config register IDLOC91 @ 0x2000B6
  7608                           ;	unspecified, using default values
  7609  2000B6                     	org	2097334
  7610  2000B6  FFFF               	dw	65535
  7611                           
  7612                           ;Config register IDLOC92 @ 0x2000B8
  7613                           ;	unspecified, using default values
  7614  2000B8                     	org	2097336
  7615  2000B8  FFFF               	dw	65535
  7616                           
  7617                           ;Config register IDLOC93 @ 0x2000BA
  7618                           ;	unspecified, using default values
  7619  2000BA                     	org	2097338
  7620  2000BA  FFFF               	dw	65535
  7621                           
  7622                           ;Config register IDLOC94 @ 0x2000BC
  7623                           ;	unspecified, using default values
  7624  2000BC                     	org	2097340
  7625  2000BC  FFFF               	dw	65535
  7626                           
  7627                           ;Config register IDLOC95 @ 0x2000BE
  7628                           ;	unspecified, using default values
  7629  2000BE                     	org	2097342
  7630  2000BE  FFFF               	dw	65535
  7631                           
  7632                           ;Config register IDLOC96 @ 0x2000C0
  7633                           ;	unspecified, using default values
  7634  2000C0                     	org	2097344
  7635  2000C0  FFFF               	dw	65535
  7636                           
  7637                           ;Config register IDLOC97 @ 0x2000C2
  7638                           ;	unspecified, using default values
  7639  2000C2                     	org	2097346
  7640  2000C2  FFFF               	dw	65535
  7641                           
  7642                           ;Config register IDLOC98 @ 0x2000C4
  7643                           ;	unspecified, using default values
  7644  2000C4                     	org	2097348
  7645  2000C4  FFFF               	dw	65535
  7646                           
  7647                           ;Config register IDLOC99 @ 0x2000C6
  7648                           ;	unspecified, using default values
  7649  2000C6                     	org	2097350
  7650  2000C6  FFFF               	dw	65535
  7651                           
  7652                           ;Config register IDLOC100 @ 0x2000C8
  7653                           ;	unspecified, using default values
  7654  2000C8                     	org	2097352
  7655  2000C8  FFFF               	dw	65535
  7656                           
  7657                           ;Config register IDLOC101 @ 0x2000CA
  7658                           ;	unspecified, using default values
  7659  2000CA                     	org	2097354
  7660  2000CA  FFFF               	dw	65535
  7661                           
  7662                           ;Config register IDLOC102 @ 0x2000CC
  7663                           ;	unspecified, using default values
  7664  2000CC                     	org	2097356
  7665  2000CC  FFFF               	dw	65535
  7666                           
  7667                           ;Config register IDLOC103 @ 0x2000CE
  7668                           ;	unspecified, using default values
  7669  2000CE                     	org	2097358
  7670  2000CE  FFFF               	dw	65535
  7671                           
  7672                           ;Config register IDLOC104 @ 0x2000D0
  7673                           ;	unspecified, using default values
  7674  2000D0                     	org	2097360
  7675  2000D0  FFFF               	dw	65535
  7676                           
  7677                           ;Config register IDLOC105 @ 0x2000D2
  7678                           ;	unspecified, using default values
  7679  2000D2                     	org	2097362
  7680  2000D2  FFFF               	dw	65535
  7681                           
  7682                           ;Config register IDLOC106 @ 0x2000D4
  7683                           ;	unspecified, using default values
  7684  2000D4                     	org	2097364
  7685  2000D4  FFFF               	dw	65535
  7686                           
  7687                           ;Config register IDLOC107 @ 0x2000D6
  7688                           ;	unspecified, using default values
  7689  2000D6                     	org	2097366
  7690  2000D6  FFFF               	dw	65535
  7691                           
  7692                           ;Config register IDLOC108 @ 0x2000D8
  7693                           ;	unspecified, using default values
  7694  2000D8                     	org	2097368
  7695  2000D8  FFFF               	dw	65535
  7696                           
  7697                           ;Config register IDLOC109 @ 0x2000DA
  7698                           ;	unspecified, using default values
  7699  2000DA                     	org	2097370
  7700  2000DA  FFFF               	dw	65535
  7701                           
  7702                           ;Config register IDLOC110 @ 0x2000DC
  7703                           ;	unspecified, using default values
  7704  2000DC                     	org	2097372
  7705  2000DC  FFFF               	dw	65535
  7706                           
  7707                           ;Config register IDLOC111 @ 0x2000DE
  7708                           ;	unspecified, using default values
  7709  2000DE                     	org	2097374
  7710  2000DE  FFFF               	dw	65535
  7711                           
  7712                           ;Config register IDLOC112 @ 0x2000E0
  7713                           ;	unspecified, using default values
  7714  2000E0                     	org	2097376
  7715  2000E0  FFFF               	dw	65535
  7716                           
  7717                           ;Config register IDLOC113 @ 0x2000E2
  7718                           ;	unspecified, using default values
  7719  2000E2                     	org	2097378
  7720  2000E2  FFFF               	dw	65535
  7721                           
  7722                           ;Config register IDLOC114 @ 0x2000E4
  7723                           ;	unspecified, using default values
  7724  2000E4                     	org	2097380
  7725  2000E4  FFFF               	dw	65535
  7726                           
  7727                           ;Config register IDLOC115 @ 0x2000E6
  7728                           ;	unspecified, using default values
  7729  2000E6                     	org	2097382
  7730  2000E6  FFFF               	dw	65535
  7731                           
  7732                           ;Config register IDLOC116 @ 0x2000E8
  7733                           ;	unspecified, using default values
  7734  2000E8                     	org	2097384
  7735  2000E8  FFFF               	dw	65535
  7736                           
  7737                           ;Config register IDLOC117 @ 0x2000EA
  7738                           ;	unspecified, using default values
  7739  2000EA                     	org	2097386
  7740  2000EA  FFFF               	dw	65535
  7741                           
  7742                           ;Config register IDLOC118 @ 0x2000EC
  7743                           ;	unspecified, using default values
  7744  2000EC                     	org	2097388
  7745  2000EC  FFFF               	dw	65535
  7746                           
  7747                           ;Config register IDLOC119 @ 0x2000EE
  7748                           ;	unspecified, using default values
  7749  2000EE                     	org	2097390
  7750  2000EE  FFFF               	dw	65535
  7751                           
  7752                           ;Config register IDLOC120 @ 0x2000F0
  7753                           ;	unspecified, using default values
  7754  2000F0                     	org	2097392
  7755  2000F0  FFFF               	dw	65535
  7756                           
  7757                           ;Config register IDLOC121 @ 0x2000F2
  7758                           ;	unspecified, using default values
  7759  2000F2                     	org	2097394
  7760  2000F2  FFFF               	dw	65535
  7761                           
  7762                           ;Config register IDLOC122 @ 0x2000F4
  7763                           ;	unspecified, using default values
  7764  2000F4                     	org	2097396
  7765  2000F4  FFFF               	dw	65535
  7766                           
  7767                           ;Config register IDLOC123 @ 0x2000F6
  7768                           ;	unspecified, using default values
  7769  2000F6                     	org	2097398
  7770  2000F6  FFFF               	dw	65535
  7771                           
  7772                           ;Config register IDLOC124 @ 0x2000F8
  7773                           ;	unspecified, using default values
  7774  2000F8                     	org	2097400
  7775  2000F8  FFFF               	dw	65535
  7776                           
  7777                           ;Config register IDLOC125 @ 0x2000FA
  7778                           ;	unspecified, using default values
  7779  2000FA                     	org	2097402
  7780  2000FA  FFFF               	dw	65535
  7781                           
  7782                           ;Config register IDLOC126 @ 0x2000FC
  7783                           ;	unspecified, using default values
  7784  2000FC                     	org	2097404
  7785  2000FC  FFFF               	dw	65535
  7786                           
  7787                           ;Config register IDLOC127 @ 0x2000FE
  7788                           ;	unspecified, using default values
  7789  2000FE                     	org	2097406
  7790  2000FE  FFFF               	dw	65535
  7791                           
  7792                           	psect	config
  7793                           
  7794                           ;Config register CONFIG1L @ 0x300000
  7795                           ;	External Oscillator mode Selection bits
  7796                           ;	FEXTOSC = OFF, Oscillator not enabled
  7797                           ;	Power-up default value for COSC bits
  7798                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
  7799  300000                     	org	3145728
  7800  300000  8C                 	db	140
  7801                           
  7802                           ;Config register CONFIG1H @ 0x300001
  7803                           ;	Clock Out Enable bit
  7804                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  7805                           ;	Clock Switch Enable bit
  7806                           ;	CSWEN = OFF, The NOSC and NDIV bits cannot be changed by user software
  7807                           ;	Fail-Safe Clock Monitor Enable bit
  7808                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  7809  300001                     	org	3145729
  7810  300001  D7                 	db	215
  7811                           
  7812                           ;Config register CONFIG2L @ 0x300002
  7813                           ;	Master Clear Enable bit
  7814                           ;	MCLRE = INTMCLR, If LVP = 0, MCLR pin (RE3) is an input; If LVP =1, MCLR pin (RE3) is 
      +                          MCLR
  7815                           ;	Power-up Timer Enable bit
  7816                           ;	PWRTE = OFF, Power up timer disabled
  7817                           ;	Low-power BOR enable bit
  7818                           ;	LPBOREN = OFF, Low power BOR is disabled
  7819                           ;	Brown-out Reset Enable bits
  7820                           ;	BOREN = ON, Brown-out Reset enabled according to SBOREN
  7821  300002                     	org	3145730
  7822  300002  7E                 	db	126
  7823                           
  7824                           ;Config register CONFIG2H @ 0x300003
  7825                           ;	Brown Out Reset Voltage selection bits
  7826                           ;	BORV = VBOR_190, Brown-out Reset Voltage (VBOR) set to 1.90V
  7827                           ;	ZCD Disable bit
  7828                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  7829                           ;	PPSLOCK bit One-Way Set Enable bit
  7830                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
  7831                           ;	Stack Full/Underflow Reset Enable bit
  7832                           ;	STVREN = ON, Stack full/underflow will cause Reset
  7833                           ;	Extended Instruction Set Enable bit
  7834                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  7835  300003                     	org	3145731
  7836  300003  FF                 	db	255
  7837                           
  7838                           ;Config register CONFIG3L @ 0x300004
  7839                           ;	WDT Period Select bits
  7840                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  7841                           ;	WDT operating mode
  7842                           ;	WDTE = OFF, WDT Disabled
  7843  300004                     	org	3145732
  7844  300004  9F                 	db	159
  7845                           
  7846                           ;Config register CONFIG3H @ 0x300005
  7847                           ;	WDT Window Select bits
  7848                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  7849                           ;	WDT input clock selector
  7850                           ;	WDTCCS = SC, Software Control
  7851  300005                     	org	3145733
  7852  300005  FF                 	db	255
  7853                           
  7854                           ;Config register CONFIG4L @ 0x300006
  7855                           ;	Write Protection Block 0
  7856                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  7857                           ;	Write Protection Block 1
  7858                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  7859                           ;	Write Protection Block 2
  7860                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  7861                           ;	Write Protection Block 3
  7862                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  7863                           ;	Write Protection Block 4
  7864                           ;	WRT4 = OFF, Block 4 (010000-013FFFh) not write-protected
  7865                           ;	Write Protection Block 5
  7866                           ;	WRT5 = OFF, Block 5 (014000-017FFFh) not write-protected
  7867                           ;	Write Protection Block 6
  7868                           ;	WRT6 = OFF, Block 6 (018000-01BFFFh) not write-protected
  7869                           ;	Write Protection Block 7
  7870                           ;	WRT7 = OFF, Block 7 (01C000-01FFFFh) not write-protected
  7871  300006                     	org	3145734
  7872  300006  FF                 	db	255
  7873                           
  7874                           ;Config register CONFIG4H @ 0x300007
  7875                           ;	Configuration Register Write Protection bit
  7876                           ;	WRTC = OFF, Configuration registers (300000-30000Bh) not write-protected
  7877                           ;	Boot Block Write Protection bit
  7878                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  7879                           ;	Data EEPROM Write Protection bit
  7880                           ;	WRTD = OFF, Data EEPROM not write-protected
  7881                           ;	Scanner Enable bit
  7882                           ;	SCANE = OFF, Scanner module is NOT available for use, SCANMD bit is ignored
  7883                           ;	Low Voltage Programming Enable bit
  7884                           ;	LVP = OFF, HV on MCLR/VPP must be used for programming
  7885  300007                     	org	3145735
  7886  300007  CF                 	db	207
  7887                           
  7888                           ;Config register CONFIG5L @ 0x300008
  7889                           ;	UserNVM Program Memory Code Protection bit
  7890                           ;	CP = OFF, UserNVM code protection disabled
  7891                           ;	DataNVM Memory Code Protection bit
  7892                           ;	CPD = OFF, DataNVM code protection disabled
  7893  300008                     	org	3145736
  7894  300008  FF                 	db	255
  7895                           
  7896                           ;Config register CONFIG5H @ 0x300009
  7897                           ;	unspecified, using default values
  7898  300009                     	org	3145737
  7899  300009  FF                 	db	255
  7900                           
  7901                           ;Config register CONFIG6L @ 0x30000A
  7902                           ;	Table Read Protection Block 0
  7903                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  7904                           ;	Table Read Protection Block 1
  7905                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  7906                           ;	Table Read Protection Block 2
  7907                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  7908                           ;	Table Read Protection Block 3
  7909                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  7910                           ;	Table Read Protection Block 4
  7911                           ;	EBTR4 = OFF, Block 4 (010000-013FFFh) not protected from table reads executed in other
      +                           blocks
  7912                           ;	Table Read Protection Block 5
  7913                           ;	EBTR5 = OFF, Block 5 (014000-017FFFh) not protected from table reads executed in other
      +                           blocks
  7914                           ;	Table Read Protection Block 6
  7915                           ;	EBTR6 = OFF, Block 6 (018000-01BFFFh) not protected from table reads executed in other
      +                           blocks
  7916                           ;	Table Read Protection Block 7
  7917                           ;	EBTR7 = OFF, Block 7 (01C000-01FFFFh) not protected from table reads executed in other
      +                           blocks
  7918  30000A                     	org	3145738
  7919  30000A  FF                 	db	255
  7920                           
  7921                           ;Config register CONFIG6H @ 0x30000B
  7922                           ;	Boot Block Table Read Protection bit
  7923                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  7924  30000B                     	org	3145739
  7925  30000B  FF                 	db	255
  7926                           tosu	equ	0xFFF
  7927                           tosh	equ	0xFFE
  7928                           tosl	equ	0xFFD
  7929                           stkptr	equ	0xFFC
  7930                           pclatu	equ	0xFFB
  7931                           pclath	equ	0xFFA
  7932                           pcl	equ	0xFF9
  7933                           tblptru	equ	0xFF8
  7934                           tblptrh	equ	0xFF7
  7935                           tblptrl	equ	0xFF6
  7936                           tablat	equ	0xFF5
  7937                           prodh	equ	0xFF4
  7938                           prodl	equ	0xFF3
  7939                           indf0	equ	0xFEF
  7940                           postinc0	equ	0xFEE
  7941                           postdec0	equ	0xFED
  7942                           preinc0	equ	0xFEC
  7943                           plusw0	equ	0xFEB
  7944                           fsr0h	equ	0xFEA
  7945                           fsr0l	equ	0xFE9
  7946                           wreg	equ	0xFE8
  7947                           indf1	equ	0xFE7
  7948                           postinc1	equ	0xFE6
  7949                           postdec1	equ	0xFE5
  7950                           preinc1	equ	0xFE4
  7951                           plusw1	equ	0xFE3
  7952                           fsr1h	equ	0xFE2
  7953                           fsr1l	equ	0xFE1
  7954                           bsr	equ	0xFE0
  7955                           indf2	equ	0xFDF
  7956                           postinc2	equ	0xFDE
  7957                           postdec2	equ	0xFDD
  7958                           preinc2	equ	0xFDC
  7959                           plusw2	equ	0xFDB
  7960                           fsr2h	equ	0xFDA
  7961                           fsr2l	equ	0xFD9
  7962                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    82
    Data        0
    BSS         25
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     61      77
    BANK0           160     92     101
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           31      0       0

Pointer List with Targets:

    memset@dest	PTR void  size(2) Largest target is 10
		 -> RTC_Read@str(COMRAM[10]), 

    memset@s	PTR unsigned char  size(2) Largest target is 10
		 -> RTC_Read@str(COMRAM[10]), 

    atol@s	PTR const unsigned char  size(2) Largest target is 10
		 -> RTC_Read@str(COMRAM[10]), 

    Bit_Write@ptr	PTR unsigned long long  size(2) Largest target is 8
		 -> VFD_Write@temp(BANK0[8]), 

    sp__memset	PTR void  size(2) Largest target is 10
		 -> RTC_Read@str(COMRAM[10]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _isr in COMRAM

    _isr->_RTC_Read
    _RTC_Read->_Convert_data
    _atol->___lmul
    _Convert_data->_atol
    i2___llmod->i2___lldiv

Critical Paths under _main in BANK0

    _init->_UART_Init
    _UART_Init->___fltol
    ___fltol->___fladd
    ___flmul->___xxtofl
    ___fldiv->___flmul
    ___fladd->___fldiv
    _VFD_Write->_Bit_Write
    ___llmod->___lldiv
    _Bit_Write->_Check_Seg
    _Duty_Controll->_Set_PWM_Duty

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isr in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   27459
                      _Duty_Controll
                             _T0_int
                          _VFD_Write
                               _init
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0    6594
                       _Set_PWM_Duty
                          _UART_Init
 ---------------------------------------------------------------------------------
 (2) _UART_Init                                            2     0      2    6332
                                             90 BANK0      2     0      2
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     398
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     305
                                             80 BANK0     10     6      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    1744
                                             14 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    1399
                                             39 BANK0     25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             16     8      8    2388
                                             64 BANK0     16     8      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _VFD_Write                                           19    15      4   20505
                                             25 BANK0     18    14      4
                          _Bit_Write
                          _Check_Seg
                      _MAX6922_Write
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8    1623
                                             13 BANK0      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8    1122
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (2) _MAX6922_Write                                       18    10      8     166
                                              0 BANK0     18    10      8
 ---------------------------------------------------------------------------------
 (2) _Check_Seg                                            4     3      1    3692
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) _Bit_Write                                           21    17      4   11304
                                              4 BANK0     21    17      4
                          _Check_Seg (ARG)
 ---------------------------------------------------------------------------------
 (1) _T0_int                                               3     1      2      98
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _Duty_Controll                                        0     0      0     262
                       _Set_PWM_Duty
 ---------------------------------------------------------------------------------
 (2) _Set_PWM_Duty                                         5     3      2     262
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  2     2      0    3993
                                             59 COMRAM     2     2      0
                           _RTC_Read
                          _UART_Read
 ---------------------------------------------------------------------------------
 (5) _UART_Read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _RTC_Read                                             3     3      0    3993
                                             56 COMRAM     3     3      0
                       _Convert_data
                               _atol
                             _memset
 ---------------------------------------------------------------------------------
 (6) _memset                                              12     6      6     947
                                              0 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (6) _atol                                                20    16      4    1439
                                             12 COMRAM    20    16      4
                             ___lmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (7) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (7) _isdigit                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _Convert_data                                        24    20      4    1541
                                             32 COMRAM    24    20      4
                             ___lmul
                               _atol (ARG)
                          i2___lldiv
                          i2___llmod
 ---------------------------------------------------------------------------------
 (7) i2___llmod                                            9     1      8     367
                                             13 COMRAM     9     1      8
                          i2___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (7) i2___lldiv                                           13     5      8     266
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (7) ___lmul                                              12     4      8     674
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Duty_Controll
     _Set_PWM_Duty
   _T0_int
   _VFD_Write
     _Bit_Write
       _Check_Seg (ARG)
     _Check_Seg
     _MAX6922_Write
     ___lldiv
     ___llmod
       ___lldiv (ARG)
   _init
     _Set_PWM_Duty
     _UART_Init
       ___fladd
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
         ___xxtofl (ARG)
       ___fldiv
       ___flmul
       ___fltol
         ___fladd (ARG)
         ___fldiv (ARG)
         ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl

 _isr (ROOT)
   _RTC_Read
     _Convert_data
       ___lmul
       _atol (ARG)
         ___lmul
         _isdigit
         _isspace
       i2___lldiv (ARG)
       i2___llmod (ARG)
         i2___lldiv (ARG)
     _atol
     _memset
   _UART_Read

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E1E      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     5C      65       5       63.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3D      4D       1       81.9%
BITBANK14           1F      0       0      33        0.0%
BANK14              1F      0       0      34        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      B2       6        0.0%
DATA                 0      0      B2       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Apr 22 22:40:38 2021

                  ___fldiv@aexp 009F                    ___fldiv@bexp 009E                    ___fldiv@sign 0097  
                            l99 3096                             l120 17A8                             l130 3442  
                           l134 31A6                             l135 31AA                             l119 0FB4  
                           l216 2EBE                             l165 34AE                             l270 2F64  
                           l263 2F54                             l169 2E14                             l179 32A8  
                           l188 3400                             l533 2D0E                             l820 2292  
                           l663 3120                             l831 2350                             l823 2256  
                           l656 3110                             l832 233E                             l905 275A  
                           l818 2432                             l850 1D32                             l764 199A  
                           l860 1F8E                             l781 1AB4                             l773 1C6A  
                           l765 1988                             l829 22D8                             l790 1B84  
                           l766 194E                             l854 2096                             l791 1B72  
                           l857 1F28                             l867 2058                             l859 1FA0  
                           l891 2666                             l894 27C2                             l898 26FE  
                           _RB3 007C6B                             _isr 0008                             wreg 000FE8  
                  ___flmul@aexp 007F                    ___flmul@bexp 0080                    ___flmul@sign 007A  
                  ___flmul@temp 0085                    ___flmul@prod 0081                  Set_PWM_Duty@ch 0064  
                  ___fltol@exp1 00B9                            l2100 1812                            l2110 1840  
                          l2102 1818                            l3000 15CE                            l2200 1A16  
                          l2120 1874                            l2112 1842                            l2104 182A  
                          l3010 166E                            l3002 15EE                            l2210 1A82  
                          l2202 1A18                            l2130 18B0                            l2114 1852  
                          l2122 187C                            l2106 182C                            l3020 1704  
                          l3012 168E                            l3004 160E                            l2220 1ADA  
                          l2212 1A84                            l2204 1A22                            l2140 18C4  
                          l2132 18B4                            l2124 188C                            l2116 1862  
                          l2108 1832                            l2300 20F0                            l3022 1724  
                          l3014 16AE                            l3006 162E                            l2230 1B08  
                          l2214 1A94                            l2206 1A28                            l2150 18D8  
                          l2142 18C8                            l2134 18B8                            l2126 189E  
                          l2118 1872                            l2310 211C                            l2302 2100  
                          l3024 1744                            l3016 16CE                            l3008 164E  
                          l2232 1B16                            l2224 1AEE                            l2240 1B34  
                          l2208 1A4E                            l2216 1AA4                            l2152 18DC  
                          l2144 18CC                            l2136 18BC                            l2128 18AC  
                          l2160 18EC                            l2400 23C2                            l2312 212C  
                          l2320 2156                            l2304 2106                            l3026 1764  
                          l3018 16E4                            l2234 1B1E                            l2226 1AF8  
                          l2218 1ACA                            l2242 1B42                            l2170 195C  
                          l2162 18F0                            l2154 18E0                            l2146 18D0  
                          l2138 18C0                            l2090 17D8                            l2082 17AA  
                          l2410 2420                            l2402 23D8                            l2330 2198  
                          l2322 2166                            l2314 213C                            l2306 210C  
                          l3028 1784                            l2252 1B94                            l2260 1BEA  
                          l2244 1B46                            l2236 1B22                            l2228 1B06  
                          l2180 1986                            l2172 1968                            l2164 191A  
                          l2156 18E4                            l2148 18D4                            l2092 17E8  
                          l2084 17B8                            l2412 2426                            l2404 23F2  
                          l2324 217C                            l2316 214C                            l2308 211A  
                          l2500 1EE2                            l2270 1C3C                            l2262 1BFA  
                          l2254 1BA0                            l2246 1B54                            l2238 1B32  
                          l2190 19DC                            l2182 19A8                            l2174 196C  
                          l2166 1936                            l2158 18E8                            l2094 17F8  
                          l2086 17C6                            l2414 2428                            l2406 240E  
                          l2350 221A                            l2342 21D0                            l2326 218C  
                          l2334 21AC                            l2318 214E                            l2510 1F38  
                          l2502 1EF0                            l2430 1C9A                            l2422 1C6C  
                          l3070 338C                            l2280 1C5A                            l2272 1C42  
                          l2264 1C0A                            l2256 1BAE                            l2248 1B6A  
                          l2192 19EA                            l2184 19B8                            l2176 197A  
                          l2168 1946                            l2096 17FA                            l2088 17C8  
                          l2408 2412                            l2360 2260                            l2352 2222  
                          l2344 21EA                            l2336 21BC                            l2328 2194  
                          l2512 1F46                            l2504 1F0E                            l2440 1CD6  
                          l2432 1CAA                            l2424 1C7A                            l2600 2630  
                          l3072 339A                            l3064 3366                            l3146 3292  
                          l2274 1C44                            l2266 1C2A                            l2258 1BE8  
                          l2194 19F8                            l2178 197C                            l2098 1802  
                          l2370 22B8                            l2362 227E                            l2354 2232  
                          l2346 21FA                            l2338 21BC                            l2290 20B6  
                          l2522 1FB0                            l2530 1FF8                            l2514 1F4A  
                          l2506 1F18                            l2450 1D0C                            l2442 1CDC  
                          l2434 1CBA                            l2426 1C88                            l2610 26A8  
                          l2602 2676                            l3066 336A                            l2700 3254  
                          l2276 1C4A                            l2268 1C2E                            l2196 1A04  
                          l2188 19CC                            l2380 22F6                            l2372 22BE  
                          l2364 2280                            l2356 2246                            l2348 220A  
                          l2292 20C6                            l2284 2098                            l2540 206C  
                          l2532 2012                            l2524 1FBC                            l2516 1F58  
                          l2508 1F26                            l2452 1D1C                            l2444 1CEA  
                          l2436 1CC0                            l2428 1C8A                            l2620 2730  
                          l2612 26B4                            l2604 268C                            l3068 3388  
                          l2702 325C                            l2278 1C58                            l2198 1A08  
                          l2390 2360                            l2382 22FA                            l2374 22C8  
                          l2366 2290                            l2358 2254                            l2294 20D6  
                          l2286 20A6                            l2542 207A                            l2534 2026  
                          l2526 1FCA                            l2518 1F86                            l2470 1D9E  
                          l2462 1D66                            l2454 1D22                            l2446 1CEC  
                          l2438 1CD0                            l2630 276E                            l2622 273C  
                          l2614 26E6                            l2704 3274                            l2720 3480  
                          l2392 236C                            l2384 2308                            l2376 22D6  
                          l2368 22A2                            l2296 20E6                            l2288 20B4  
                          l2544 207C                            l2536 2040                            l2528 1FF4  
                          l2480 1DE8                            l2472 1DB6                            l2464 1D72  
                          l2456 1D42                            l2448 1CFC                            l2560 2C5E  
                          l2552 2C08                            l2632 2792                            l2624 274A  
                          l2616 26E8                            l2608 26A0                            l2730 2D38  
                          l2394 237A                            l2386 2336                            l2378 22E8  
                          l2298 20E8                            l2538 205C                            l2546 2082  
                          l2490 1E3E                            l2482 1DF8                            l2474 1DC2  
                          l2466 1D7C                            l2458 1D52                            l2562 2C60  
                          l2554 2C20                            l2634 27A2                            l2626 2768  
                          l2618 26F4                            l2714 2E16                            l2708 327C  
                          l2900 33D2                            l2732 2DB8                            l2724 2D10  
                          l2740 312C                            l2396 23A4                            l2548 2086  
                          l2492 1E5A                            l2484 1E04                            l2476 1DCE  
                          l2468 1D92                            l2564 2C70                            l2636 27B0  
                          l2628 276A                            l2716 2E1E                            l2902 33F0  
                          l2742 3180                            l2734 3122                            l2830 2ED2  
                          l2398 23A8                            l2494 1E66                            l2486 1E14  
                          l2478 1DDC                            l2590 2CEE                            l2574 2C9A  
                          l2566 2C74                            l2558 2C34                            l2638 27B2  
                          l2718 2EBA                            l2920 3434                            l2912 3402  
                          l2904 33F8                            l2728 2D28                            l2744 3182  
                          l2840 2F14                            l2832 2EE8                            l2496 1E82  
                          l2488 1E2E                            l2592 2CFE                            l2584 2CC2  
                          l2576 2CA4                            l2568 2C82                            l2914 3410  
                          l2746 3184                            l2842 2F32                            l2834 2EF0  
                          l2850 3098                            l2930 1170                            l2922 0F54  
                          l2498 1EAC                            l2586 2CCE                            l2578 2CAE  
                          l2916 3422                            l2908 33FE                            l2748 318A  
                          l2844 2F42                            l2836 2EFC                            l2828 2EC0  
                          l2860 30F0                            l2852 30B0                            l2940 120E  
                          l2932 118E                            l2924 0F60                            l2588 2CDE  
                          l2596 2610                            l2918 342A                            l2846 2F44  
                          l2838 2F0A                            l2862 3100                            l2854 30B8  
                          l2950 12AE                            l2942 122E                            l2934 11AE  
                          l2926 0F60                            l2598 2622                            l2870 3052  
                          l2696 3238                            l2848 2F4E                            l2864 310A  
                          l2856 30C4                            l2960 134E                            l2952 12CE  
                          l2944 124E                            l2936 11CE                            l2928 0F80  
                          l2880 3074                            l2872 3062                            l2698 323C  
                          l2858 30D2                            l2970 13EE                            l2962 136E  
                          l2954 12EE                            l2946 126E                            l2938 11EE  
                          l2890 3092                            l2882 3078                            l2874 3068  
                          l2866 300A                            l2980 148E                            l2972 140E  
                          l2964 138E                            l2956 130E                            l2948 128E  
                          l2892 3094                            l2884 307C                            l2876 306C  
                          l2868 3036                            l2894 33B6                            l2990 152E  
                          l2982 14AE                            l2974 142E                            l2966 13AE  
                          l2958 132E                            l2886 3080                            l2878 3070  
                          l2896 33CA                            l2992 154E                            l2984 14CE  
                          l2976 144E                            l2968 13CE                            l2888 3084  
                          l2898 33CE                            l2994 156E                            l2986 14EE  
                          l2978 146E                            l2996 158E                            l2988 150E  
                          l2998 15AE                            ?_isr 0001                            u2000 20C6  
                          u2001 20C2                            u2010 20D6                            u2011 20D2  
                          u2100 22A2                            u2020 211A                            u2101 229E  
                          u2021 2116                            u2110 22B8                            u2030 212C  
                          u2111 22B4                            u2031 2128                            u2200 23F2  
                          u2120 22D6                            u2040 213C                            u2201 23EE  
                          u2121 22D2                            u2041 2138                            u2210 2420  
                          u2130 22F6                            u2050 217C                            u2211 241C  
                          u2131 22F2                            u2051 2178                            u2140 2308  
                          u2060 21BC                            u2300 1ECC                            u2220 1C88  
                          u2141 2304                            u2061 21B8                            u2221 1C84  
                          u2150 2336                            u2070 2232                            u2310 1F26  
                          u2230 1C9A                            u3030 3388                            u2151 2332  
                          u2071 222E                            u2311 1F22                            u2231 1C96  
                          u3031 3384                            u1600 17C6                            u2160 234C  
                          u2080 2254                            u2400 207A                            u2320 1F46  
                          u2240 1CAA                            u3040 339A                            u1601 17C2  
                          u2161 2348                            u2081 2250                            u2401 2076  
                          u2321 1F42                            u2305 1EC2                            u2241 1CA6  
                          u3041 3396                            u1610 17D8                            u2170 2360  
                          u2090 227E                            u2330 1F58                            u2250 1CEA  
                          u2410 2C20                            u1611 17D4                            u2171 235C  
                          u2091 227A                            u2331 1F54                            u2251 1CE6  
                          u2411 2C1C                            u1700 1932                            u1620 17E8  
                          u2180 237A                            u2340 1F86                            u2260 1CFC  
                          u2420 2C54                            u2500 268C                            u1701 192C  
                          u1621 17E4                            u2181 2376                            u2341 1F82  
                          u2261 1CF8                            u2501 2688                            u1710 1934  
                          u1630 182A                            u2190 23C2                            u2350 1F9C  
                          u2270 1D0C                            u2430 2C82                            u2510 26E2  
                          u1631 1826                            u2191 23BE                            u2351 1F98  
                          u2271 1D08                            u2431 2C7E                            u2511 26DE  
                          u1800 1A4E                            u1720 195C                            u1640 1840  
                          u2360 1FB0                            u2280 1D42                            u2440 2C96  
                          u2520 272C                            u1801 1A4A                            u1721 1958  
                          u1641 183C                            u2361 1FAC                            u2281 1D3E  
                          u2441 2C92                            u2425 2C4A                            u2521 2728  
                          u1810 1A94                            u1730 197A                            u1650 1852  
                          u2370 1FCA                            u2290 1D52                            u2450 2CBE  
                          u2530 274A                            _T2PR 000FBB                            u1811 1A90  
                          u1731 1976                            u1651 184E                            u2371 1FC6  
                          u2291 1D4E                            u2451 2CBA                            u2531 2746  
                          u2700 2D66                            u1900 1B80                            u1820 1ACA  
                          u1740 199A                            u1660 1862                            u2380 2012  
                          u2460 2CDE                            u2540 275A                            u1901 1B7C  
                          u1821 1AC6                            u1741 1996                            u1661 185E  
                          u2381 200E                            u2461 2CDA                            u2541 2756  
                          u2710 2DE6                            u1910 1B94                            u1830 1ADA  
                          u1750 19A8                            u1670 189E                            u2390 2040  
                          u2470 2CEE                            u2550 2768                            u1911 1B90  
                          u1831 1AD6                            u1751 19A4                            u1671 189A  
                          u2391 203C                            u2471 2CEA                            u2551 2764  
                          u2720 3166                            u1920 1BAE                            u1840 1B06  
                          u1760 19B8                            u1680 18AC                            u2560 27A2  
                          u2480 2622                            u2705 2D54                            u1921 1BAA  
                          u1841 1B02                            u1761 19B4                            u1681 18A8  
                          u2561 279E                            u2481 261E                            u2730 317E  
                          u1930 1BE8                            u1850 1B16                            u1770 19EA  
                          u1690 191A                            u2570 27B0                            u2490 2630  
                          u2715 2DD4                            u2731 3178                            u1931 1BE4  
                          u1851 1B12                            u1771 19E6                            u1691 1916  
                          u2571 27AC                            u2491 262C                            u2900 2F32  
                          u1940 1BFA                            u1860 1B32                            u1780 19F8  
                          u2725 3154                            u2901 2F2E                            u1941 1BF6  
                          u1861 1B2E                            u1781 19F4                            u2750 31A6  
                          u2910 30B0                            u1950 1C0A                            u1870 1B42  
                          u1790 1A16                            u2751 31A2                            u2911 30AC  
                          u1951 1C06                            u1871 1B3E                            u1791 1A12  
                          u2680 2D24                            u2920 30D2                            u1960 1C2A  
                          u1880 1B54                            u2681 2D20                            u2745 3180  
                          u2921 30CE                            u1961 1C26                            u1881 1B50  
                          u2690 2D38                            u2930 30F0                            u1970 1C3C  
                          u1890 1B6A                            u2691 2D34                            u2931 30EC  
                          u1971 1C38                            u1891 1B66                            _PEIE 007F96  
                          u2940 33CA                            u1980 1C58                            u2941 33C6  
                          u1981 1C54                            u2950 33F0                            u1990 20B4  
                          u2951 33EC                            u1991 20B0                            u2960 3410  
                          u2880 2EE8                            u2961 340C                            u2881 2EE4  
                          u2970 3422                            u2890 2F0A                            u2971 341E  
                          u2891 2F06                            _RCIE 007605                            _RCIF 007645  
                          u2981 0F5A                            u2990 0F80                            u2991 0F7C  
                ??_Convert_data 0025                            _atol 2434                            _main 3366  
                          _init 300A                            fsr2h 000FDA                            indf2 000FDF  
                          fsr2l 000FD9                            btemp 004E                            prodh 000FF4  
                          prodl 000FF3                            start 0064                 ___fldiv@new_exp 0098  
                  ___param_bank 000000                           ??_isr 003C                   ___fltol@sign1 00B8  
                         ?_atol 000D                 __end_of___fladd 1C6C                           ?_main 0001  
                         ?_init 0001                 __end_of___fldiv 2434                 __end_of___flmul 2098  
               __end_of___fltol 2D10                 __end_of___lldiv 2F66                 __end_of___llmod 3122  
                         _T2CON 000FBC                           _LATC5 007C25                           _LATC6 007C26  
                         _LATC7 007C27                           i2l116 0058                           i2l160 296C  
                         i2l152 2B42                           i2l233 34E6                           i2l157 2C06  
                         i2l270 3008                           i2l247 3302                           i2l263 2FF8  
                         i2l248 3312                           i2l663 3232                           i2l656 3222  
                         i2l941 347A                           i2l935 25FA                           i2l938 260A  
                         i2l956 2AE2                           i2l949 3364                           _RCREG 000F98  
                         _RCSTA 000F9C                           _TMR0H 000FD3                           _TMR0L 000FD2  
                         _SPBRG 000F9A                           _TRISA 000F87                           _TRISB 000F88  
                         _TRISC 000F89                    RTC_Read@data 003B                           _TXREG 000F99  
                         _TXSTA 000F9D             ___lmul@multiplicand 0005          __size_of_Duty_Controll 0042  
            __size_of_UART_Init 00AA              __size_of_UART_Read 0016                 __end_of_isdigit 347C  
              __end_of_RTC_Read 2C08              __size_of_VFD_Write 0856                           atol@n 001D  
                         atol@s 000D                 __end_of_isspace 3366                           tablat 000FF5  
                         ttemp5 004F                           ttemp6 0052                           ttemp7 0056  
                         status 000FD8                           wtemp8 004F              __size_ofi2___lldiv 00A4  
            __size_ofi2___llmod 0088                 __initialization 34B0               i2___lldiv@divisor 0005  
                  __end_of_atol 260C                    __end_of_main 33B6                    __end_of_init 3098  
             i2___lldiv@counter 000D              __size_of_Check_Seg 0034                Set_PWM_Duty@duty 0060  
            __size_of_Bit_Write 0106                          ??_atol 0011                          ??_main 00BC  
                        ??_init 00BC                   __activetblptr 000003                ___llmod@dividend 006D  
                        _ANSELA 000F0C                          _ANSELB 000F14                          _ANSELC 000F1C  
                        _T0CON0 000FD4                          _T0CON1 000FD5                          _RC3PPS 000EF5  
                        i2l3030 2AE6                          i2l2080 32E2                          i2l2072 32AA  
                        i2l3032 2AEA                          i2l2074 32BA                          i2l3042 2B36  
                        i2l3034 2AFC                          i2l2076 32C8                          i2l3044 2B42  
                        i2l3036 2B18                          i2l3052 2B56                          i2l2078 32D8  
                        i2l3150 24F2                          i2l3038 2B20                          i2l3054 2BB2  
                        i2l3056 2BCE                          i2l3080 002C                          i2l3058 2BFE  
                        i2l3082 0042                          i2l3074 0012                          i2l3148 2B6C  
                        i2l3084 0050                          i2l3076 0022                          i2l3078 002A  
                        i2l2800 24C6                          i2l2650 335E                          i2l2642 3314  
                        i2l2810 2564                          i2l2802 24CE                          i2l1922 34D2  
                        i2l2660 2F76                          i2l2644 3318                          i2l2804 24D6  
                        i2l1924 34E0                          i2l2670 2FB8                          i2l2662 2F8C  
                        i2l2654 3444                          i2l2646 332C                          i2l2814 25A0  
                        i2l2806 2508                          i2l2750 296E                          i2l1926 34E4  
                        i2l2672 2FD6                          i2l2664 2F94                          i2l2680 31AC  
                        i2l2824 27C4                          i2l2648 335A                          i2l2816 25B2  
                        i2l2760 29CE                          i2l2674 2FE6                          i2l2666 2FA0  
                        i2l2658 2F66                          i2l2690 3202                          i2l2682 31C2  
                        i2l2818 25C4                          i2l2762 2A26                          i2l2754 298C  
                        i2l2676 2FE8                          i2l2668 2FAE                          i2l2692 3212  
                        i2l2684 31CA                          i2l2780 2AD0                          i2l2772 2A86  
                        i2l2756 2998                          i2l2678 2FF2                          i2l2694 321C  
                        i2l2686 31D6                          i2l2790 2472                          i2l2782 2434  
                        i2l2774 2ABA                          i2l2766 2A40                          i2l2688 31E4  
                        i2l2792 24A6                          i2l2784 2450                          i2l2776 2AC6  
                        i2l2768 2A6C                          i2l2794 24AA                          i2l2786 2454  
                        i2l2778 2ACC                          i2l2788 2458                          i2l2798 24B0  
                        _OSCFRQ 000ED9                          _T0_int 33B6                          _TMR0IE 0075ED  
                        _TMR0IF 00762D                          _RX1PPS 000EB0                __end_of___xxtofl 27C4  
                 _Duty_Controll 3402               __end_of_UART_Init 2EC0               __end_of_UART_Read 34E8  
                        ___lmul 32AA                          _g_t0_f 0043                       ??___fladd 00A8  
                     ??___fldiv 008F                       ??___flmul 0076                       ??___fltol 00B4  
                     ??___lldiv 0068                       ??___llmod 0075                          _g_time 00BC  
             __end_of_VFD_Write 17AA                          _memset 296E                          clear_0 34B6  
                        clear_1 34C2                          isa$std 000001                   ?_Set_PWM_Duty 0060  
          __end_of_Convert_data 296E                       ??_isdigit 0003               __end_ofi2___lldiv 300A  
             __end_ofi2___llmod 3234                    __mediumconst 0000                       ??_isspace 0003  
                        tblptrh 000FF7                          tblptrl 000FF6                          tblptru 000FF8  
             __end_of_Check_Seg 34B0                   Bit_Write@data 0067                    ___xxtofl@arg 006A  
                  ___xxtofl@exp 0069                    ___xxtofl@val 0060                      __accesstop 0060  
       __end_of__initialization 34C8               __end_of_Bit_Write 2E16           __end_of_MAX6922_Write 31AC  
                 ___rparam_used 000001                      ___fltol@f1 00B0                  ?_Duty_Controll 0001  
             i2___llmod@divisor 0012               i2___llmod@counter 0016                  __pcstackCOMRAM 0001  
            i2___lldiv@dividend 0001                  ??_Set_PWM_Duty 0062                       ?_RTC_Read 0001  
            i2___lldiv@quotient 0009                      __pbssBANK0 00BC          Duty_Controll@cnt_limit 0F51  
              Duty_Controll@cnt 00C2                         ?_T0_int 0060                     T0_int2@flag 0042  
                     T0_int@cnt 00C0                       T0_int@val 0060                         ?___lmul 0001  
                       ?_memset 0001                  ___lmul@product 0009                      ??_RTC_Read 0039  
                     ?___xxtofl 0060                         _OSCCON1 000ED3                         _PWM3DCH 000FA3  
                       _PWM3DCL 000FA2                         _PWM4DCH 000FA0                         _PWM4DCL 000F9F  
                       _PWM3CON 000FA4                         _PPSLOCK 000E9B                 ??_Duty_Controll 0065  
               __size_of_T0_int 004C                         __Hparam 0000                         __Lparam 0000  
               Convert_data@min 002D                 Convert_data@sec 0031                         ___fladd 17AA  
                       ___fldiv 2098                 __size_of___lmul 006A                         ___flmul 1C6C  
                       ___fltol 2C08           __size_of_Convert_data 01AA                         ___lldiv 2EC0  
                       ___llmod 3098                    __psmallconst 0F00                         __pcinit 34B0  
               __size_of_memset 0176                         __ramtop 0F00                         __ptext0 3366  
                       __ptext1 300A                         __ptext2 2E16                         __ptext3 260C  
                       __ptext4 2C08                         __ptext5 1C6C                         __ptext6 2098  
                       __ptext7 17AA                         __ptext8 0F54                         __ptext9 3098  
                       _isdigit 3444                    __size_of_isr 005C           __end_ofCheck_Seg@data 0F51  
                    ??___xxtofl 0064                         _isspace 3314                         atol@neg 0016  
          end_of_initialization 34C8                    Check_Seg@num 0063                    Check_Seg@pos 0060  
          __end_of_Set_PWM_Duty 32AA                         memset@c 0003                  MAX6922_Write@i 0070  
                       memset@k 0009                         memset@n 0005                         memset@s 000B  
                  _Convert_data 27C4                 ___lldiv@divisor 0064                 ___lldiv@counter 006C  
                       postinc0 000FEE                         postinc2 000FDE                       _UART_Init 2E16  
                     _UART_Read 34D2                       _VFD_Write 0F54                     ___fladd@grs 00AF  
                 ___xxtofl@sign 0068                     ___fldiv@grs 009A                     ___fldiv@rem 0093  
                     i2___lldiv 2F66                       i2___llmod 31AC                     ___flmul@grs 007B  
                     _Check_Seg 347C              i2___llmod@dividend 000E                  __end_of_T0_int 3402  
                     _Bit_Write 2D10                  __end_of___lmul 3314                     RTC_Read@cnt 0040  
                    ?_UART_Init 00BA                      ?_UART_Read 0001                     RTC_Read@str 0044  
                __end_of_memset 2AE4                      ?_VFD_Write 0079               __size_of_RTC_Read 0124  
           start_initialization 34B0                     __end_of_isr 0064                      ?i2___lldiv 0001  
                    ?i2___llmod 000E                        ??_T0_int 0062                      ?_Check_Seg 0060  
               ___llmod@divisor 0071                 ___llmod@counter 0075                      ?_Bit_Write 0064  
                      ??___lmul 0009                     _CCPTMRSbits 000FAD                        ??_memset 0007  
             MAX6922_Write@data 0060                      memset@dest 0001                    Bit_Write@num 0066  
                     ___fladd@a 00A4                       ___fladd@b 00A0                    Bit_Write@ptr 0064  
                     ___fldiv@a 008B                       ___fldiv@b 0087  __end_ofDuty_Controll@cnt_limit 0F53  
                     ___flmul@a 0072                       ___flmul@b 006E                     __pbssCOMRAM 003E  
        __size_of_MAX6922_Write 008A                   __pcstackBANK0 0060               __size_of___xxtofl 01B8  
         __size_of_Set_PWM_Duty 0076                      T0_int2@cnt 003E                       __pintcode 0008  
                 UART_Init@baud 00BA                        ?___fladd 00A0                        ?___fldiv 0087  
                      ?___flmul 006E                      T0_int@flag 00C4                        ?___fltol 00B0  
                      ?___lldiv 0060                        ?___llmod 006D                     ??_UART_Init 00BC  
                   ??_UART_Read 0001                    _Set_PWM_Duty 3234                     ??_VFD_Write 007D  
                   __smallconst 0F00                        ?_isdigit 0001                        ?_isspace 0001  
                   ??i2___lldiv 0009                        _T2CLKCON 000FBE                     ??i2___llmod 0016  
                   ??_Check_Seg 0061           __end_of_Duty_Controll 3444                   _MAX6922_Write 3122  
                   ??_Bit_Write 0068                        i2u300_40 2AFC                        i2u300_41 2AF8  
                      i2u301_40 2B32                        i2u301_41 2B2E                        i2u302_40 2BCE  
                      i2u302_41 2BCA                        i2u143_40 34E0                        i2u143_41 34DC  
                      i2u305_40 0022                        i2u305_41 001E                        i2u306_40 003E  
                      i2u306_41 0038                        i2u307_40 0040                        i2u260_40 3474  
                      i2u308_40 0050                        i2u260_41 346E                        i2u308_41 004C  
                      i2u261_40 3476                        i2u158_40 32C8                        i2u262_40 2F8C  
                      i2u158_41 32C4                        i2u262_41 2F88                        i2u159_40 3302  
                      i2u263_40 2FAE                        i2u159_41 32FE                        i2u263_41 2FAA  
                      i2u264_40 2FD6                        i2u280_40 2AE2                        i2u264_41 2FD2  
                      i2u280_41 2ADE                        i2u265_40 31C2                        i2u281_40 2472  
                      i2u265_41 31BE                        i2u281_41 246E                        i2u266_40 31E4  
                      i2u258_40 332C                        i2u282_40 24A6                        i2u266_41 31E0  
                      i2u258_41 3328                        i2u282_41 24A2                        i2u267_40 3202  
                      i2u259_40 335A                        i2u283_40 24C2                        i2u267_41 31FE  
                      i2u259_41 3356                        i2u283_41 24BE                        i2u284_40 259A  
                      i2u276_40 2988                        i2u284_41 2594                        i2u276_41 2984  
                      i2u285_40 259C                        i2u277_40 29CA                        i2u277_41 29C6  
                      i2u286_40 25B2                        i2u278_40 2A3C                        i2u286_41 25AE  
                      i2u278_41 2A38                        i2u287_40 25C4                        i2u279_40 2A82  
                      i2u287_41 25C0                        i2u279_41 2A7E                        _RTC_Read 2AE4  
             ___lmul@multiplier 0001                  ?_MAX6922_Write 0060                        __Hrparam 0000  
              Convert_data@data 0021                Convert_data@hour 0035                        __Lrparam 0000  
              __size_of___fladd 04C2                __size_of___fldiv 039C                __size_of___flmul 042C  
              __size_of___fltol 0108                __size_of___lldiv 00A6                __size_of___llmod 008A  
                      ___xxtofl 260C                        _atol$780 001A                        _atol$778 0018  
                      _atol$779 001C                __size_of_isdigit 0038                __size_of_isspace 0052  
                      __ptext10 2EC0                        __ptext11 3122                        __ptext20 296E  
                      __ptext12 347C                        __ptext21 2434                        __ptext13 2D10  
                      __ptext22 3314                        __ptext14 33B6                        __ptext23 3444  
                      __ptext15 3402                        __ptext24 27C4                        __ptext16 3234  
                      __ptext25 31AC                        __ptext26 2F66                        __ptext18 34D2  
                      __ptext27 32AA                        __ptext19 2AE4                   __size_of_atol 01D8  
                 __size_of_main 0050                   __size_of_init 008E                      _RC1STAbits 000F9C  
                      isa$xinst 000000                        int$flags 004E                     _isspace$796 0007  
                    _INTCONbits 000FF2                   Check_Seg@data 0F01                        isdigit@c 0001  
                      intlevel2 0000                 ??_MAX6922_Write 0068                        isspace@c 0001  
              ___lldiv@dividend 0060                   VFD_Write@data 0079                   VFD_Write@buff 007D  
                 VFD_Write@temp 0083                ___lldiv@quotient 0068                      _TX1STAbits 000F9D  
                 ___fladd@signs 00AC                    ___fladd@aexp 00AD                    ___fladd@bexp 00AE  
                 ?_Convert_data 0021  
